<?xml version="1.0"?>
<Definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Prefabs>
    <Prefab xsi:type="MyObjectBuilder_PrefabDefinition">
      <Id Type="MyObjectBuilder_PrefabDefinition" Subtype="GVE-NPC Cyclone Fighter Bomber" />
      <CubeGrids>
        <CubeGrid>
          <SubtypeName />
          <EntityId>135807717780930571</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="0" y="0" z="0" />
            <Forward x="-0.7931319" y="-0.602100968" z="-0.09173894" />
            <Up x="0.234680578" y="-0.44111976" z="0.8662205" />
            <Orientation>
              <X>0.4436668</X>
              <Y>0.507238</Y>
              <Z>0.723684847</Z>
              <W>0.148827717</W>
            </Orientation>
          </PositionAndOrientation>
          <LocalPositionAndOrientation xsi:nil="true" />
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Cockpit">
              <SubtypeName>DBSmallBlockFighterCockpit</SubtypeName>
              <EntityId>109852676443102452</EntityId>
              <Min x="-1" y="6" z="-2" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>1</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                  <ComponentData>
                    <TypeId>MyModStorageComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key>74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value>[Artificial Horizon - Text Surface Config]
Show on screen 0=true
Show on screen 1=false
Show on screen 2=false
Show on screen 3=false
Show on screen 4=false
Show on screen 5=false

---
@1 AutoLCD

Echo
Center &lt;&lt;&lt; POWER SUMMARY &gt;&gt;&gt;
InvlistS {Cyclone Large Reactor} +ingot/uranium:25
PowerStored {Cyclone Battery}
PowerTime

@2 AutoLCD

Echo
Center &lt;&lt;&lt; ELECTROLYSIS &gt;&gt;&gt;
Working {Cyclone O2/H2 Generator}
InvlistS {Cyclone O2/H2 Generator} +ore/ice:2500

@3 AutoLCD

Center [[[ COMBAT INFO ]]]
Echo
Center &lt;&lt;&lt; AMMUNITION &gt;&gt;&gt;
Echo -Guns-
InvlistX {Cyclone Gatling Gun} +nato_25x184mm
Echo -Rocket Launchers-
InvlistX {Cyclone Rocket Launcher} +missile200mm
Echo -Turrets-
InvListX {Cyclone Gatling Turret Port} +nato_25x184mm
InvListX {Cyclone Gatling Turret Starboard} +nato_25x184mm
Echo -Storage-
InvlistX {G:Cyclone Ammo Containers} +nato_25x184mm
Echo
Center &lt;&lt;&lt; DAMAGE REPORT &gt;&gt;&gt;
DamageNoC</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Fighter Cockpit (Horizon) [LCD]</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <UseSingleWeaponMode>false</UseSingleWeaponMode>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemWeapon">
                      <DefinitionId Type="MyObjectBuilder_SmallGatlingGun" Subtype="" />
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemWeapon">
                      <DefinitionId Type="MyObjectBuilder_SmallMissileLauncher" Subtype="" />
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>2</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TriggerNow</Action>
                      <BlockEntityId>75448174501038099</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>4</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>AutoPilot</Action>
                      <BlockEntityId>128485378294518787</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>5</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>135393174128687096</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>6</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>91541480810864719</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>8</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>140319766582095570</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>9</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>136390469584426419</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>10</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>SwitchLock</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>109852676443102452</BlockEntityId>
                      <GroupName>Cyclone Landing Gear</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>12</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>113334718508095891</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>13</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>108692332940433959</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>14</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>109852676443102452</BlockEntityId>
                      <GroupName>Cyclone Batteries</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>16</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>78028355961773135</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>18</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TriggerNow</Action>
                      <BlockEntityId>113451656840803076</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>21</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>100152124634134012</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>22</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>reset</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>136827397296818396</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>23</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>79811397474814354</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>26</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TriggerNow</Action>
                      <BlockEntityId>99158873653440964</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemWeapon">
                      <DefinitionId Type="MyObjectBuilder_SmallGatlingGun" Subtype="" />
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemWeapon">
                      <DefinitionId Type="MyObjectBuilder_SmallMissileLauncher" Subtype="" />
                    </Data>
                  </Slot>
                </SlotsGamepad>
              </Toolbar>
              <SelectedGunId xsi:nil="true" />
              <BuildToolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
                <SlotsGamepad />
              </BuildToolbar>
              <PilotRelativeWorld>
                <Position x="-3.0573203563690186" y="-1.5234837532043457" z="-2.1891615390777588" />
                <Forward x="0.7072073" y="0.0263860431" z="0.7065137" />
                <Up x="0.07668198" y="0.9905457" z="-0.113751255" />
                <Orientation>
                  <X>0.0572989136</X>
                  <Y>0.921940148</Y>
                  <Z>-0.03800061</Z>
                  <W>-0.3811812</W>
                </Orientation>
              </PilotRelativeWorld>
              <PilotGunDefinition xsi:nil="true" />
              <IsInFirstPersonView>true</IsInFirstPersonView>
              <OxygenLevel>1</OxygenLevel>
              <PilotJetpackEnabled xsi:nil="true" />
              <TextPanels>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <Text> 
            &lt;&lt;&lt; POWER SUMMARY &gt;&gt;&gt;
 [''''''''''''''''''''''] Uranium                       0 / 25
 Batteries:                         3 MWh / 3 MWh
 [|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||] 100.0%
 Power Time:                1 days 2h 37m 49s</Text>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <ContentType>SCRIPT</ContentType>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1.45</FontSize>
                  <Text> 
 &lt;&lt;&lt; POWER SUMMARY &gt;&gt;&gt;
 [''''''''''''''] Uranium        0 / 25
 Batteries:   3 MWh / 3 MWh
 [|||||||||||||||||||||||||||||||||||||||||] 100.0%
 Power Time: 1 days 5h 42m 6s</Text>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294935100</PackedValue>
                    <X>60</X>
                    <Y>130</Y>
                    <Z>255</Z>
                    <R>60</R>
                    <G>130</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <ContentType>TEXT_AND_IMAGE</ContentType>
                  <SelectedScript>TSS_ClockAnalog</SelectedScript>
                  <TextPadding>2</TextPadding>
                  <CustomizeScripts>true</CustomizeScripts>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1.45</FontSize>
                  <Text> 
    &lt;&lt;&lt; ELECTROLYSIS &gt;&gt;&gt;
 Cyclone O2/H2 G..          ON
 [''''''''''''''] Ice            0 / 2.5 k</Text>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294935100</PackedValue>
                    <X>60</X>
                    <Y>130</Y>
                    <Z>255</Z>
                    <R>60</R>
                    <G>130</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <ContentType>TEXT_AND_IMAGE</ContentType>
                  <SelectedScript>TSS_Gravity</SelectedScript>
                  <TextPadding>2</TextPadding>
                  <CustomizeScripts>true</CustomizeScripts>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>2.45</FontSize>
                  <Text> -Turrets-
 -Storage-
 
       &lt;&lt;&lt; DAMAGE REPORT &gt;&gt;&gt;
 No damaged blocks found.</Text>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294935100</PackedValue>
                    <X>60</X>
                    <Y>130</Y>
                    <Z>255</Z>
                    <R>60</R>
                    <G>130</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <ContentType>TEXT_AND_IMAGE</ContentType>
                  <SelectedScript>TSS_EnergyHydrogen</SelectedScript>
                  <TextPadding>2</TextPadding>
                  <CustomizeScripts>true</CustomizeScripts>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
              </TextPanels>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="1" y="7" z="-3" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="-1" y="7" z="-3" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="0" y="7" z="-3" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
              <Min x="1" y="6" z="-3" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
              <Min x="-1" y="6" z="-3" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="-2" y="6" z="-2" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="2" y="6" z="-2" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="-2" y="6" z="-1" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="2" y="6" z="-1" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="6" z="0" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="6" z="0" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="6" z="1" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="6" z="1" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="6" z="2" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="6" z="2" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="-2" y="7" z="2" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="2" y="7" z="2" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
              <Min x="2" y="7" z="3" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
              <Min x="-2" y="7" z="3" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="2" y="8" z="3" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-2" y="8" z="3" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_SmallGatlingGun">
              <SubtypeName />
              <EntityId>141826922460608647</EntityId>
              <Min x="1" y="5" z="-5" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Gatling Gun 03</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsShooting>false</IsShooting>
              <IsShootingFromTerminal>false</IsShootingFromTerminal>
              <IsLargeTurret>false</IsLargeTurret>
              <MinFov>0.1</MinFov>
              <MaxFov>1.04719758</MaxFov>
              <GunBase>
                <RemainingAmmo>90</RemainingAmmo>
                <CurrentAmmoMagazineName>NATO_25x184mm</CurrentAmmoMagazineName>
                <RemainingAmmosList>
                  <RemainingAmmoIns SubtypeName="NATO_25x184mm" Amount="115" />
                </RemainingAmmosList>
                <LastShootTime>637095043025149961</LastShootTime>
              </GunBase>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_SmallGatlingGun">
              <SubtypeName />
              <EntityId>119373751278786041</EntityId>
              <Min x="-1" y="5" z="-5" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Gatling Gun 02</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsShooting>false</IsShooting>
              <IsShootingFromTerminal>false</IsShootingFromTerminal>
              <IsLargeTurret>false</IsLargeTurret>
              <MinFov>0.1</MinFov>
              <MaxFov>1.04719758</MaxFov>
              <GunBase>
                <RemainingAmmo>104</RemainingAmmo>
                <CurrentAmmoMagazineName>NATO_25x184mm</CurrentAmmoMagazineName>
                <RemainingAmmosList>
                  <RemainingAmmoIns SubtypeName="NATO_25x184mm" Amount="114" />
                </RemainingAmmosList>
                <LastShootTime>637095043000316007</LastShootTime>
              </GunBase>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>123153600820453645</EntityId>
              <Min x="0" y="5" z="-2" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_OxygenGenerator">
              <SubtypeName>OxygenGeneratorSmall</SubtypeName>
              <EntityId>78028355961773135</EntityId>
              <Min x="-1" y="6" z="4" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>1</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>300</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone O2/H2 Generator</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="-2" y="6" z="3" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>122445320937337945</EntityId>
              <Min x="0" y="5" z="3" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>123357790758785703</EntityId>
              <Min x="0" y="5" z="-1" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockSmallContainer</SubtypeName>
              <EntityId>113084846985839505</EntityId>
              <Min x="0" y="5" z="0" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Ammunition Container 08</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockSmallContainer</SubtypeName>
              <EntityId>111247018152855368</EntityId>
              <Min x="-1" y="5" z="-1" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Ammunition Container 01</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockSmallContainer</SubtypeName>
              <EntityId>81087878209890627</EntityId>
              <Min x="0" y="5" z="1" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Ammunition Container 09</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockSmallContainer</SubtypeName>
              <EntityId>119299921331480481</EntityId>
              <Min x="1" y="5" z="-1" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Ammunition Container 07</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="5" z="0" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="5" z="1" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="5" z="2" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="5" z="2" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="5" z="1" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="5" z="0" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockSmallContainer</SubtypeName>
              <EntityId>98796018309792490</EntityId>
              <Min x="0" y="5" z="2" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Ammunition Container 10</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="9" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-1" y="9" z="4" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="1" y="9" z="4" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="2" y="6" z="3" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="-1" y="5" z="3" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="1" y="5" z="3" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockSmallContainer</SubtypeName>
              <EntityId>72580621592507746</EntityId>
              <Min x="0" y="6" z="-3" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Ammunition Container 11</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="2" y="6" z="-3" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-2" y="6" z="-3" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-2" y="7" z="1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="2" y="7" z="1" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="7" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="7" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="8" z="4" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="8" z="4" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="1" y="4" z="-2" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="-1" y="4" z="-2" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorInvCorner</SubtypeName>
              <EntityId>123239820994507719</EntityId>
              <Min x="0" y="5" z="-3" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
              <SubtypeName>SmallCameraBlock</SubtypeName>
              <EntityId>73492530432580579</EntityId>
              <Min x="0" y="4" z="-2" />
              <IntegrityPercent>0.50000006</IntegrityPercent>
              <BuildPercent>0.50000006</BuildPercent>
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <CustomName>Camera (Deco)</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <IsActive>false</IsActive>
              <Fov>1.04719758</Fov>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCornerInv</SubtypeName>
              <Min x="0" y="9" z="5" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorMedium</SubtypeName>
              <EntityId>111186629731583967</EntityId>
              <Min x="-1" y="8" z="6" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>1.152</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame10</TimerType>
                      <FramesFromLastTrigger>50</FramesFromLastTrigger>
                      <TimerTickInFrames>80</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Connector</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>false</ShowInInventory>
              <Enabled>true</Enabled>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>true</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="2" y="8" z="5" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="6" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="-2" y="8" z="5" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="6" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Reactor">
              <SubtypeName>SmallBlockLargeGenerator</SubtypeName>
              <EntityId>108692332940433959</EntityId>
              <Min x="-1" y="5" z="6" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>1</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>false</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>900</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Large Reactor</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Capacity>0</Capacity>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>91840538906374923</EntityId>
              <Min x="1" y="4" z="4" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>132239664465659110</EntityId>
              <Min x="-1" y="4" z="4" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="0" y="4" z="3" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ReflectorLight">
              <SubtypeName>SmallBlockFrontLight</SubtypeName>
              <EntityId>109550847543023436</EntityId>
              <Min x="0" y="4" z="-1" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <CustomName>Cyclone Spotlight</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <Radius>10</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <ColorRed>0.7058824</ColorRed>
              <ColorGreen>0.784313738</ColorGreen>
              <Falloff>1.5</Falloff>
              <Intensity>3</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
              <Offset>0.5</Offset>
              <RotationSpeed>0.08</RotationSpeed>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorSide</SubtypeName>
              <EntityId>127633436465112880</EntityId>
              <Min x="0" y="4" z="0" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_SmallGatlingGun">
              <SubtypeName />
              <EntityId>72598928541633256</EntityId>
              <Min x="-2" y="5" z="-4" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Gatling Gun 01</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsShooting>false</IsShooting>
              <IsShootingFromTerminal>false</IsShootingFromTerminal>
              <IsLargeTurret>false</IsLargeTurret>
              <MinFov>0.1</MinFov>
              <MaxFov>1.04719758</MaxFov>
              <GunBase>
                <RemainingAmmo>16</RemainingAmmo>
                <CurrentAmmoMagazineName>NATO_25x184mm</CurrentAmmoMagazineName>
                <RemainingAmmosList>
                  <RemainingAmmoIns SubtypeName="NATO_25x184mm" Amount="56" />
                </RemainingAmmosList>
                <LastShootTime>637095043042818987</LastShootTime>
              </GunBase>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-1" y="4" z="-1" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension1x1mirrored</SubtypeName>
              <EntityId>84393465110351573</EntityId>
              <Min x="0" y="3" z="1" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <CustomName>Wheel Suspension 1x1 (Deco)</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <TopBlockId xsi:nil="true" />
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Damping>0.9</Damping>
              <Strength>3.40282347E+38</Strength>
              <Propulsion>true</Propulsion>
              <Friction>2.8</Friction>
              <Power>0</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0.349066</MaxSteerAngle>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SpeedLimit>180</SpeedLimit>
              <PowerNew>0.6</PowerNew>
              <StrengthNew>0.06</StrengthNew>
              <FrictionNew>0.5</FrictionNew>
              <AirShockEnabled>true</AirShockEnabled>
              <BrakingEnabled>true</BrakingEnabled>
              <SteeringOverride>0</SteeringOverride>
              <PropulsionOverride>0</PropulsionOverride>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_SmallGatlingGun">
              <SubtypeName />
              <EntityId>97445719358822321</EntityId>
              <Min x="2" y="5" z="-4" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Gatling Gun 04</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsShooting>false</IsShooting>
              <IsShootingFromTerminal>false</IsShootingFromTerminal>
              <IsLargeTurret>false</IsLargeTurret>
              <MinFov>0.1</MinFov>
              <MaxFov>1.04719758</MaxFov>
              <GunBase>
                <RemainingAmmo>40</RemainingAmmo>
                <CurrentAmmoMagazineName>NATO_25x184mm</CurrentAmmoMagazineName>
                <RemainingAmmosList>
                  <RemainingAmmoIns SubtypeName="NATO_25x184mm" Amount="56" />
                </RemainingAmmosList>
                <LastShootTime>637095043024980425</LastShootTime>
              </GunBase>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="1" y="4" z="-1" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorSide</SubtypeName>
              <EntityId>132325474186048558</EntityId>
              <Min x="-2" y="5" z="0" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorSide</SubtypeName>
              <EntityId>125698385411435902</EntityId>
              <Min x="-2" y="5" z="1" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorSide</SubtypeName>
              <EntityId>135311328066800405</EntityId>
              <Min x="-2" y="5" z="2" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorSide</SubtypeName>
              <EntityId>100546133980866556</EntityId>
              <Min x="2" y="5" z="2" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorSide</SubtypeName>
              <EntityId>92515464438412528</EntityId>
              <Min x="2" y="5" z="1" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorSide</SubtypeName>
              <EntityId>75769040555921272</EntityId>
              <Min x="2" y="5" z="0" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorCorner</SubtypeName>
              <EntityId>137569448847139608</EntityId>
              <Min x="0" y="4" z="2" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
              <Min x="-1" y="9" z="5" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
              <Min x="1" y="9" z="5" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorCorner</SubtypeName>
              <EntityId>92251935047301972</EntityId>
              <Min x="-2" y="5" z="3" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>75325879702229895</EntityId>
              <Min x="-1" y="4" z="2" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>131278841315510978</EntityId>
              <Min x="1" y="4" z="2" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorCorner</SubtypeName>
              <EntityId>73768139019409369</EntityId>
              <Min x="2" y="5" z="3" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="3" y="6" z="5" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="7" z="5" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>77368609261592075</EntityId>
              <Min x="3" y="7" z="3" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="7" z="5" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>117935974997296520</EntityId>
              <Min x="-3" y="7" z="3" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="8" z="4" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="8" z="4" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="1" y="4" z="-3" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-1" y="4" z="-3" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
              <SubtypeName>SmallCameraBlock</SubtypeName>
              <EntityId>140319766582095570</EntityId>
              <Min x="0" y="5" z="-4" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Aiming Camera</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsActive>false</IsActive>
              <Fov>1.04696131</Fov>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
              <SubtypeName>SmallBlockSmallLight</SubtypeName>
              <EntityId>75655865655366360</EntityId>
              <Min x="0" y="4" z="-3" />
              <IntegrityPercent>0.333333343</IntegrityPercent>
              <BuildPercent>0.333333343</BuildPercent>
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <CustomName>Interior Light (Deco)</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <Radius>3.6</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <Falloff>1.3</Falloff>
              <Intensity>5</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
              <Offset>0.5</Offset>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="8" z="6" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="8" z="8" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="8" z="8" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="8" z="6" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorInvCorner</SubtypeName>
              <EntityId>111743088876095849</EntityId>
              <Min x="-2" y="8" z="7" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorInvCorner</SubtypeName>
              <EntityId>76547788518906253</EntityId>
              <Min x="2" y="8" z="7" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="2" y="9" z="5" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="5" z="3" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-2" y="9" z="5" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="5" z="3" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="4" z="8" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
              <EntityId>119586670173972919</EntityId>
              <Min x="-4" y="5" z="6" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Battery 01</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.995352864</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
              <EntityId>114033111111664309</EntityId>
              <Min x="2" y="5" z="6" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Battery 03</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.9953528</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="4" z="11" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>142360701681196689</EntityId>
              <Min x="1" y="4" z="5" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>120967153844846456</EntityId>
              <Min x="-1" y="4" z="5" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="4" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
              <SubtypeName>SmallBlockSmallLight</SubtypeName>
              <EntityId>107426891080510467</EntityId>
              <Min x="0" y="3" z="0" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <CustomName>Exterior Light G-2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Radius>1</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <ColorGreen>0</ColorGreen>
              <ColorBlue>0</ColorBlue>
              <Falloff>1.3</Falloff>
              <Intensity>10</Intensity>
              <BlinkIntervalSeconds>1</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>10</BlinkOffset>
              <Offset>0.5</Offset>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-3" y="6" z="5" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>140143250598573537</EntityId>
              <Min x="-4" y="6" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="3" y="5" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="4" z="3" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="4" z="3" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-3" y="5" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>114351708679552835</EntityId>
              <Min x="3" y="7" z="5" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>134647782839029104</EntityId>
              <Min x="-3" y="7" z="5" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="4" y="8" z="4" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="3" y="8" z="3" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="-3" y="8" z="3" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-4" y="8" z="4" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-2" y="9" z="6" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="-2" y="8" z="9" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-2" y="9" z="8" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="2" y="8" z="9" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="2" y="9" z="8" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="2" y="9" z="6" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
              <SubtypeName>SmallCameraBlock</SubtypeName>
              <EntityId>100152124634134012</EntityId>
              <Min x="-2" y="9" z="7" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Docking Camera</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsActive>false</IsActive>
              <Fov>1.04719758</Fov>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="4" z="7" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="4" z="6" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MergeBlock">
              <SubtypeName>SmallShipMergeBlock</SubtypeName>
              <EntityId>136390469584426419</EntityId>
              <Min x="-1" y="3" z="6" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Merge Block</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>77234042531319252</EntityId>
              <Min x="-3" y="7" z="6" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>143758034046034016</EntityId>
              <Min x="-3" y="7" z="8" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="4" z="7" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="4" z="6" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="4" z="8" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_LandingGear">
              <SubtypeName>SmallBlockLandingGear</SubtypeName>
              <EntityId>116740051085819278</EntityId>
              <Min x="-3" y="3" z="6" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
              <CustomName>Cyclone Landing Gear 02</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsLocked>false</IsLocked>
              <BrakeForce>-INF</BrakeForce>
              <AutoLock>false</AutoLock>
              <FirstLockAttempt>false</FirstLockAttempt>
              <LockSound>ArcShipLandGearOn</LockSound>
              <UnlockSound>ArcShipLandGearOff</UnlockSound>
              <FailedAttachSound>ArcShipLandGearNothing01</FailedAttachSound>
              <AttachedEntityId xsi:nil="true" />
              <MasterToSlave xsi:nil="true" />
              <GearPivotPosition xsi:nil="true" />
              <OtherPivot xsi:nil="true" />
              <LockMode>Unlocked</LockMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>80093641657432598</EntityId>
              <Min x="-4" y="4" z="9" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>106146023590110678</EntityId>
              <Min x="-4" y="4" z="5" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="5" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_LargeGatlingTurret">
              <SubtypeName>SmallGatlingTurret</SubtypeName>
              <EntityId>128349656547550380</EntityId>
              <Min x="-9" y="4" z="5" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.084</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame10</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>10</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Gatling Turret Port</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsShooting>false</IsShooting>
              <IsShootingFromTerminal>false</IsShootingFromTerminal>
              <IsLargeTurret>true</IsLargeTurret>
              <MinFov>0.1</MinFov>
              <MaxFov>1.04719758</MaxFov>
              <RemainingAmmo>103</RemainingAmmo>
              <Target>0</Target>
              <TargetMeteors>false</TargetMeteors>
              <IsPotentialTarget>true</IsPotentialTarget>
              <PreviousControlledEntityId xsi:nil="true" />
              <Rotation>0</Rotation>
              <Elevation>0</Elevation>
              <GunBase>
                <RemainingAmmo>103</RemainingAmmo>
                <CurrentAmmoMagazineName>NATO_25x184mm</CurrentAmmoMagazineName>
                <RemainingAmmosList />
                <LastShootTime>637095012204679275</LastShootTime>
              </GunBase>
              <EnableIdleRotation>false</EnableIdleRotation>
              <PreviousIdleRotationState>false</PreviousIdleRotationState>
              <TargetCharacters>true</TargetCharacters>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>107420458313471246</EntityId>
              <Min x="-4" y="7" z="6" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Small Battery 01</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.0497659035</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>84141921416504559</EntityId>
              <Min x="-4" y="7" z="8" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Small Battery 09</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.0497659</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>96264800761374980</EntityId>
              <Min x="-4" y="7" z="7" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Small Battery 10</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.0497658961</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorInvCorner</SubtypeName>
              <EntityId>102308659594274692</EntityId>
              <Min x="-4" y="4" z="8" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorInvCorner</SubtypeName>
              <EntityId>84627388806466930</EntityId>
              <Min x="-4" y="4" z="6" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorCenter</SubtypeName>
              <EntityId>89720545457689128</EntityId>
              <Min x="-4" y="4" z="7" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_OreDetector">
              <SubtypeName>SmallBlockOreDetector</SubtypeName>
              <EntityId>99433491894155833</EntityId>
              <Min x="-3" y="7" z="7" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Ore Detector (Deco)</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <DetectionRadius>25</DetectionRadius>
              <BroadcastUsingAntennas>true</BroadcastUsingAntennas>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_LargeGatlingTurret">
              <SubtypeName>SmallGatlingTurret</SubtypeName>
              <EntityId>137197139010777087</EntityId>
              <Min x="5" y="4" z="5" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.084</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame10</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>10</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Gatling Turret Starboard</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsShooting>false</IsShooting>
              <IsShootingFromTerminal>false</IsShootingFromTerminal>
              <IsLargeTurret>true</IsLargeTurret>
              <MinFov>0.1</MinFov>
              <MaxFov>1.04719758</MaxFov>
              <RemainingAmmo>82</RemainingAmmo>
              <Target>0</Target>
              <TargetMeteors>false</TargetMeteors>
              <IsPotentialTarget>true</IsPotentialTarget>
              <PreviousControlledEntityId xsi:nil="true" />
              <Rotation>0</Rotation>
              <Elevation>0</Elevation>
              <GunBase>
                <RemainingAmmo>82</RemainingAmmo>
                <CurrentAmmoMagazineName>NATO_25x184mm</CurrentAmmoMagazineName>
                <RemainingAmmosList />
                <LastShootTime>637095012206016587</LastShootTime>
              </GunBase>
              <EnableIdleRotation>false</EnableIdleRotation>
              <PreviousIdleRotationState>false</PreviousIdleRotationState>
              <TargetCharacters>true</TargetCharacters>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>120122579813246584</EntityId>
              <Min x="3" y="7" z="6" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>78528155548945725</EntityId>
              <Min x="3" y="7" z="8" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>134403581785068265</EntityId>
              <Min x="4" y="4" z="9" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="4" z="7" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="4" z="8" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="4" z="6" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_LandingGear">
              <SubtypeName>SmallBlockLandingGear</SubtypeName>
              <EntityId>81906710941861548</EntityId>
              <Min x="3" y="3" z="6" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
              <CustomName>Cyclone Landing Gear 01</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsLocked>false</IsLocked>
              <BrakeForce>-INF</BrakeForce>
              <AutoLock>false</AutoLock>
              <FirstLockAttempt>false</FirstLockAttempt>
              <LockSound>ArcShipLandGearOn</LockSound>
              <UnlockSound>ArcShipLandGearOff</UnlockSound>
              <FailedAttachSound>ArcShipLandGearNothing01</FailedAttachSound>
              <AttachedEntityId xsi:nil="true" />
              <MasterToSlave xsi:nil="true" />
              <GearPivotPosition xsi:nil="true" />
              <OtherPivot xsi:nil="true" />
              <LockMode>Unlocked</LockMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>136422432253778282</EntityId>
              <Min x="4" y="4" z="5" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="5" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorInvCorner</SubtypeName>
              <EntityId>80045432980292880</EntityId>
              <Min x="4" y="4" z="6" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorCenter</SubtypeName>
              <EntityId>80065978234645720</EntityId>
              <Min x="4" y="4" z="7" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorInvCorner</SubtypeName>
              <EntityId>118060446839608777</EntityId>
              <Min x="4" y="4" z="8" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Reactor">
              <SubtypeName>SmallBlockSmallGenerator</SubtypeName>
              <EntityId>113334718508095891</EntityId>
              <Min x="4" y="7" z="7" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>false</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>900</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Jumpstart Reactor</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>false</ShowInInventory>
              <Enabled>false</Enabled>
              <Capacity>0</Capacity>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>92430562422595691</EntityId>
              <Min x="4" y="7" z="6" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Small Battery 11</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.04976587</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>93220790163693549</EntityId>
              <Min x="4" y="7" z="8" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Small Battery 12</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.04976624</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_OreDetector">
              <SubtypeName>SmallBlockOreDetector</SubtypeName>
              <EntityId>83284400386697193</EntityId>
              <Min x="3" y="7" z="7" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Ore Detector (Deco)</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <DetectionRadius>25</DetectionRadius>
              <BroadcastUsingAntennas>true</BroadcastUsingAntennas>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="4" z="5" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-4" y="5" z="3" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="-3" y="4" z="3" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="4" z="2" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="4" z="4" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="4" z="2" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="4" z="4" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="4" y="5" z="3" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="3" y="4" z="3" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>80520279048906876</EntityId>
              <Min x="4" y="7" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>137014311200648994</EntityId>
              <Min x="-4" y="7" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
              <Min x="4" y="8" z="5" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
              <Min x="-4" y="8" z="5" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="7" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-2" y="9" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="8" z="10" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="2" y="9" z="9" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="7" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="8" z="10" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="4" z="6" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="4" z="8" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="4" z="6" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="4" z="7" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-2" y="3" z="6" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="3" z="7" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-2" y="3" z="8" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-1" y="3" z="5" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="0" y="3" z="5" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="1" y="3" z="5" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="2" y="3" z="6" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="3" z="7" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="2" y="3" z="8" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-1" y="3" z="9" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="0" y="3" z="9" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="1" y="3" z="9" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>83185820853405667</EntityId>
              <Min x="-3" y="7" z="9" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
              <Min x="-2" y="4" z="5" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
              <Min x="-2" y="4" z="9" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="-4" y="5" z="4" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>110080969337838025</EntityId>
              <Min x="-1" y="4" z="9" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-5" y="5" z="4" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-5" y="6" z="4" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-5" y="7" z="4" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-4" y="8" z="6" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-4" y="8" z="8" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
              <Min x="-4" y="8" z="9" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-5" y="5" z="10" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Projector">
              <SubtypeName>SmallProjector</SubtypeName>
              <EntityId>91541480810864719</EntityId>
              <Min x="0" y="5" z="5" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Repair Projector</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <ProjectedGrids>
                <MyObjectBuilder_CubeGrid>
                  <SubtypeName />
                  <EntityId>106366154445659769</EntityId>
                  <PersistentFlags>CastShadows InScene</PersistentFlags>
                  <PositionAndOrientation>
                    <Position x="0" y="0" z="0" />
                    <Forward x="-0.02124229" y="0.9968206" z="0.07679066" />
                    <Up x="0.8573927" y="-0.02134198" z="0.514219463" />
                    <Orientation>
                      <X>0.634892941</X>
                      <Y>0.3678399</Y>
                      <Z>-0.32799682</Z>
                      <W>0.5949981</W>
                    </Orientation>
                  </PositionAndOrientation>
                  <LocalPositionAndOrientation xsi:nil="true" />
                  <GridSizeEnum>Small</GridSizeEnum>
                  <CubeBlocks>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Cockpit">
                      <SubtypeName>DBSmallBlockFighterCockpit</SubtypeName>
                      <EntityId>108656953327206976</EntityId>
                      <Min x="-1" y="6" z="-2" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>1</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                          <ComponentData>
                            <TypeId>MyModStorageComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                              <Storage>
                                <dictionary>
                                  <item>
                                    <Key>74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                                    <Value>[Artificial Horizon - Text Surface Config]
Show on screen 0=true
Show on screen 1=false
Show on screen 2=false
Show on screen 3=false
Show on screen 4=false
Show on screen 5=false

---
@1 AutoLCD

Echo
Center &lt;&lt;&lt; POWER SUMMARY &gt;&gt;&gt;
InvlistS {Cyclone Large Reactor} +ingot/uranium:25
PowerStored {Cyclone Battery}
PowerTime

@2 AutoLCD

Echo
Center &lt;&lt;&lt; ELECTROLYSIS &gt;&gt;&gt;
Working {Cyclone O2/H2 Generator}
InvlistS {Cyclone O2/H2 Generator} +ore/ice:2500

@3 AutoLCD

Center [[[ COMBAT INFO ]]]
Echo
Center &lt;&lt;&lt; AMMUNITION &gt;&gt;&gt;
Echo -Guns-
InvlistX {Cyclone Gatling Gun} +nato_25x184mm
Echo -Rocket Launchers-
InvlistX {Cyclone Rocket Launcher} +missile200mm
Echo -Turrets-
InvListX {Cyclone Gatling Turret Port} +nato_25x184mm
InvListX {Cyclone Gatling Turret Starboard} +nato_25x184mm
Echo -Storage-
InvlistX {G:Cyclone Ammo Containers} +nato_25x184mm
Echo
Center &lt;&lt;&lt; DAMAGE REPORT &gt;&gt;&gt;
DamageNoC</Value>
                                  </item>
                                </dictionary>
                              </Storage>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Fighter Cockpit (Horizon) [LCD]</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <UseSingleWeaponMode>false</UseSingleWeaponMode>
                      <Toolbar>
                        <ToolbarType>Character</ToolbarType>
                        <SelectedSlot xsi:nil="true" />
                        <Slots>
                          <Slot>
                            <Index>0</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemWeapon">
                              <DefinitionId Type="MyObjectBuilder_SmallGatlingGun" Subtype="" />
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>1</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemWeapon">
                              <DefinitionId Type="MyObjectBuilder_SmallMissileLauncher" Subtype="" />
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>2</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>TriggerNow</Action>
                              <BlockEntityId>137342817887971712</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>4</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>AutoPilot</Action>
                              <BlockEntityId>113201487367852736</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>5</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>OnOff</Action>
                              <BlockEntityId>73099833011583464</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>6</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>OnOff</Action>
                              <BlockEntityId>120970568420127885</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>8</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>View</Action>
                              <BlockEntityId>142099152513385495</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>9</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>OnOff</Action>
                              <BlockEntityId>123091731745007799</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>10</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                              <Action>SwitchLock</Action>
                              <GridEntityId>0</GridEntityId>
                              <BlockEntityId>108656953327206976</BlockEntityId>
                              <GroupName>Cyclone Landing Gear</GroupName>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>12</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>OnOff</Action>
                              <BlockEntityId>88477954936956207</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>13</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>OnOff</Action>
                              <BlockEntityId>133869917708659174</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>14</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                              <Action>OnOff</Action>
                              <GridEntityId>0</GridEntityId>
                              <BlockEntityId>108656953327206976</BlockEntityId>
                              <GroupName>Cyclone Batteries</GroupName>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>16</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>OnOff</Action>
                              <BlockEntityId>116651291946768549</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>18</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>TriggerNow</Action>
                              <BlockEntityId>124096654771241665</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>21</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>View</Action>
                              <BlockEntityId>110191190013305279</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>22</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>Run</Action>
                              <Parameters>
                                <MyObjectBuilder_ToolbarItemActionParameter>
                                  <TypeCode>String</TypeCode>
                                  <Value>reset</Value>
                                </MyObjectBuilder_ToolbarItemActionParameter>
                              </Parameters>
                              <BlockEntityId>111989329898677129</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>23</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>View</Action>
                              <BlockEntityId>96917811493566733</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>26</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>TriggerNow</Action>
                              <BlockEntityId>111526638259365831</BlockEntityId>
                            </Data>
                          </Slot>
                        </Slots>
                        <SlotsGamepad>
                          <Slot>
                            <Index>0</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemWeapon">
                              <DefinitionId Type="MyObjectBuilder_SmallGatlingGun" Subtype="" />
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>1</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemWeapon">
                              <DefinitionId Type="MyObjectBuilder_SmallMissileLauncher" Subtype="" />
                            </Data>
                          </Slot>
                        </SlotsGamepad>
                      </Toolbar>
                      <SelectedGunId xsi:nil="true" />
                      <BuildToolbar>
                        <ToolbarType>Character</ToolbarType>
                        <SelectedSlot xsi:nil="true" />
                        <Slots />
                        <SlotsGamepad />
                      </BuildToolbar>
                      <PilotRelativeWorld>
                        <Position x="-1.0505287647247314" y="1.3717148303985596" z="4.615689754486084" />
                        <Forward x="0.228537723" y="-0.5650892" z="-0.792744756" />
                        <Up x="-0.01041749" y="0.8128291" z="-0.582409" />
                        <Orientation>
                          <X>-0.303276</X>
                          <Y>-0.107940793</Y>
                          <Z>0.04011398</Z>
                          <W>0.9459193</W>
                        </Orientation>
                      </PilotRelativeWorld>
                      <PilotGunDefinition xsi:nil="true" />
                      <IsInFirstPersonView>false</IsInFirstPersonView>
                      <OxygenLevel>1</OxygenLevel>
                      <PilotJetpackEnabled xsi:nil="true" />
                      <TextPanels>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <Text> 
            &lt;&lt;&lt; POWER SUMMARY &gt;&gt;&gt;
 [''''''''''''''''''''''] Uranium                       0 / 25
 Batteries:                         3 MWh / 3 MWh
 [|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||] 100.0%
 Power Time:                1 days 2h 37m 49s</Text>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <ContentType>SCRIPT</ContentType>
                          <SelectedScript />
                          <TextPadding>2</TextPadding>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1.45</FontSize>
                          <Text> 
 &lt;&lt;&lt; POWER SUMMARY &gt;&gt;&gt;
 [''''''''''''''] Uranium        0 / 25
 Batteries:   3 MWh / 3 MWh
 [|||||||||||||||||||||||||||||||||||||||||] 100.0%
 Power Time: 3 days 6h 31m 35s</Text>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294935100</PackedValue>
                            <X>60</X>
                            <Y>130</Y>
                            <Z>255</Z>
                            <R>60</R>
                            <G>130</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <ContentType>TEXT_AND_IMAGE</ContentType>
                          <SelectedScript>TSS_ClockAnalog</SelectedScript>
                          <TextPadding>2</TextPadding>
                          <CustomizeScripts>true</CustomizeScripts>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1.45</FontSize>
                          <Text> 
    &lt;&lt;&lt; ELECTROLYSIS &gt;&gt;&gt;
 Cyclone O2/H2 G..          ON
 [''''''''''''''] Ice            0 / 2.5 k</Text>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294935100</PackedValue>
                            <X>60</X>
                            <Y>130</Y>
                            <Z>255</Z>
                            <R>60</R>
                            <G>130</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <ContentType>TEXT_AND_IMAGE</ContentType>
                          <SelectedScript>TSS_Gravity</SelectedScript>
                          <TextPadding>2</TextPadding>
                          <CustomizeScripts>true</CustomizeScripts>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>2.45</FontSize>
                          <Text>             [[[ COMBAT INFO ]]]
 
          &lt;&lt;&lt; AMMUNITION &gt;&gt;&gt;
 -Guns-
 -Rocket Launchers-</Text>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294935100</PackedValue>
                            <X>60</X>
                            <Y>130</Y>
                            <Z>255</Z>
                            <R>60</R>
                            <G>130</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <ContentType>TEXT_AND_IMAGE</ContentType>
                          <SelectedScript>TSS_EnergyHydrogen</SelectedScript>
                          <TextPadding>2</TextPadding>
                          <CustomizeScripts>true</CustomizeScripts>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <SelectedScript />
                          <TextPadding>2</TextPadding>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <SelectedScript />
                          <TextPadding>2</TextPadding>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                      </TextPanels>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="1" y="7" z="-3" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="-1" y="7" z="-3" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="0" y="7" z="-3" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
                      <Min x="1" y="6" z="-3" />
                      <BlockOrientation Forward="Down" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
                      <Min x="-1" y="6" z="-3" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="-2" y="6" z="-2" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="2" y="6" z="-2" />
                      <BlockOrientation Forward="Forward" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="-2" y="6" z="-1" />
                      <BlockOrientation Forward="Up" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="2" y="6" z="-1" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-2" y="6" z="0" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="2" y="6" z="0" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-2" y="6" z="1" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="2" y="6" z="1" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="2" y="6" z="2" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-2" y="6" z="2" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="-2" y="7" z="2" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="2" y="7" z="2" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
                      <Min x="2" y="7" z="3" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
                      <Min x="-2" y="7" z="3" />
                      <BlockOrientation Forward="Forward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="2" y="8" z="3" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-2" y="8" z="3" />
                      <BlockOrientation Forward="Backward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_SmallGatlingGun">
                      <SubtypeName />
                      <EntityId>120234319932024048</EntityId>
                      <Min x="1" y="5" z="-5" />
                      <BlockOrientation Forward="Forward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.064</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Gatling Gun 03</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>false</Enabled>
                      <IsShooting>false</IsShooting>
                      <IsShootingFromTerminal>false</IsShootingFromTerminal>
                      <IsLargeTurret>false</IsLargeTurret>
                      <MinFov>0.1</MinFov>
                      <MaxFov>1.04719758</MaxFov>
                      <GunBase>
                        <RemainingAmmo>90</RemainingAmmo>
                        <CurrentAmmoMagazineName>NATO_25x184mm</CurrentAmmoMagazineName>
                        <RemainingAmmosList>
                          <RemainingAmmoIns SubtypeName="NATO_25x184mm" Amount="115" />
                        </RemainingAmmosList>
                        <LastShootTime>637095043025149961</LastShootTime>
                      </GunBase>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_SmallGatlingGun">
                      <SubtypeName />
                      <EntityId>98474662670455377</EntityId>
                      <Min x="-1" y="5" z="-5" />
                      <BlockOrientation Forward="Forward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.064</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Gatling Gun 02</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>false</Enabled>
                      <IsShooting>false</IsShooting>
                      <IsShootingFromTerminal>false</IsShootingFromTerminal>
                      <IsLargeTurret>false</IsLargeTurret>
                      <MinFov>0.1</MinFov>
                      <MaxFov>1.04719758</MaxFov>
                      <GunBase>
                        <RemainingAmmo>104</RemainingAmmo>
                        <CurrentAmmoMagazineName>NATO_25x184mm</CurrentAmmoMagazineName>
                        <RemainingAmmosList>
                          <RemainingAmmoIns SubtypeName="NATO_25x184mm" Amount="114" />
                        </RemainingAmmosList>
                        <LastShootTime>637095043000316007</LastShootTime>
                      </GunBase>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
                      <SubtypeName>SmallBlockConveyor</SubtypeName>
                      <EntityId>72701245486552757</EntityId>
                      <Min x="0" y="5" z="-2" />
                      <BlockOrientation Forward="Left" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_OxygenGenerator">
                      <SubtypeName>OxygenGeneratorSmall</SubtypeName>
                      <EntityId>116651291946768549</EntityId>
                      <Min x="-1" y="6" z="4" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>1</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone O2/H2 Generator</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="-2" y="6" z="3" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
                      <SubtypeName>SmallBlockConveyor</SubtypeName>
                      <EntityId>134701207752694921</EntityId>
                      <Min x="0" y="5" z="3" />
                      <BlockOrientation Forward="Up" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
                      <SubtypeName>SmallBlockConveyor</SubtypeName>
                      <EntityId>118065016616401175</EntityId>
                      <Min x="0" y="5" z="-1" />
                      <BlockOrientation Forward="Down" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockSmallContainer</SubtypeName>
                      <EntityId>113223832983916749</EntityId>
                      <Min x="0" y="5" z="0" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.125</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Ammunition Container 08</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockSmallContainer</SubtypeName>
                      <EntityId>116747538559896841</EntityId>
                      <Min x="-1" y="5" z="-1" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.125</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Ammunition Container 01</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockSmallContainer</SubtypeName>
                      <EntityId>81844609525739233</EntityId>
                      <Min x="0" y="5" z="1" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.125</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Ammunition Container 09</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockSmallContainer</SubtypeName>
                      <EntityId>99797211365279860</EntityId>
                      <Min x="1" y="5" z="-1" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.125</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Ammunition Container 07</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-1" y="5" z="0" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-1" y="5" z="1" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-1" y="5" z="2" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="1" y="5" z="2" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="1" y="5" z="1" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="1" y="5" z="0" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockSmallContainer</SubtypeName>
                      <EntityId>140764065981665458</EntityId>
                      <Min x="0" y="5" z="2" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.125</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Ammunition Container 10</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="9" z="4" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope</SubtypeName>
                      <Min x="-1" y="9" z="4" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope</SubtypeName>
                      <Min x="1" y="9" z="4" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="2" y="6" z="3" />
                      <BlockOrientation Forward="Right" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="-1" y="5" z="3" />
                      <BlockOrientation Forward="Right" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="1" y="5" z="3" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockSmallContainer</SubtypeName>
                      <EntityId>75524678400933577</EntityId>
                      <Min x="0" y="6" z="-3" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.125</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Ammunition Container 11</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="2" y="6" z="-3" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-2" y="6" z="-3" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-2" y="7" z="-1" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="2" y="7" z="-1" />
                      <BlockOrientation Forward="Left" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
                      <SubtypeName>SmallTextPanel</SubtypeName>
                      <EntityId>118930756447579035</EntityId>
                      <Min x="-2" y="7" z="0" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyModStorageComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                              <Storage>
                                <dictionary>
                                  <item>
                                    <Key>74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                                    <Value>Center [[[ FLIGHT INFO ]]]
Echo
Center &lt;&lt;&lt; NAVIGATION &gt;&gt;&gt;
PosXYZ {Cyclone Remote Control}
Speed
Accel
StopDistance
Echo
Center &lt;&lt;&lt; COMMS &gt;&gt;&gt;
Working {Cyclone Antenna}</Value>
                                  </item>
                                </dictionary>
                              </Storage>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Display Left [LCD]</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <Description />
                      <Title>Title</Title>
                      <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
                      <ChangeInterval>0</ChangeInterval>
                      <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                      <FontSize>1.45</FontSize>
                      <PublicDescription>          [[[ FLIGHT INFO ]]]
 
      &lt;&lt;&lt; NAVIGATION &gt;&gt;&gt;
 Location: 
  X:                                  -449
  Y:                                -1255
  Z:                                  1923
 Speed:                    0.0 m/s 
 Acceleration:          0.0 m/s²
 Stop Distance:               0m 
 </PublicDescription>
                      <PublicTitle>Public title</PublicTitle>
                      <ShowText>NONE</ShowText>
                      <FontColor>
                        <PackedValue>4294935100</PackedValue>
                        <X>60</X>
                        <Y>130</Y>
                        <Z>255</Z>
                        <R>60</R>
                        <G>130</G>
                        <B>255</B>
                        <A>255</A>
                      </FontColor>
                      <BackgroundColor>
                        <PackedValue>4278190080</PackedValue>
                        <X>0</X>
                        <Y>0</Y>
                        <Z>0</Z>
                        <R>0</R>
                        <G>0</G>
                        <B>0</B>
                        <A>255</A>
                      </BackgroundColor>
                      <CurrentShownTexture>0</CurrentShownTexture>
                      <ContentType>TEXT_AND_IMAGE</ContentType>
                      <SelectedScript />
                      <TextPadding>2</TextPadding>
                      <Version>1</Version>
                      <ScriptBackgroundColor>
                        <PackedValue>4288108544</PackedValue>
                        <X>0</X>
                        <Y>88</Y>
                        <Z>151</Z>
                        <R>0</R>
                        <G>88</G>
                        <B>151</B>
                        <A>255</A>
                      </ScriptBackgroundColor>
                      <ScriptForegroundColor>
                        <PackedValue>4294962611</PackedValue>
                        <X>179</X>
                        <Y>237</Y>
                        <Z>255</Z>
                        <R>179</R>
                        <G>237</G>
                        <B>255</B>
                        <A>255</A>
                      </ScriptForegroundColor>
                      <Sprites>
                        <Length>0</Length>
                      </Sprites>
                      <SelectedRotationIndex xsi:nil="true" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
                      <SubtypeName>SmallTextPanel</SubtypeName>
                      <EntityId>136406790982425133</EntityId>
                      <Min x="2" y="7" z="0" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Display Right (L_PANEL)</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <Description />
                      <Title>Title</Title>
                      <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
                      <ChangeInterval>0</ChangeInterval>
                      <Font Type="MyObjectBuilder_FontDefinition" Subtype="Monospace" />
                      <FontSize>0.1</FontSize>
                      <PublicDescription>



























































































































































</PublicDescription>
                      <PublicTitle>A_X:Z,A_Y:-X,X1:-9,X2:9,Y1:3,Y2:10,Z1:-5,Z2:17,NO_SMOOTH,NO_RELDENSE,TERMDENSE,DENSE,TERM,NO_BLINK,ALERT,NO_CROSS,NO_MARKER,AL_MASK:31,THR_HDENSE:1,THR_MDENSE:0.5,THR_LDENSE:0.25,PIXEL:1</PublicTitle>
                      <ShowText>NONE</ShowText>
                      <FontColor>
                        <PackedValue>4294967295</PackedValue>
                        <X>255</X>
                        <Y>255</Y>
                        <Z>255</Z>
                        <R>255</R>
                        <G>255</G>
                        <B>255</B>
                        <A>255</A>
                      </FontColor>
                      <BackgroundColor>
                        <PackedValue>4278190080</PackedValue>
                        <X>0</X>
                        <Y>0</Y>
                        <Z>0</Z>
                        <R>0</R>
                        <G>0</G>
                        <B>0</B>
                        <A>255</A>
                      </BackgroundColor>
                      <CurrentShownTexture>0</CurrentShownTexture>
                      <ContentType>TEXT_AND_IMAGE</ContentType>
                      <SelectedScript />
                      <TextPadding>2</TextPadding>
                      <Version>1</Version>
                      <ScriptBackgroundColor>
                        <PackedValue>4288108544</PackedValue>
                        <X>0</X>
                        <Y>88</Y>
                        <Z>151</Z>
                        <R>0</R>
                        <G>88</G>
                        <B>151</B>
                        <A>255</A>
                      </ScriptBackgroundColor>
                      <ScriptForegroundColor>
                        <PackedValue>4294962611</PackedValue>
                        <X>179</X>
                        <Y>237</Y>
                        <Z>255</Z>
                        <R>179</R>
                        <G>237</G>
                        <B>255</B>
                        <A>255</A>
                      </ScriptForegroundColor>
                      <Sprites>
                        <Length>0</Length>
                      </Sprites>
                      <SelectedRotationIndex xsi:nil="true" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-2" y="7" z="1" />
                      <BlockOrientation Forward="Backward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="2" y="7" z="1" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="7" z="4" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="7" z="4" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="2" y="8" z="4" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-2" y="8" z="4" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="1" y="4" z="-2" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="-1" y="4" z="-2" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorInvCorner</SubtypeName>
                      <EntityId>106549047037853994</EntityId>
                      <Min x="0" y="5" z="-3" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
                      <SubtypeName>SmallCameraBlock</SubtypeName>
                      <EntityId>105455157714831098</EntityId>
                      <Min x="0" y="4" z="-2" />
                      <IntegrityPercent>0.50000006</IntegrityPercent>
                      <BuildPercent>0.50000006</BuildPercent>
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <CustomName>Camera (Deco)</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>false</Enabled>
                      <IsActive>false</IsActive>
                      <Fov>1.04719758</Fov>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCornerInv</SubtypeName>
                      <Min x="0" y="9" z="5" />
                      <BlockOrientation Forward="Forward" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
                      <SubtypeName>ConnectorMedium</SubtypeName>
                      <EntityId>98464156182294139</EntityId>
                      <Min x="-1" y="8" z="6" />
                      <BlockOrientation Forward="Up" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <DeformationRatio>0.5</DeformationRatio>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>1.152</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Connector</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>false</ShowInInventory>
                      <Enabled>true</Enabled>
                      <MasterToSlaveTransform xsi:nil="true" />
                      <MasterToSlaveGrid xsi:nil="true" />
                      <IsMaster>true</IsMaster>
                      <TradingEnabled>false</TradingEnabled>
                      <AutoUnlockTime>0</AutoUnlockTime>
                      <TimeOfConnection>0</TimeOfConnection>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="2" y="8" z="5" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="6" z="4" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="-2" y="8" z="5" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="6" z="4" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Reactor">
                      <SubtypeName>SmallBlockLargeGenerator</SubtypeName>
                      <EntityId>133869917708659174</EntityId>
                      <Min x="-1" y="5" z="6" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>1</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Large Reactor</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <Capacity>1</Capacity>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>74312292181275242</EntityId>
                      <Min x="1" y="4" z="4" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <CustomName>Ion Thrusters 31</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>110295822265049114</EntityId>
                      <Min x="-1" y="4" z="4" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <CustomName>Ion Thrusters 33</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="0" y="4" z="3" />
                      <BlockOrientation Forward="Up" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ReflectorLight">
                      <SubtypeName>SmallBlockFrontLight</SubtypeName>
                      <EntityId>80896785405977777</EntityId>
                      <Min x="0" y="4" z="-1" />
                      <BlockOrientation Forward="Forward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <CustomName>Cyclone Spotlight</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>false</Enabled>
                      <Radius>10</Radius>
                      <ReflectorRadius>120</ReflectorRadius>
                      <ColorRed>0.7058824</ColorRed>
                      <ColorGreen>0.784313738</ColorGreen>
                      <Falloff>1.5</Falloff>
                      <Intensity>3</Intensity>
                      <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
                      <BlinkLenght>10</BlinkLenght>
                      <BlinkOffset>0</BlinkOffset>
                      <Offset>0.5</Offset>
                      <RotationSpeed>0.08</RotationSpeed>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorSide</SubtypeName>
                      <EntityId>133990075715703780</EntityId>
                      <Min x="0" y="4" z="0" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_SmallGatlingGun">
                      <SubtypeName />
                      <EntityId>82940151449890211</EntityId>
                      <Min x="-2" y="5" z="-4" />
                      <BlockOrientation Forward="Forward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.064</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Gatling Gun 01</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>false</Enabled>
                      <IsShooting>false</IsShooting>
                      <IsShootingFromTerminal>false</IsShootingFromTerminal>
                      <IsLargeTurret>false</IsLargeTurret>
                      <MinFov>0.1</MinFov>
                      <MaxFov>1.04719758</MaxFov>
                      <GunBase>
                        <RemainingAmmo>16</RemainingAmmo>
                        <CurrentAmmoMagazineName>NATO_25x184mm</CurrentAmmoMagazineName>
                        <RemainingAmmosList>
                          <RemainingAmmoIns SubtypeName="NATO_25x184mm" Amount="56" />
                        </RemainingAmmosList>
                        <LastShootTime>637095043042818987</LastShootTime>
                      </GunBase>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-1" y="4" z="-1" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
                      <SubtypeName>SmallSuspension1x1mirrored</SubtypeName>
                      <EntityId>119957085946652477</EntityId>
                      <Min x="0" y="3" z="1" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <CustomName>Wheel Suspension 1x1 (Deco)</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>false</Enabled>
                      <TopBlockId xsi:nil="true" />
                      <ShareInertiaTensor>false</ShareInertiaTensor>
                      <SafetyDetach>5</SafetyDetach>
                      <RotorEntityId xsi:nil="true" />
                      <WeldedEntityId xsi:nil="true" />
                      <SteerAngle>0</SteerAngle>
                      <Damping>0.9</Damping>
                      <Strength>3.40282347E+38</Strength>
                      <Propulsion>true</Propulsion>
                      <Friction>2.8</Friction>
                      <Power>0</Power>
                      <Height>-0.32</Height>
                      <MaxSteerAngle>0.349066</MaxSteerAngle>
                      <InvertSteer>false</InvertSteer>
                      <InvertPropulsion>false</InvertPropulsion>
                      <SpeedLimit>180</SpeedLimit>
                      <PowerNew>0.6</PowerNew>
                      <StrengthNew>0.06</StrengthNew>
                      <FrictionNew>0.5</FrictionNew>
                      <AirShockEnabled>true</AirShockEnabled>
                      <BrakingEnabled>true</BrakingEnabled>
                      <SteeringOverride>0</SteeringOverride>
                      <PropulsionOverride>0</PropulsionOverride>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_SmallGatlingGun">
                      <SubtypeName />
                      <EntityId>142637682737760295</EntityId>
                      <Min x="2" y="5" z="-4" />
                      <BlockOrientation Forward="Forward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.064</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Gatling Gun 04</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>false</Enabled>
                      <IsShooting>false</IsShooting>
                      <IsShootingFromTerminal>false</IsShootingFromTerminal>
                      <IsLargeTurret>false</IsLargeTurret>
                      <MinFov>0.1</MinFov>
                      <MaxFov>1.04719758</MaxFov>
                      <GunBase>
                        <RemainingAmmo>40</RemainingAmmo>
                        <CurrentAmmoMagazineName>NATO_25x184mm</CurrentAmmoMagazineName>
                        <RemainingAmmosList>
                          <RemainingAmmoIns SubtypeName="NATO_25x184mm" Amount="56" />
                        </RemainingAmmosList>
                        <LastShootTime>637095043024980425</LastShootTime>
                      </GunBase>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="1" y="4" z="-1" />
                      <BlockOrientation Forward="Forward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorSide</SubtypeName>
                      <EntityId>137490133643256275</EntityId>
                      <Min x="-2" y="5" z="0" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorSide</SubtypeName>
                      <EntityId>104055649253914500</EntityId>
                      <Min x="-2" y="5" z="1" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorSide</SubtypeName>
                      <EntityId>86015078282797309</EntityId>
                      <Min x="-2" y="5" z="2" />
                      <BlockOrientation Forward="Up" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorSide</SubtypeName>
                      <EntityId>81734245473244329</EntityId>
                      <Min x="2" y="5" z="2" />
                      <BlockOrientation Forward="Up" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorSide</SubtypeName>
                      <EntityId>102412620057134771</EntityId>
                      <Min x="2" y="5" z="1" />
                      <BlockOrientation Forward="Up" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorSide</SubtypeName>
                      <EntityId>113117229545099838</EntityId>
                      <Min x="2" y="5" z="0" />
                      <BlockOrientation Forward="Up" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorCorner</SubtypeName>
                      <EntityId>126645462680609750</EntityId>
                      <Min x="0" y="4" z="2" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
                      <Min x="-1" y="9" z="5" />
                      <BlockOrientation Forward="Forward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
                      <Min x="1" y="9" z="5" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorCorner</SubtypeName>
                      <EntityId>87236402401850415</EntityId>
                      <Min x="-2" y="5" z="3" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>93222816141722581</EntityId>
                      <Min x="-1" y="4" z="2" />
                      <BlockOrientation Forward="Forward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <CustomName>Ion Thrusters 13</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>86365067205711925</EntityId>
                      <Min x="1" y="4" z="2" />
                      <BlockOrientation Forward="Forward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <CustomName>Ion Thrusters 14</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorCorner</SubtypeName>
                      <EntityId>109083518065504578</EntityId>
                      <Min x="2" y="5" z="3" />
                      <BlockOrientation Forward="Up" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_PistonTop">
                      <SubtypeName>SmallPistonTop</SubtypeName>
                      <EntityId>124889344766888196</EntityId>
                      <Min x="0" y="6" z="-4" />
                      <BlockOrientation Forward="Down" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                      <ParentEntityId>0</ParentEntityId>
                      <YieldLastComponent>false</YieldLastComponent>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="7" z="5" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>130683316776460252</EntityId>
                      <Min x="3" y="7" z="3" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 56</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="7" z="5" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>119786447973734872</EntityId>
                      <Min x="-3" y="7" z="3" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 55</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="3" y="8" z="4" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-3" y="8" z="4" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="1" y="4" z="-3" />
                      <BlockOrientation Forward="Backward" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-1" y="4" z="-3" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
                      <SubtypeName>SmallCameraBlock</SubtypeName>
                      <EntityId>142099152513385495</EntityId>
                      <Min x="0" y="5" z="-4" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Aiming Camera</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <IsActive>false</IsActive>
                      <Fov>1.04696131</Fov>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
                      <SubtypeName>SmallBlockSmallLight</SubtypeName>
                      <EntityId>90772141363289090</EntityId>
                      <Min x="0" y="4" z="-3" />
                      <IntegrityPercent>0.333333343</IntegrityPercent>
                      <BuildPercent>0.333333343</BuildPercent>
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <CustomName>Interior Light (Deco)</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>false</Enabled>
                      <Radius>3.6</Radius>
                      <ReflectorRadius>120</ReflectorRadius>
                      <Falloff>1.3</Falloff>
                      <Intensity>5</Intensity>
                      <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
                      <BlinkLenght>10</BlinkLenght>
                      <BlinkOffset>0</BlinkOffset>
                      <Offset>0.5</Offset>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-2" y="8" z="6" />
                      <BlockOrientation Forward="Right" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-2" y="8" z="8" />
                      <BlockOrientation Forward="Right" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="2" y="8" z="8" />
                      <BlockOrientation Forward="Left" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="2" y="8" z="6" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorInvCorner</SubtypeName>
                      <EntityId>140671667432346176</EntityId>
                      <Min x="-2" y="8" z="7" />
                      <BlockOrientation Forward="Backward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorInvCorner</SubtypeName>
                      <EntityId>72181068766345948</EntityId>
                      <Min x="2" y="8" z="7" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="2" y="9" z="5" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_SmallMissileLauncher">
                      <SubtypeName />
                      <EntityId>117298277864472353</EntityId>
                      <Min x="-3" y="6" z="1" />
                      <BlockOrientation Forward="Forward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.24</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Rocket Launcher 02</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>false</Enabled>
                      <IsShooting>false</IsShooting>
                      <IsShootingFromTerminal>false</IsShootingFromTerminal>
                      <IsLargeTurret>false</IsLargeTurret>
                      <MinFov>0.1</MinFov>
                      <MaxFov>1.04719758</MaxFov>
                      <UseConveyorSystem>false</UseConveyorSystem>
                      <GunBase>
                        <CurrentAmmoMagazineName>Missile200mm</CurrentAmmoMagazineName>
                        <RemainingAmmosList>
                          <RemainingAmmoIns SubtypeName="Missile200mm" Amount="0" />
                        </RemainingAmmosList>
                        <LastShootTime>637095924828168571</LastShootTime>
                      </GunBase>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-2" y="9" z="5" />
                      <BlockOrientation Forward="Backward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_SmallMissileLauncher">
                      <SubtypeName />
                      <EntityId>110515475670479647</EntityId>
                      <Min x="3" y="6" z="1" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.24</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Rocket Launcher 05</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>false</Enabled>
                      <IsShooting>false</IsShooting>
                      <IsShootingFromTerminal>false</IsShootingFromTerminal>
                      <IsLargeTurret>false</IsLargeTurret>
                      <MinFov>0.1</MinFov>
                      <MaxFov>1.04719758</MaxFov>
                      <UseConveyorSystem>false</UseConveyorSystem>
                      <GunBase>
                        <CurrentAmmoMagazineName>Missile200mm</CurrentAmmoMagazineName>
                        <RemainingAmmosList>
                          <RemainingAmmoIns SubtypeName="Missile200mm" Amount="0" />
                        </RemainingAmmosList>
                        <LastShootTime>637095924812985520</LastShootTime>
                      </GunBase>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
                      <Min x="1" y="4" z="8" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
                      <EntityId>108913238674128029</EntityId>
                      <Min x="-4" y="5" z="6" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Battery 01</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>1</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
                      <EntityId>76550463376055910</EntityId>
                      <Min x="2" y="5" z="6" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Battery 03</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>1</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-2" y="4" z="11" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>81551448688065499</EntityId>
                      <Min x="1" y="4" z="5" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <CustomName>Ion Thrusters 32</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>91652258902561202</EntityId>
                      <Min x="-1" y="4" z="5" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <CustomName>Ion Thrusters 34</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="4" z="4" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
                      <SubtypeName>SmallBlockSmallLight</SubtypeName>
                      <EntityId>141734668345471986</EntityId>
                      <Min x="0" y="3" z="0" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <CustomName>Exterior Light G-2</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <Radius>1</Radius>
                      <ReflectorRadius>120</ReflectorRadius>
                      <ColorGreen>0</ColorGreen>
                      <ColorBlue>0</ColorBlue>
                      <Falloff>1.3</Falloff>
                      <Intensity>10</Intensity>
                      <BlinkIntervalSeconds>1</BlinkIntervalSeconds>
                      <BlinkLenght>10</BlinkLenght>
                      <BlinkOffset>10</BlinkOffset>
                      <Offset>0.5</Offset>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_PistonTop">
                      <SubtypeName>SmallPistonTop</SubtypeName>
                      <EntityId>87249336989306108</EntityId>
                      <Min x="-3" y="5" z="-1" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <ParentEntityId>0</ParentEntityId>
                      <YieldLastComponent>false</YieldLastComponent>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_PistonTop">
                      <SubtypeName>SmallPistonTop</SubtypeName>
                      <EntityId>127014113329738660</EntityId>
                      <Min x="3" y="5" z="-1" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <ParentEntityId>0</ParentEntityId>
                      <YieldLastComponent>false</YieldLastComponent>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_SmallMissileLauncher">
                      <SubtypeName />
                      <EntityId>132033961303211034</EntityId>
                      <Min x="-3" y="5" z="0" />
                      <BlockOrientation Forward="Forward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.24</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Rocket Launcher 03</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>false</Enabled>
                      <IsShooting>false</IsShooting>
                      <IsShootingFromTerminal>false</IsShootingFromTerminal>
                      <IsLargeTurret>false</IsLargeTurret>
                      <MinFov>0.1</MinFov>
                      <MaxFov>1.04719758</MaxFov>
                      <UseConveyorSystem>false</UseConveyorSystem>
                      <GunBase>
                        <CurrentAmmoMagazineName>Missile200mm</CurrentAmmoMagazineName>
                        <RemainingAmmosList>
                          <RemainingAmmoIns SubtypeName="Missile200mm" Amount="0" />
                        </RemainingAmmosList>
                        <LastShootTime>637095924830310161</LastShootTime>
                      </GunBase>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-2" y="4" z="3" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="2" y="4" z="3" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_SmallMissileLauncher">
                      <SubtypeName />
                      <EntityId>118219349721198489</EntityId>
                      <Min x="3" y="5" z="0" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.24</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Rocket Launcher 04</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>false</Enabled>
                      <IsShooting>false</IsShooting>
                      <IsShootingFromTerminal>false</IsShootingFromTerminal>
                      <IsLargeTurret>false</IsLargeTurret>
                      <MinFov>0.1</MinFov>
                      <MaxFov>1.04719758</MaxFov>
                      <UseConveyorSystem>false</UseConveyorSystem>
                      <GunBase>
                        <CurrentAmmoMagazineName>Missile200mm</CurrentAmmoMagazineName>
                        <RemainingAmmosList>
                          <RemainingAmmoIns SubtypeName="Missile200mm" Amount="0" />
                        </RemainingAmmosList>
                        <LastShootTime>637095924810978868</LastShootTime>
                      </GunBase>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>123241616135473027</EntityId>
                      <Min x="3" y="7" z="5" />
                      <BlockOrientation Forward="Up" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 46</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>113297123961312923</EntityId>
                      <Min x="-3" y="7" z="5" />
                      <BlockOrientation Forward="Up" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 48</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="4" y="8" z="4" />
                      <BlockOrientation Forward="Left" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="3" y="8" z="3" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="-3" y="8" z="3" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-4" y="8" z="4" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-2" y="9" z="6" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="-2" y="8" z="9" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-2" y="9" z="8" />
                      <BlockOrientation Forward="Backward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="2" y="8" z="9" />
                      <BlockOrientation Forward="Right" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="2" y="9" z="8" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="2" y="9" z="6" />
                      <BlockOrientation Forward="Forward" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
                      <SubtypeName>SmallCameraBlock</SubtypeName>
                      <EntityId>110191190013305279</EntityId>
                      <Min x="-2" y="9" z="7" />
                      <BlockOrientation Forward="Up" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Docking Camera</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <IsActive>false</IsActive>
                      <Fov>1.04719758</Fov>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
                      <Min x="-1" y="4" z="7" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
                      <Min x="0" y="4" z="6" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MergeBlock">
                      <SubtypeName>SmallShipMergeBlock</SubtypeName>
                      <EntityId>123091731745007799</EntityId>
                      <Min x="-1" y="3" z="6" />
                      <BlockOrientation Forward="Right" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Merge Block</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_SmallMissileLauncher">
                      <SubtypeName />
                      <EntityId>144051171352654640</EntityId>
                      <Min x="-4" y="6" z="2" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.24</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Rocket Launcher 01</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <IsShooting>false</IsShooting>
                      <IsShootingFromTerminal>false</IsShootingFromTerminal>
                      <IsLargeTurret>false</IsLargeTurret>
                      <MinFov>0.1</MinFov>
                      <MaxFov>1.04719758</MaxFov>
                      <UseConveyorSystem>false</UseConveyorSystem>
                      <GunBase>
                        <CurrentAmmoMagazineName>Missile200mm</CurrentAmmoMagazineName>
                        <RemainingAmmosList>
                          <RemainingAmmoIns SubtypeName="Missile200mm" Amount="0" />
                        </RemainingAmmosList>
                        <LastShootTime>637095924825819631</LastShootTime>
                      </GunBase>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>92865036081453303</EntityId>
                      <Min x="-3" y="7" z="6" />
                      <BlockOrientation Forward="Up" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 39</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>93154962506131535</EntityId>
                      <Min x="-3" y="7" z="8" />
                      <BlockOrientation Forward="Up" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 41</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="4" z="7" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="4" z="6" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="4" z="8" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_LandingGear">
                      <SubtypeName>SmallBlockLandingGear</SubtypeName>
                      <EntityId>118933393686006342</EntityId>
                      <Min x="-3" y="3" z="6" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                      <CustomName>Cyclone Landing Gear 02</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <IsLocked>false</IsLocked>
                      <BrakeForce>-INF</BrakeForce>
                      <AutoLock>false</AutoLock>
                      <FirstLockAttempt>false</FirstLockAttempt>
                      <LockSound>RealShipLandGearOn</LockSound>
                      <UnlockSound>RealShipLandGearOff</UnlockSound>
                      <FailedAttachSound>RealShipLandGearNothing01</FailedAttachSound>
                      <AttachedEntityId xsi:nil="true" />
                      <MasterToSlave xsi:nil="true" />
                      <GearPivotPosition xsi:nil="true" />
                      <OtherPivot xsi:nil="true" />
                      <LockMode>Unlocked</LockMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>111095804514075165</EntityId>
                      <Min x="-4" y="4" z="9" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 37</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>105436736608822727</EntityId>
                      <Min x="-4" y="4" z="5" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 38</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="5" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_LargeGatlingTurret">
                      <SubtypeName>SmallGatlingTurret</SubtypeName>
                      <EntityId>126577178664772940</EntityId>
                      <Min x="-9" y="4" z="5" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.084</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Gatling Turret Port</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>false</Enabled>
                      <IsShooting>false</IsShooting>
                      <IsShootingFromTerminal>false</IsShootingFromTerminal>
                      <IsLargeTurret>true</IsLargeTurret>
                      <MinFov>0.1</MinFov>
                      <MaxFov>1.04719758</MaxFov>
                      <RemainingAmmo>103</RemainingAmmo>
                      <Target>0</Target>
                      <TargetMeteors>false</TargetMeteors>
                      <IsPotentialTarget>true</IsPotentialTarget>
                      <PreviousControlledEntityId xsi:nil="true" />
                      <Rotation>0</Rotation>
                      <Elevation>0</Elevation>
                      <GunBase>
                        <RemainingAmmo>103</RemainingAmmo>
                        <CurrentAmmoMagazineName>NATO_25x184mm</CurrentAmmoMagazineName>
                        <RemainingAmmosList />
                        <LastShootTime>637095012204679275</LastShootTime>
                      </GunBase>
                      <EnableIdleRotation>false</EnableIdleRotation>
                      <PreviousIdleRotationState>false</PreviousIdleRotationState>
                      <TargetCharacters>true</TargetCharacters>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>116360421084738024</EntityId>
                      <Min x="-4" y="7" z="6" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Small Battery 01</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0.05</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>115295692305636274</EntityId>
                      <Min x="-4" y="7" z="8" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Small Battery 09</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0.05</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>79669631351619741</EntityId>
                      <Min x="-4" y="7" z="7" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Small Battery 10</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0.05</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorInvCorner</SubtypeName>
                      <EntityId>130794111410038675</EntityId>
                      <Min x="-4" y="4" z="8" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorInvCorner</SubtypeName>
                      <EntityId>112253567418752064</EntityId>
                      <Min x="-4" y="4" z="6" />
                      <BlockOrientation Forward="Right" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorCenter</SubtypeName>
                      <EntityId>134042100555344584</EntityId>
                      <Min x="-4" y="4" z="7" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_OreDetector">
                      <SubtypeName>SmallBlockOreDetector</SubtypeName>
                      <EntityId>81122619731762828</EntityId>
                      <Min x="-3" y="7" z="7" />
                      <BlockOrientation Forward="Up" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Ore Detector (Deco)</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <DetectionRadius>25</DetectionRadius>
                      <BroadcastUsingAntennas>true</BroadcastUsingAntennas>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_SmallMissileLauncher">
                      <SubtypeName />
                      <EntityId>135238930682935957</EntityId>
                      <Min x="4" y="6" z="2" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.24</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Rocket Launcher 06</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>false</Enabled>
                      <IsShooting>false</IsShooting>
                      <IsShootingFromTerminal>false</IsShootingFromTerminal>
                      <IsLargeTurret>false</IsLargeTurret>
                      <MinFov>0.1</MinFov>
                      <MaxFov>1.04719758</MaxFov>
                      <UseConveyorSystem>false</UseConveyorSystem>
                      <GunBase>
                        <CurrentAmmoMagazineName>Missile200mm</CurrentAmmoMagazineName>
                        <RemainingAmmosList>
                          <RemainingAmmoIns SubtypeName="Missile200mm" Amount="0" />
                        </RemainingAmmosList>
                        <LastShootTime>637095924823478438</LastShootTime>
                      </GunBase>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_LargeGatlingTurret">
                      <SubtypeName>SmallGatlingTurret</SubtypeName>
                      <EntityId>114347942105552330</EntityId>
                      <Min x="5" y="4" z="5" />
                      <BlockOrientation Forward="Forward" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.084</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Gatling Turret Starboard</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>false</Enabled>
                      <IsShooting>false</IsShooting>
                      <IsShootingFromTerminal>false</IsShootingFromTerminal>
                      <IsLargeTurret>true</IsLargeTurret>
                      <MinFov>0.1</MinFov>
                      <MaxFov>1.04719758</MaxFov>
                      <RemainingAmmo>82</RemainingAmmo>
                      <Target>0</Target>
                      <TargetMeteors>false</TargetMeteors>
                      <IsPotentialTarget>true</IsPotentialTarget>
                      <PreviousControlledEntityId xsi:nil="true" />
                      <Rotation>0</Rotation>
                      <Elevation>0</Elevation>
                      <GunBase>
                        <RemainingAmmo>82</RemainingAmmo>
                        <CurrentAmmoMagazineName>NATO_25x184mm</CurrentAmmoMagazineName>
                        <RemainingAmmosList />
                        <LastShootTime>637095012206016587</LastShootTime>
                      </GunBase>
                      <EnableIdleRotation>false</EnableIdleRotation>
                      <PreviousIdleRotationState>false</PreviousIdleRotationState>
                      <TargetCharacters>true</TargetCharacters>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>80096667696936946</EntityId>
                      <Min x="3" y="7" z="6" />
                      <BlockOrientation Forward="Up" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 34</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>131743823324356107</EntityId>
                      <Min x="3" y="7" z="8" />
                      <BlockOrientation Forward="Up" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 35</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>93246995795601083</EntityId>
                      <Min x="4" y="4" z="9" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 47</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="4" z="7" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="4" z="8" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="4" z="6" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_LandingGear">
                      <SubtypeName>SmallBlockLandingGear</SubtypeName>
                      <EntityId>132546367225693833</EntityId>
                      <Min x="3" y="3" z="6" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                      <CustomName>Cyclone Landing Gear 01</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <IsLocked>false</IsLocked>
                      <BrakeForce>-INF</BrakeForce>
                      <AutoLock>false</AutoLock>
                      <FirstLockAttempt>false</FirstLockAttempt>
                      <LockSound>RealShipLandGearOn</LockSound>
                      <UnlockSound>RealShipLandGearOff</UnlockSound>
                      <FailedAttachSound>RealShipLandGearNothing01</FailedAttachSound>
                      <AttachedEntityId xsi:nil="true" />
                      <MasterToSlave xsi:nil="true" />
                      <GearPivotPosition xsi:nil="true" />
                      <OtherPivot xsi:nil="true" />
                      <LockMode>Unlocked</LockMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>98638768152677831</EntityId>
                      <Min x="4" y="4" z="5" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 35</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="5" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorInvCorner</SubtypeName>
                      <EntityId>123482708369001438</EntityId>
                      <Min x="4" y="4" z="6" />
                      <BlockOrientation Forward="Right" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorCenter</SubtypeName>
                      <EntityId>83468853760947136</EntityId>
                      <Min x="4" y="4" z="7" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorInvCorner</SubtypeName>
                      <EntityId>82506042451653739</EntityId>
                      <Min x="4" y="4" z="8" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Reactor">
                      <SubtypeName>SmallBlockSmallGenerator</SubtypeName>
                      <EntityId>88477954936956207</EntityId>
                      <Min x="4" y="7" z="7" />
                      <BlockOrientation Forward="Up" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.125</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Jumpstart Reactor</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>false</ShowInInventory>
                      <Enabled>false</Enabled>
                      <Capacity>1</Capacity>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>116236223611555015</EntityId>
                      <Min x="4" y="7" z="6" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Small Battery 11</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0.05</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>104376685434945415</EntityId>
                      <Min x="4" y="7" z="8" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Small Battery 12</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0.05</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_OreDetector">
                      <SubtypeName>SmallBlockOreDetector</SubtypeName>
                      <EntityId>131418767660745679</EntityId>
                      <Min x="3" y="7" z="7" />
                      <BlockOrientation Forward="Up" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Ore Detector (Deco)</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <DetectionRadius>25</DetectionRadius>
                      <BroadcastUsingAntennas>true</BroadcastUsingAntennas>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="4" z="5" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-4" y="5" z="3" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="-3" y="4" z="3" />
                      <BlockOrientation Forward="Up" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-2" y="4" z="2" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-2" y="4" z="4" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="2" y="4" z="2" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="2" y="4" z="4" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="4" y="5" z="3" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="3" y="4" z="3" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>87651181399385700</EntityId>
                      <Min x="4" y="7" z="4" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 57</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>109479796872910757</EntityId>
                      <Min x="-4" y="7" z="4" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 54</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
                      <Min x="4" y="8" z="5" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
                      <Min x="-4" y="8" z="5" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="7" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-2" y="9" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-2" y="8" z="10" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="2" y="9" z="9" />
                      <BlockOrientation Forward="Forward" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="7" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="2" y="8" z="10" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
                      <Min x="-1" y="4" z="6" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
                      <Min x="-1" y="4" z="8" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
                      <Min x="1" y="4" z="6" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
                      <Min x="1" y="4" z="7" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-2" y="3" z="6" />
                      <BlockOrientation Forward="Right" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-2" y="3" z="7" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-2" y="3" z="8" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-1" y="3" z="5" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="0" y="3" z="5" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="1" y="3" z="5" />
                      <BlockOrientation Forward="Backward" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="2" y="3" z="6" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="2" y="3" z="7" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="2" y="3" z="8" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-1" y="3" z="9" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="0" y="3" z="9" />
                      <BlockOrientation Forward="Forward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="1" y="3" z="9" />
                      <BlockOrientation Forward="Forward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>117179750499937622</EntityId>
                      <Min x="-3" y="7" z="9" />
                      <BlockOrientation Forward="Up" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 50</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
                      <Min x="-2" y="4" z="5" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
                      <Min x="-2" y="4" z="9" />
                      <BlockOrientation Forward="Left" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="-4" y="5" z="4" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>106084050647142146</EntityId>
                      <Min x="-1" y="4" z="9" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <CustomName>Ion Thrusters 39</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-5" y="5" z="4" />
                      <BlockOrientation Forward="Up" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="-5" y="6" z="4" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-5" y="7" z="4" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-4" y="8" z="6" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-4" y="8" z="8" />
                      <BlockOrientation Forward="Left" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
                      <Min x="-4" y="8" z="9" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-5" y="5" z="10" />
                      <BlockOrientation Forward="Up" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Projector">
                      <SubtypeName>SmallProjector</SubtypeName>
                      <EntityId>120970568420127885</EntityId>
                      <Min x="0" y="5" z="5" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Repair Projector</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <ProjectionOffset>
                        <X>0</X>
                        <Y>0</Y>
                        <Z>0</Z>
                      </ProjectionOffset>
                      <ProjectionRotation>
                        <X>0</X>
                        <Y>0</Y>
                        <Z>0</Z>
                      </ProjectionRotation>
                      <KeepProjection>false</KeepProjection>
                      <ShowOnlyBuildable>false</ShowOnlyBuildable>
                      <InstantBuildingEnabled>false</InstantBuildingEnabled>
                      <MaxNumberOfProjections>5</MaxNumberOfProjections>
                      <MaxNumberOfBlocks>200</MaxNumberOfBlocks>
                      <ProjectionsRemaining>0</ProjectionsRemaining>
                      <GetOwnershipFromProjector>false</GetOwnershipFromProjector>
                      <Scale>1</Scale>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-5" y="7" z="10" />
                      <BlockOrientation Forward="Down" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="-4" y="8" z="7" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
                      <Min x="4" y="8" z="9" />
                      <BlockOrientation Forward="Right" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="5" y="7" z="4" />
                      <BlockOrientation Forward="Down" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="5" y="5" z="4" />
                      <BlockOrientation Forward="Up" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="4" y="8" z="8" />
                      <BlockOrientation Forward="Right" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="4" y="8" z="6" />
                      <BlockOrientation Forward="Right" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfArmorBlock</SubtypeName>
                      <Min x="5" y="6" z="4" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="4" y="8" z="7" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="5" y="5" z="10" />
                      <IntegrityPercent>0.6</IntegrityPercent>
                      <BlockOrientation Forward="Up" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="5" y="7" z="10" />
                      <BlockOrientation Forward="Down" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
                      <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
                      <EntityId>73079590420883833</EntityId>
                      <Min x="5" y="6" z="10" />
                      <BlockOrientation Forward="Right" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>111710527196327559</EntityId>
                      <Min x="3" y="7" z="9" />
                      <BlockOrientation Forward="Up" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 47</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
                      <Min x="2" y="4" z="9" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
                      <Min x="2" y="4" z="5" />
                      <BlockOrientation Forward="Right" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="4" y="5" z="4" />
                      <BlockOrientation Forward="Right" Up="Backward" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>135133800482762878</EntityId>
                      <Min x="1" y="4" z="9" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <CustomName>Ion Thrusters 41</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-4" y="5" z="2" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="-3" y="4" z="4" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-2" y="4" z="1" />
                      <BlockOrientation Forward="Right" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="2" y="4" z="1" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="4" y="5" z="2" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="3" y="4" z="4" />
                      <BlockOrientation Forward="Right" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
                      <Min x="-1" y="9" z="9" />
                      <BlockOrientation Forward="Backward" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-3" y="8" z="10" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="-2" y="8" z="11" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
                      <Min x="1" y="9" z="9" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="3" y="8" z="10" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="2" y="8" z="11" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>134662957076962182</EntityId>
                      <Min x="-4" y="7" z="10" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 33</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-3" y="4" z="5" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-3" y="4" z="9" />
                      <BlockOrientation Forward="Left" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-4" y="4" z="4" />
                      <BlockOrientation Forward="Right" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>93291998804037278</EntityId>
                      <Min x="-1" y="4" z="10" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <CustomName>Ion Thrusters 40</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-4" y="8" z="10" />
                      <BlockOrientation Forward="Right" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Projector">
                      <SubtypeName>SmallProjector</SubtypeName>
                      <EntityId>105742339342027498</EntityId>
                      <Min x="0" y="5" z="4" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Crosshair Projector</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>false</Enabled>
                      <ProjectedGrids>
                        <MyObjectBuilder_CubeGrid>
                          <SubtypeName />
                          <EntityId>101816930394721219</EntityId>
                          <PersistentFlags>CastShadows InScene</PersistentFlags>
                          <PositionAndOrientation>
                            <Position x="0" y="0" z="0" />
                            <Forward x="0.5167359" y="0.237337917" z="-0.822590232" />
                            <Up x="0.851136565" y="-0.03863752" z="0.52352035" />
                            <Orientation>
                              <X>0.277720928</X>
                              <Y>-0.107591651</Y>
                              <Z>-0.664973557</Z>
                              <W>0.6849126</W>
                            </Orientation>
                          </PositionAndOrientation>
                          <LocalPositionAndOrientation xsi:nil="true" />
                          <GridSizeEnum>Small</GridSizeEnum>
                          <CubeBlocks>
                            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_PistonTop">
                              <SubtypeName>SmallPistonTop</SubtypeName>
                              <EntityId>135402278445926472</EntityId>
                              <IntegrityPercent>0.2</IntegrityPercent>
                              <BuildPercent>0.2</BuildPercent>
                              <ParentEntityId>0</ParentEntityId>
                              <YieldLastComponent>false</YieldLastComponent>
                            </MyObjectBuilder_CubeBlock>
                          </CubeBlocks>
                          <DisplayName>Crosshairs</DisplayName>
                          <DestructibleBlocks>true</DestructibleBlocks>
                          <CreatePhysics>false</CreatePhysics>
                          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
                          <IsRespawnGrid>false</IsRespawnGrid>
                          <LocalCoordSys>0</LocalCoordSys>
                          <TargetingTargets />
                        </MyObjectBuilder_CubeGrid>
                      </ProjectedGrids>
                      <ProjectionOffset>
                        <X>0</X>
                        <Y>0</Y>
                        <Z>50</Z>
                      </ProjectionOffset>
                      <ProjectionRotation>
                        <X>0</X>
                        <Y>1</Y>
                        <Z>0</Z>
                      </ProjectionRotation>
                      <KeepProjection>true</KeepProjection>
                      <ShowOnlyBuildable>false</ShowOnlyBuildable>
                      <InstantBuildingEnabled>false</InstantBuildingEnabled>
                      <MaxNumberOfProjections>5</MaxNumberOfProjections>
                      <MaxNumberOfBlocks>200</MaxNumberOfBlocks>
                      <ProjectionsRemaining>0</ProjectionsRemaining>
                      <GetOwnershipFromProjector>false</GetOwnershipFromProjector>
                      <Scale>1</Scale>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="4" y="8" z="10" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockSmallContainer</SubtypeName>
                      <EntityId>92159721713463695</EntityId>
                      <Min x="4" y="6" z="10" />
                      <BlockOrientation Forward="Left" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.125</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Ammunition Container 12</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>143537825014626084</EntityId>
                      <Min x="3" y="7" z="10" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 39</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="3" y="4" z="9" />
                      <BlockOrientation Forward="Right" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="3" y="4" z="5" />
                      <BlockOrientation Forward="Right" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="4" y="4" z="4" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>130161423215351651</EntityId>
                      <Min x="1" y="4" z="10" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <CustomName>Ion Thrusters 42</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="-4" y="5" z="1" />
                      <BlockOrientation Forward="Up" Up="Forward" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="4" y="5" z="1" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="9" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope</SubtypeName>
                      <Min x="-1" y="9" z="10" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-3" y="8" z="11" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="8" z="12" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope</SubtypeName>
                      <Min x="1" y="9" z="10" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="3" y="8" z="11" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="8" z="12" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>75900263912224612</EntityId>
                      <Min x="-4" y="7" z="11" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 34</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockSmallContainer</SubtypeName>
                      <EntityId>97430305108793192</EntityId>
                      <Min x="-4" y="6" z="10" />
                      <BlockOrientation Forward="Left" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.125</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Ammunition Container 02</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="-3" y="4" z="10" />
                      <BlockOrientation Forward="Left" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>107024150052945412</EntityId>
                      <Min x="-1" y="4" z="11" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <CustomName>Ion Thrusters 42</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-4" y="6" z="11" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="4" y="6" z="11" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>143251890258424651</EntityId>
                      <Min x="3" y="7" z="11" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 40</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="3" y="4" z="10" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>84156147810856867</EntityId>
                      <Min x="1" y="4" z="11" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <CustomName>Ion Thrusters 43</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="9" z="10" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope</SubtypeName>
                      <Min x="-1" y="9" z="11" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-3" y="8" z="12" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="8" z="13" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope</SubtypeName>
                      <Min x="1" y="9" z="11" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="3" y="8" z="12" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="8" z="13" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>108463063124407593</EntityId>
                      <Min x="-4" y="7" z="12" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 38</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
                      <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
                      <EntityId>143851455104605564</EntityId>
                      <Min x="-5" y="6" z="10" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>74657274123027002</EntityId>
                      <Min x="-4" y="5" z="10" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 36</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="-3" y="4" z="11" />
                      <BlockOrientation Forward="Forward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-4" y="4" z="10" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-4" y="6" z="12" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-5" y="6" z="11" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="5" y="6" z="11" />
                      <BlockOrientation Forward="Forward" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="4" y="6" z="12" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>127872338619481114</EntityId>
                      <Min x="3" y="7" z="12" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 41</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="3" y="4" z="11" />
                      <BlockOrientation Forward="Up" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>126575172723723540</EntityId>
                      <Min x="3" y="5" z="10" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 44</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="4" y="4" z="10" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorCenter</SubtypeName>
                      <EntityId>143863404079350321</EntityId>
                      <Min x="0" y="9" z="13" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-1" y="9" z="12" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="-3" y="8" z="13" />
                      <BlockOrientation Forward="Down" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockLargeThrust</SubtypeName>
                      <EntityId>79087845881725808</EntityId>
                      <Min x="-3" y="5" z="13" />
                      <BlockOrientation Forward="Backward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Large Ion Thruster 11</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="-1" y="8" z="13" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-2" y="8" z="14" />
                      <BlockOrientation Forward="Up" Up="Backward" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="1" y="9" z="12" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="3" y="8" z="13" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="1" y="8" z="13" />
                      <BlockOrientation Forward="Left" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockLargeThrust</SubtypeName>
                      <EntityId>74477972806061548</EntityId>
                      <Min x="2" y="5" z="13" />
                      <BlockOrientation Forward="Backward" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Large Ion Thruster 10</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="2" y="8" z="14" />
                      <BlockOrientation Forward="Up" Up="Backward" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>123584537154151702</EntityId>
                      <Min x="-4" y="5" z="11" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 37</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-4" y="6" z="13" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
                      <SubtypeName>SmallBlockConveyor</SubtypeName>
                      <EntityId>105853181522480064</EntityId>
                      <Min x="0" y="6" z="9" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="4" y="6" z="13" />
                      <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>76198867849670716</EntityId>
                      <Min x="3" y="5" z="11" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 45</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
                      <SubtypeName>SmallBlockLight_1corner</SubtypeName>
                      <EntityId>117773076216916149</EntityId>
                      <Min x="-5" y="4" z="14" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>External Light G-2</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <Radius>1</Radius>
                      <ReflectorRadius>120</ReflectorRadius>
                      <ColorRed>0.7058824</ColorRed>
                      <ColorGreen>0.784313738</ColorGreen>
                      <Falloff>1</Falloff>
                      <Intensity>10</Intensity>
                      <BlinkIntervalSeconds>1</BlinkIntervalSeconds>
                      <BlinkLenght>10</BlinkLenght>
                      <BlinkOffset>0</BlinkOffset>
                      <Offset>0.5</Offset>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-4" y="6" z="14" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>78718770954249466</EntityId>
                      <Min x="-4" y="5" z="12" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 38</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockLargeThrust</SubtypeName>
                      <EntityId>73383583306107147</EntityId>
                      <Min x="-1" y="6" z="13" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Large Ion Thruster 12</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>124294437489324757</EntityId>
                      <Min x="-1" y="5" z="13" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 43</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-4" y="7" z="14" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-4" y="7" z="13" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-4" y="5" z="14" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-4" y="5" z="13" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="-1" y="8" z="14" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>111625774076768982</EntityId>
                      <Min x="0" y="8" z="13" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 39</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope</SubtypeName>
                      <Min x="1" y="9" z="13" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="1" y="8" z="14" />
                      <BlockOrientation Forward="Up" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>121981120343991657</EntityId>
                      <Min x="3" y="5" z="12" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 46</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="4" y="6" z="14" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
                      <SubtypeName>SmallBlockSmallThrust</SubtypeName>
                      <EntityId>80817846319781464</EntityId>
                      <Min x="1" y="5" z="13" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Ion Thrusters 44</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="4" y="7" z="13" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="4" y="7" z="14" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="4" y="5" z="13" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="4" y="5" z="14" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-1" y="9" z="14" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-4" y="6" z="15" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-4" y="8" z="14" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-4" y="7" z="15" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-4" y="8" z="13" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-4" y="4" z="14" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-4" y="5" z="15" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-4" y="4" z="13" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="-1" y="8" z="15" />
                      <BlockOrientation Forward="Up" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="1" y="9" z="14" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="1" y="8" z="15" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="4" y="6" z="15" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="4" y="8" z="13" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="4" y="7" z="15" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="4" y="8" z="14" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="4" y="4" z="13" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="4" y="5" z="15" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="4" y="4" z="14" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope</SubtypeName>
                      <Min x="-1" y="9" z="15" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-4" y="6" z="16" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-4" y="8" z="15" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
                      <SubtypeName>TimerBlockSmall</SubtypeName>
                      <EntityId>124096654771241665</EntityId>
                      <Min x="1" y="7" z="10" />
                      <BlockOrientation Forward="Forward" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Dock Timer</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <Toolbar>
                        <ToolbarType>Character</ToolbarType>
                        <SelectedSlot xsi:nil="true" />
                        <Slots>
                          <Slot>
                            <Index>0</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                              <Action>OnOff_Off</Action>
                              <GridEntityId>0</GridEntityId>
                              <BlockEntityId>124096654771241665</BlockEntityId>
                              <GroupName>Cyclone Lights</GroupName>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>1</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                              <Action>OnOff_Off</Action>
                              <GridEntityId>0</GridEntityId>
                              <BlockEntityId>124096654771241665</BlockEntityId>
                              <GroupName>Cyclone Thrusters</GroupName>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>2</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>OnOff_Off</Action>
                              <BlockEntityId>73099833011583464</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>3</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                              <Action>OnOff_Off</Action>
                              <GridEntityId>0</GridEntityId>
                              <BlockEntityId>124096654771241665</BlockEntityId>
                              <GroupName>Cyclone Computers</GroupName>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>4</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>OnOff_Off</Action>
                              <BlockEntityId>133869917708659174</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>5</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>Lock</Action>
                              <BlockEntityId>98464156182294139</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>6</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                              <Action>Lock</Action>
                              <GridEntityId>0</GridEntityId>
                              <BlockEntityId>124096654771241665</BlockEntityId>
                              <GroupName>Cyclone Landing Gear</GroupName>
                            </Data>
                          </Slot>
                        </Slots>
                        <SlotsGamepad />
                      </Toolbar>
                      <Delay>1000</Delay>
                      <CurrentTime>0</CurrentTime>
                      <IsCountingDown>false</IsCountingDown>
                      <Silent>true</Silent>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-4" y="4" z="15" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
                      <SubtypeName>SmallProgrammableBlock</SubtypeName>
                      <EntityId>105763454963361443</EntityId>
                      <Min x="-1" y="6" z="9" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>LCDs Computer</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <Program>/* v:2.0174 [1.191 compatibility, new Inventory variants]
* Automatic LCDs 2 - In-game script by MMaster
*
* Last Update: Fixed multiline command marker \ at the end of line not working
*  Slower command updates in SlowMode
*  Added NB (no bars), NN (no numbers) &amp; NNB (no bars or numbers) variants of Inventory, InvList, Missing and all their variants (check guide)
*  Cockpit (and other blocks) panels support - read guide section 'How to use with cockpits?'
*  Script now correctly uses the Text Padding property of the LCD (you can set it however you want and the script will work with it)
*  Optimizations for servers running script limiter - use SlowMode!
*  Added SlowMode setting to considerably slow down the script (4-5 times less processing per second)
*  Now using MDK!
*  First part of rewrite of memory management which should optimize memory allocations a lot (more optimizations in progress)
* 
* Previous updates: Look at Change notes tab on Steam workshop page. */

/* Customize these: */

// Use this tag to identify LCDs managed by this script
// Name filtering rules can be used here so you can use even G:Group or T:[My LCD]
public string LCD_TAG = "T:[LCD]";

// Set to true if you want to slow down the script
public const bool SlowMode = false;

// How many lines to scroll per step
public const int SCROLL_LINES_PER_STEP = 1;

// Script automatically figures if LCD is using monospace font
// if you use custom font scroll down to the bottom, then scroll a bit up until you find AddCharsSize lines
// monospace font name and size definition is above those

// Enable initial boot sequence (after compile / world load)
public const bool ENABLE_BOOT = true;

/* READ THIS FULL GUIDE
http://steamcommunity.com/sharedfiles/filedetails/?id=407158161

Basic video guide
Please watch the video guide even if you don't understand my English. You can see how things are done there.

https://youtu.be/vqpPQ_20Xso


Please carefully read the FULL GUIDE before asking questions I had to remove guide from here to add more features :(
Please DO NOT publish this script or its derivations without my permission! Feel free to use it in blueprints!

Special Thanks
Keen Software House for awesome Space Engineers game
Malware for contributing to programmable blocks game code and MDK!

Watch Twitter: https://twitter.com/MattsPlayCorner
and Facebook: https://www.facebook.com/MattsPlayCorner1080p
for more crazy stuff from me in the future :)

If you want to make scripts for Space Engineers check out MDK by Malware:
https://github.com/malware-dev/MDK-SE/wiki/Quick-Introduction-to-Space-Engineers-Ingame-Scripts
*/
bool MDK_IS_GREAT = true;
/* Customize characters used by script */
class MMStyle {
    // Monospace font characters (\uXXXX is special character code)
    public const char BAR_MONO_START = '[';
    public const char BAR_MONO_END = ']';
    public const char BAR_MONO_EMPTY = '\u2591'; // 25% rect
    public const char BAR_MONO_FILL = '\u2588'; // full rect

    // Classic (Debug) font characters
    // Start and end characters of progress bar need to be the same width!
    public const char BAR_START = '[';
    public const char BAR_END = ']';
    // Empty and fill characters of progress bar need to be the same width!
    public const char BAR_EMPTY = '\'';
    public const char BAR_FILL = '|';
}
// (for developer) Debug level to show
public const int DebugLevel = 0;

// (for modded lcds) Affects all LCDs managed by this programmable block
/* LCD height modifier
0.5f makes the LCD have only 1/2 the lines of normal LCD
2.0f makes it fit 2x more lines on LCD */
public const float HEIGHT_MOD = 1.0f;

/* line width modifier
0.5f moves the right edge to 50% of normal LCD width
2.0f makes it fit 200% more text on line */
public const float WIDTH_MOD = 1.0f;

List&lt;string&gt; BOOT_FRAMES = new List&lt;string&gt;() {
/* BOOT FRAMES
* Each @"&lt;text&gt;" marks single frame, add as many as you want each will be displayed for one second
* @"" is multiline string so you can write multiple lines */
@"
Initializing systems"
,
@"
Verifying connections"
,
@"
Loading commands"
};

void ItemsConf() {
    // ITEMS AND QUOTAS LIST
    // (subType, mainType, quota, display name, short name)
    // VANILLA ITEMS
    Add("Stone", "Ore");
    Add("Iron", "Ore");
    Add("Nickel", "Ore");
    Add("Cobalt", "Ore");
    Add("Magnesium", "Ore");
    Add("Silicon", "Ore");
    Add("Silver", "Ore");
    Add("Gold", "Ore");
    Add("Platinum", "Ore");
    Add("Uranium", "Ore");
    Add("Ice", "Ore");
    Add("Scrap", "Ore");
    Add("Stone", "Ingot", 40000, "Gravel", "gravel");
    Add("Iron", "Ingot", 300000);
    Add("Nickel", "Ingot", 900000);
    Add("Cobalt", "Ingot", 120000);
    Add("Magnesium", "Ingot", 80000);
    Add("Silicon", "Ingot", 80000);
    Add("Silver", "Ingot", 800000);
    Add("Gold", "Ingot", 80000);
    Add("Platinum", "Ingot", 45000);
    Add("Uranium", "Ingot", 12000);
    Add("AutomaticRifleItem", "Tool", 0, "Automatic Rifle");
    Add("PreciseAutomaticRifleItem", "Tool", 0, "* Precise Rifle");
    Add("RapidFireAutomaticRifleItem", "Tool", 0, "** Rapid-Fire Rifle");
    Add("UltimateAutomaticRifleItem", "Tool", 0, "*** Elite Rifle");
    Add("WelderItem", "Tool", 0, "Welder");
    Add("Welder2Item", "Tool", 0, "* Enh. Welder");
    Add("Welder3Item", "Tool", 0, "** Prof. Welder");
    Add("Welder4Item", "Tool", 0, "*** Elite Welder");
    Add("AngleGrinderItem", "Tool", 0, "Angle Grinder");
    Add("AngleGrinder2Item", "Tool", 0, "* Enh. Grinder");
    Add("AngleGrinder3Item", "Tool", 0, "** Prof. Grinder");
    Add("AngleGrinder4Item", "Tool", 0, "*** Elite Grinder");
    Add("HandDrillItem", "Tool", 0, "Hand Drill");
    Add("HandDrill2Item", "Tool", 0, "* Enh. Drill");
    Add("HandDrill3Item", "Tool", 0, "** Prof. Drill");
    Add("HandDrill4Item", "Tool", 0, "*** Elite Drill");
    Add("Construction", "Component", 50000);
    Add("MetalGrid", "Component", 15500, "Metal Grid");
    Add("InteriorPlate", "Component", 55000, "Interior Plate");
    Add("SteelPlate", "Component", 300000, "Steel Plate");
    Add("Girder", "Component", 3500);
    Add("SmallTube", "Component", 26000, "Small Tube");
    Add("LargeTube", "Component", 6000, "Large Tube");
    Add("Motor", "Component", 16000);
    Add("Display", "Component", 500);
    Add("BulletproofGlass", "Component", 12000, "Bulletp. Glass", "bpglass");
    Add("Computer", "Component", 6500);
    Add("Reactor", "Component", 10000);
    Add("Thrust", "Component", 16000, "Thruster", "thruster");
    Add("GravityGenerator", "Component", 250, "GravGen", "gravgen");
    Add("Medical", "Component", 120);
    Add("RadioCommunication", "Component", 250, "Radio-comm", "radio");
    Add("Detector", "Component", 400);
    Add("Explosives", "Component", 500);
    Add("SolarCell", "Component", 2800, "Solar Cell");
    Add("PowerCell", "Component", 2800, "Power Cell");
    Add("Superconductor", "Component", 3000);
    Add("Canvas", "Component", 300);
    Add("NATO_5p56x45mm", "Ammo", 8000, "5.56x45mm", "5.56x45mm");
    Add("NATO_25x184mm", "Ammo", 2500, "25x184mm", "25x184mm");
    Add("Missile200mm", "Ammo", 1600, "200mm Missile", "200mmmissile");
    Add("OxygenBottle", "OxygenContainerObject", 5, "Oxygen Bottle");
    Add("HydrogenBottle", "GasContainerObject", 5, "Hydrogen Bottle");

    // MODDED ITEMS
    // (subType, mainType, quota, display name, short name, used)
    // * if used is true, item will be shown in inventory even for 0 items
    // * if used is false, item will be used only for display name and short name
    // AzimuthSupercharger
    Add("AzimuthSupercharger", "Component", 1600, "Supercharger", "supercharger", false);
    // OKI Ammo
    Add("OKI23mmAmmo", "Ammo", 500, "23x180mm", "23x180mm", false);
    Add("OKI50mmAmmo", "Ammo", 500, "50x450mm", "50x450mm", false);
    Add("OKI122mmAmmo", "Ammo", 200, "122x640mm", "122x640mm", false);
    Add("OKI230mmAmmo", "Ammo", 100, "230x920mm", "230x920mm", false);

    // REALLY REALLY REALLY
    // DO NOT MODIFY ANYTHING BELOW THIS (TRANSLATION STRINGS ARE AT THE BOTTOM)
}
void Add(string sT, string mT, int q = 0, string dN = "", string sN = "", bool u = true) { Ə.ƃ(sT, mT, q, dN, sN, u); }
Ƈ Ə;ȓ ƕ;Ģ ϓ;ɖ o=null;void ϒ(string ƚ){}void ϑ(string ϐ,string Ϗ){string Ƕ=ϐ.ToLower();switch(Ƕ){case"lcd_tag":LCD_TAG=Ϗ;
break;}}void ϔ(){string[]ǉ=Me.CustomData.Split('\n');for(int F=0;F&lt;ǉ.Length;F++){string ǎ=ǉ[F];int š=ǎ.IndexOf('=');if(š&lt;0){ϒ
(ǎ);continue;}string ώ=ǎ.Substring(0,š).Trim();string ǫ=ǎ.Substring(š+1).Trim();ϑ(ώ,ǫ);}}void ύ(ȓ ƕ){Ə=new Ƈ();ItemsConf(
);ϔ();o=new ɖ(this,DebugLevel,ƕ);o.Ə=Ə;o.ɧ=LCD_TAG;o.ɦ=SCROLL_LINES_PER_STEP;o.ɥ=ENABLE_BOOT;o.ɤ=BOOT_FRAMES;o.ɣ=!
MDK_IS_GREAT;o.ɢ=HEIGHT_MOD;o.ɬ=WIDTH_MOD;o.Ǡ();}void ό(){ƕ.ǂ=this;o.ǂ=this;}Program(){Runtime.UpdateFrequency=UpdateFrequency.
Update1;}void Main(string ą,UpdateType ϊ){try{if(ƕ==null){ƕ=new ȓ(this,DebugLevel,SlowMode);ύ(ƕ);ϓ=new Ģ(o);ƕ.Ȉ(ϓ,0);}else{ό();
o.ő.Ѕ();}if(ą.Length==0&amp;&amp;(ϊ&amp;(UpdateType.Update1|UpdateType.Update10|UpdateType.Update100))==0){ƕ.ȩ();return;}if(ą!=""){if
(ϓ.ă(ą)){ƕ.ȩ();return;}}ϓ.Ġ=0;ƕ.Ƞ();}catch(Exception ex){Echo("ERROR DESCRIPTION:\n"+ex.ToString());Me.Enabled=false;}}
class ζ:ɓ{Ģ ē;ɖ o;string ą="";public ζ(ɖ Û,Ģ đ,string ĳ){Ɏ=-1;ɒ="ArgScroll";ą=ĳ;ē=đ;o=Û;}int Ŵ;β ε;public override void Ʌ(){ε
=new β(Ɠ,o.ő);}int δ=0;int Y=0;ʤ ƚ;public override bool Ʉ(bool ë){if(!ë){Y=0;ε.Ŧ();ƚ=new ʤ(Ɠ);δ=0;}if(Y==0){if(!ƚ.ʻ(ą,ë))
return false;if(ƚ.ˋ.Count&gt;0){if(!int.TryParse(ƚ.ˋ[0].ĳ,out Ŵ))Ŵ=1;else if(Ŵ&lt;1)Ŵ=1;}if(ƚ.ʸ.EndsWith("up"))Ŵ=-Ŵ;else if(!ƚ.ʸ.
EndsWith("down"))Ŵ=0;Y++;ë=false;}if(Y==1){if(!ε.ϼ("textpanel",ƚ.ʣ,ë))return false;Y++;ë=false;}è n;for(;δ&lt;ε.ϲ();δ++){if(!Ɠ.Ȝ(20
))return false;IMyTextPanel γ=ε.ί[δ]as IMyTextPanel;if(!ē.Ĝ.TryGetValue(γ,out n))continue;if(n==null||n.å!=γ)continue;if(
n.é)n.æ.Ļ=10;if(Ŵ&gt;0)n.æ.ň(Ŵ);else if(Ŵ&lt;0)n.æ.Ŭ(-Ŵ);else n.æ.ĺ();n.N();}return true;}}class β{ȓ Ɠ;ϵ α;IMyCubeGrid ΰ{get{
return Ɠ.ǂ.Me.CubeGrid;}}IMyGridTerminalSystem ƿ{get{return Ɠ.ǂ.GridTerminalSystem;}}public List&lt;IMyTerminalBlock&gt;ί=new List&lt;
IMyTerminalBlock&gt;();public β(ȓ ƕ,ϵ ή){Ɠ=ƕ;α=ή;}int η=0;public double ω(ref double χ,ref double φ,bool ë){if(!ë)η=0;for(;η&lt;ί.Count;η++){
if(!Ɠ.Ȝ(4))return Double.NaN;IMyInventory ρ=ί[η].GetInventory(0);if(ρ==null)continue;χ+=(double)ρ.CurrentVolume;φ+=(double
)ρ.MaxVolume;}χ*=1000;φ*=1000;return(φ&gt;0?χ/φ*100:100);}int υ=0;double τ=0;public double σ(bool ë){if(!ë){υ=0;τ=0;}for(;υ&lt;
ί.Count;υ++){if(!Ɠ.Ȝ(6))return Double.NaN;for(int ς=0;ς&lt;2;ς++){IMyInventory ρ=ί[υ].GetInventory(ς);if(ρ==null)continue;τ
+=(double)ρ.CurrentMass;}}return τ*1000;}int ψ=0;private bool π(bool ë=false){if(!ë)ψ=0;while(ψ&lt;ί.Count){if(!Ɠ.Ȝ(4))return
false;if(ί[ψ].CubeGrid!=ΰ){ί.RemoveAt(ψ);continue;}ψ++;}return true;}List&lt;IMyBlockGroup&gt;ο=new List&lt;IMyBlockGroup&gt;();List&lt;
IMyTerminalBlock&gt;ξ=new List&lt;IMyTerminalBlock&gt;();int ν=0;public bool μ(string ʣ,bool ë){int λ=ʣ.IndexOf(':');string κ=(λ&gt;=1&amp;&amp;λ&lt;=2?ʣ.
Substring(0,λ):"");bool ι=κ.Contains("T");if(κ!="")ʣ=ʣ.Substring(λ+1);if(ʣ==""||ʣ=="*"){if(!ë){ξ.Clear();ƿ.GetBlocks(ξ);ί.AddList
(ξ);}if(ι)if(!π(ë))return false;return true;}string ϋ=(κ.Contains("G")?ʣ.Trim():"");if(ϋ!=""){if(!ë){ο.Clear();ƿ.
GetBlockGroups(ο);ν=0;}for(;ν&lt;ο.Count;ν++){IMyBlockGroup ϕ=ο[ν];if(string.Compare(ϕ.Name,ϋ,true)==0){if(!ë){ξ.Clear();ϕ.GetBlocks(ξ);ί
.AddList(ξ);}if(ι)if(!π(ë))return false;return true;}}return true;}if(!ë){ξ.Clear();ƿ.SearchBlocksOfName(ʣ,ξ);ί.AddList(ξ
);}if(ι)if(!π(ë))return false;return true;}List&lt;IMyBlockGroup&gt;ϱ=new List&lt;IMyBlockGroup&gt;();List&lt;IMyTerminalBlock&gt;Ͻ=new
List&lt;IMyTerminalBlock&gt;();int ϻ=0;int Ϻ=0;public bool Ϲ(string ʐ,string ϋ,bool ι,bool ë){if(!ë){ϱ.Clear();ƿ.GetBlockGroups(ϱ)
;ϻ=0;}for(;ϻ&lt;ϱ.Count;ϻ++){IMyBlockGroup ϕ=ϱ[ϻ];if(string.Compare(ϕ.Name,ϋ,true)==0){if(!ë){Ϻ=0;Ͻ.Clear();ϕ.GetBlocks(Ͻ);}
else ë=false;for(;Ϻ&lt;Ͻ.Count;Ϻ++){if(!Ɠ.Ȝ(6))return false;if(ι&amp;&amp;Ͻ[Ϻ].CubeGrid!=ΰ)continue;if(α.Ѐ(Ͻ[Ϻ],ʐ))ί.Add(Ͻ[Ϻ]);}return
true;}}return true;}List&lt;IMyTerminalBlock&gt;ϸ=new List&lt;IMyTerminalBlock&gt;();int Ϸ=0;public bool ϼ(string ʐ,string ʣ,bool ë){int
λ=ʣ.IndexOf(':');string κ=(λ&gt;=1&amp;&amp;λ&lt;=2?ʣ.Substring(0,λ):"");bool ι=κ.Contains("T");if(κ!="")ʣ=ʣ.Substring(λ+1);if(!ë){ϸ.
Clear();Ϸ=0;}string ϋ=(κ.Contains("G")?ʣ.Trim():"");if(ϋ!=""){if(!Ϲ(ʐ,ϋ,ι,ë))return false;return true;}if(!ë)α.Ё(ref ϸ,ʐ);if(
ʣ==""||ʣ=="*"){if(!ë)ί.AddList(ϸ);if(ι)if(!π(ë))return false;return true;}for(;Ϸ&lt;ϸ.Count;Ϸ++){if(!Ɠ.Ȝ(4))return false;if(
ι&amp;&amp;ϸ[Ϸ].CubeGrid!=ΰ)continue;if(ϸ[Ϸ].CustomName.Contains(ʣ))ί.Add(ϸ[Ϸ]);}return true;}public void ϴ(β ϳ){ί.AddList(ϳ.ί);}
public void Ŧ(){ί.Clear();}public int ϲ(){return ί.Count;}}class ϵ{ȓ Ɠ;ɖ o;public MyGridProgram ǂ{get{return Ɠ.ǂ;}}public
IMyGridTerminalSystem ƿ{get{return Ɠ.ǂ.GridTerminalSystem;}}public ϵ(ȓ ƕ,ɖ Û){Ɠ=ƕ;o=Û;}void Љ&lt;ǡ&gt;(List&lt;IMyTerminalBlock&gt;Ј,Func&lt;
IMyTerminalBlock,bool&gt;Ї=null)where ǡ:class,IMyTerminalBlock{ƿ.GetBlocksOfType&lt;ǡ&gt;(Ј,Ї);}public Dictionary&lt;string,Action&lt;List&lt;
IMyTerminalBlock&gt;,Func&lt;IMyTerminalBlock,bool&gt;&gt;&gt;І;public void Ѕ(){if(І!=null)return;І=new Dictionary&lt;string,Action&lt;List&lt;IMyTerminalBlock&gt;
,Func&lt;IMyTerminalBlock,bool&gt;&gt;&gt;(){{"CargoContainer",Љ&lt;IMyCargoContainer&gt;},{"TextPanel",Љ&lt;IMyTextPanel&gt;},{"Assembler",Љ&lt;
IMyAssembler&gt;},{"Refinery",Љ&lt;IMyRefinery&gt;},{"Reactor",Љ&lt;IMyReactor&gt;},{"SolarPanel",Љ&lt;IMySolarPanel&gt;},{"BatteryBlock",Љ&lt;
IMyBatteryBlock&gt;},{"Beacon",Љ&lt;IMyBeacon&gt;},{"RadioAntenna",Љ&lt;IMyRadioAntenna&gt;},{"AirVent",Љ&lt;IMyAirVent&gt;},{"ConveyorSorter",Љ&lt;
IMyConveyorSorter&gt;},{"OxygenTank",Љ&lt;IMyGasTank&gt;},{"OxygenGenerator",Љ&lt;IMyGasGenerator&gt;},{"OxygenFarm",Љ&lt;IMyOxygenFarm&gt;},{"LaserAntenna",Љ
&lt;IMyLaserAntenna&gt;},{"Thrust",Љ&lt;IMyThrust&gt;},{"Gyro",Љ&lt;IMyGyro&gt;},{"SensorBlock",Љ&lt;IMySensorBlock&gt;},{"ShipConnector",Љ&lt;
IMyShipConnector&gt;},{"ReflectorLight",Љ&lt;IMyReflectorLight&gt;},{"InteriorLight",Љ&lt;IMyInteriorLight&gt;},{"LandingGear",Љ&lt;IMyLandingGear&gt;},{
"ProgrammableBlock",Љ&lt;IMyProgrammableBlock&gt;},{"TimerBlock",Љ&lt;IMyTimerBlock&gt;},{"MotorStator",Љ&lt;IMyMotorStator&gt;},{"PistonBase",Љ&lt;
IMyPistonBase&gt;},{"Projector",Љ&lt;IMyProjector&gt;},{"ShipMergeBlock",Љ&lt;IMyShipMergeBlock&gt;},{"SoundBlock",Љ&lt;IMySoundBlock&gt;},{"Collector",Љ&lt;
IMyCollector&gt;},{"JumpDrive",Љ&lt;IMyJumpDrive&gt;},{"Door",Љ&lt;IMyDoor&gt;},{"GravityGeneratorSphere",Љ&lt;IMyGravityGeneratorSphere&gt;},{
"GravityGenerator",Љ&lt;IMyGravityGenerator&gt;},{"ShipDrill",Љ&lt;IMyShipDrill&gt;},{"ShipGrinder",Љ&lt;IMyShipGrinder&gt;},{"ShipWelder",Љ&lt;IMyShipWelder&gt;}
,{"Parachute",Љ&lt;IMyParachute&gt;},{"LargeGatlingTurret",Љ&lt;IMyLargeGatlingTurret&gt;},{"LargeInteriorTurret",Љ&lt;
IMyLargeInteriorTurret&gt;},{"LargeMissileTurret",Љ&lt;IMyLargeMissileTurret&gt;},{"SmallGatlingGun",Љ&lt;IMySmallGatlingGun&gt;},{
"SmallMissileLauncherReload",Љ&lt;IMySmallMissileLauncherReload&gt;},{"SmallMissileLauncher",Љ&lt;IMySmallMissileLauncher&gt;},{"VirtualMass",Љ&lt;IMyVirtualMass&gt;}
,{"Warhead",Љ&lt;IMyWarhead&gt;},{"FunctionalBlock",Љ&lt;IMyFunctionalBlock&gt;},{"LightingBlock",Љ&lt;IMyLightingBlock&gt;},{
"ControlPanel",Љ&lt;IMyControlPanel&gt;},{"Cockpit",Љ&lt;IMyCockpit&gt;},{"CryoChamber",Љ&lt;IMyCryoChamber&gt;},{"MedicalRoom",Љ&lt;IMyMedicalRoom&gt;},{
"RemoteControl",Љ&lt;IMyRemoteControl&gt;},{"ButtonPanel",Љ&lt;IMyButtonPanel&gt;},{"CameraBlock",Љ&lt;IMyCameraBlock&gt;},{"OreDetector",Љ&lt;
IMyOreDetector&gt;},{"ShipController",Љ&lt;IMyShipController&gt;},{"Decoy",Љ&lt;IMyDecoy&gt;}};}public void Њ(ref List&lt;IMyTerminalBlock&gt;Ā,string Є){
Action&lt;List&lt;IMyTerminalBlock&gt;,Func&lt;IMyTerminalBlock,bool&gt;&gt;Ѓ;if(Є=="SurfaceProvider"){ƿ.GetBlocksOfType&lt;IMyTextSurfaceProvider&gt;
(Ā);return;}if(І.TryGetValue(Є,out Ѓ))Ѓ(Ā,null);else{if(Є=="WindTurbine"){ƿ.GetBlocksOfType&lt;IMyPowerProducer&gt;(Ā,(Ђ)=&gt;Ђ.
BlockDefinition.TypeIdString.EndsWith("WindTurbine"));return;}if(Є=="HydrogenEngine"){ƿ.GetBlocksOfType&lt;IMyPowerProducer&gt;(Ā,(Ђ)=&gt;Ђ.
BlockDefinition.TypeIdString.EndsWith("HydrogenEngine"));return;}}}public void Ё(ref List&lt;IMyTerminalBlock&gt;Ā,string Ͽ){Њ(ref Ā,ϰ(Ͽ.Trim
()));}public bool Ѐ(IMyTerminalBlock å,string Ͽ){string Ͼ=ϰ(Ͽ);switch(Ͼ){case"FunctionalBlock":return true;case
"ShipController":return(å as IMyShipController!=null);default:return å.BlockDefinition.TypeIdString.Contains(ϰ(Ͽ));}}public string ϰ(
string Ϟ){if(Ϟ=="surfaceprovider")return"SurfaceProvider";if(Ϟ.ǭ("carg")||Ϟ.ǭ("conta"))return"CargoContainer";if(Ϟ.ǭ("text")||
Ϟ.ǭ("lcd"))return"TextPanel";if(Ϟ.ǭ("ass"))return"Assembler";if(Ϟ.ǭ("refi"))return"Refinery";if(Ϟ.ǭ("reac"))return
"Reactor";if(Ϟ.ǭ("solar"))return"SolarPanel";if(Ϟ.ǭ("wind"))return"WindTurbine";if(Ϟ.ǭ("hydro")&amp;&amp;Ϟ.Contains("eng"))return
"HydrogenEngine";if(Ϟ.ǭ("bat"))return"BatteryBlock";if(Ϟ.ǭ("bea"))return"Beacon";if(Ϟ.Ǭ("vent"))return"AirVent";if(Ϟ.Ǭ("sorter"))return
"ConveyorSorter";if(Ϟ.Ǭ("tank"))return"OxygenTank";if(Ϟ.Ǭ("farm")&amp;&amp;Ϟ.Ǭ("oxy"))return"OxygenFarm";if(Ϟ.Ǭ("gene")&amp;&amp;Ϟ.Ǭ("oxy"))return
"OxygenGenerator";if(Ϟ.Ǭ("cryo"))return"CryoChamber";if(string.Compare(Ϟ,"laserantenna",true)==0)return"LaserAntenna";if(Ϟ.Ǭ("antenna"))
return"RadioAntenna";if(Ϟ.ǭ("thrust"))return"Thrust";if(Ϟ.ǭ("gyro"))return"Gyro";if(Ϟ.ǭ("sensor"))return"SensorBlock";if(Ϟ.Ǭ(
"connector"))return"ShipConnector";if(Ϟ.ǭ("reflector")||Ϟ.ǭ("spotlight"))return"ReflectorLight";if((Ϟ.ǭ("inter")&amp;&amp;Ϟ.Ǫ("light")))
return"InteriorLight";if(Ϟ.ǭ("land"))return"LandingGear";if(Ϟ.ǭ("program"))return"ProgrammableBlock";if(Ϟ.ǭ("timer"))return
"TimerBlock";if(Ϟ.ǭ("motor")||Ϟ.ǭ("rotor"))return"MotorStator";if(Ϟ.ǭ("piston"))return"PistonBase";if(Ϟ.ǭ("proj"))return"Projector";
if(Ϟ.Ǭ("merge"))return"ShipMergeBlock";if(Ϟ.ǭ("sound"))return"SoundBlock";if(Ϟ.ǭ("col"))return"Collector";if(Ϟ.Ǭ("jump"))
return"JumpDrive";if(string.Compare(Ϟ,"door",true)==0)return"Door";if((Ϟ.Ǭ("grav")&amp;&amp;Ϟ.Ǭ("sphe")))return
"GravityGeneratorSphere";if(Ϟ.Ǭ("grav"))return"GravityGenerator";if(Ϟ.Ǫ("drill"))return"ShipDrill";if(Ϟ.Ǭ("grind"))return"ShipGrinder";if(Ϟ.Ǫ(
"welder"))return"ShipWelder";if(Ϟ.ǭ("parach"))return"Parachute";if((Ϟ.Ǭ("turret")&amp;&amp;Ϟ.Ǭ("gatl")))return"LargeGatlingTurret";if((Ϟ
.Ǭ("turret")&amp;&amp;Ϟ.Ǭ("inter")))return"LargeInteriorTurret";if((Ϟ.Ǭ("turret")&amp;&amp;Ϟ.Ǭ("miss")))return"LargeMissileTurret";if(Ϟ.Ǭ
("gatl"))return"SmallGatlingGun";if((Ϟ.Ǭ("launcher")&amp;&amp;Ϟ.Ǭ("reload")))return"SmallMissileLauncherReload";if((Ϟ.Ǭ(
"launcher")))return"SmallMissileLauncher";if(Ϟ.Ǭ("mass"))return"VirtualMass";if(string.Compare(Ϟ,"warhead",true)==0)return
"Warhead";if(Ϟ.ǭ("func"))return"FunctionalBlock";if(string.Compare(Ϟ,"shipctrl",true)==0)return"ShipController";if(Ϟ.ǭ("light"))
return"LightingBlock";if(Ϟ.ǭ("contr"))return"ControlPanel";if(Ϟ.ǭ("coc"))return"Cockpit";if(Ϟ.ǭ("medi"))return"MedicalRoom";if
(Ϟ.ǭ("remote"))return"RemoteControl";if(Ϟ.ǭ("but"))return"ButtonPanel";if(Ϟ.ǭ("cam"))return"CameraBlock";if(Ϟ.Ǭ("detect")
)return"OreDetector";if(Ϟ.ǭ("decoy"))return"Decoy";return"Unknown";}public string Ϫ(IMyBatteryBlock ō){string ϝ="";if(ō.
ChargeMode==ChargeMode.Recharge)ϝ="(+) ";else if(ō.ChargeMode==ChargeMode.Discharge)ϝ="(-) ";else ϝ="(±) ";return ϝ+o.Ǽ((ō.
CurrentStoredPower/ō.MaxStoredPower)*100.0f)+"%";}Dictionary&lt;MyLaserAntennaStatus,string&gt;Ϝ=new Dictionary&lt;MyLaserAntennaStatus,string&gt;(){{
MyLaserAntennaStatus.Idle,"IDLE"},{MyLaserAntennaStatus.Connecting,"CONNECTING"},{MyLaserAntennaStatus.Connected,"CONNECTED"},{
MyLaserAntennaStatus.OutOfRange,"OUT OF RANGE"},{MyLaserAntennaStatus.RotatingToTarget,"ROTATING"},{MyLaserAntennaStatus.
SearchingTargetForAntenna,"SEARCHING"}};public string ϛ(IMyLaserAntenna ŋ){return Ϝ[ŋ.Status];}public double Ϛ(IMyJumpDrive Ō,out double ˆ,out
double Ŷ){ˆ=Ō.CurrentStoredPower;Ŷ=Ō.MaxStoredPower;return(Ŷ&gt;0?ˆ/Ŷ*100:0);}public double ϙ(IMyJumpDrive Ō){double ˆ=Ō.
CurrentStoredPower;double Ŷ=Ō.MaxStoredPower;return(Ŷ&gt;0?ˆ/Ŷ*100:0);}}class Ϙ:ɓ{ɖ o;Ģ ē;public int ϗ=0;public Ϙ(ɖ Û,Ģ k){ɒ="BootPanelsTask"
;Ɏ=1;o=Û;ē=k;if(!o.ɥ){ϗ=int.MaxValue;ē.Ć=true;}}ǒ Ď;public override void Ʌ(){Ď=o.Ď;}public override bool Ʉ(bool ë){if(ϗ&gt;o
.ɤ.Count){Ɇ();return true;}if(!ë&amp;&amp;ϗ==0){ē.Ć=false;}if(!Ϯ(ë))return false;ϗ++;return true;}public override void Ƀ(){ē.Ć=
true;}public void ϖ(){û ç=ē.ç;for(int F=0;F&lt;ç.º();F++){è n=ç.ª(F);n.H();}ϗ=(o.ɥ?0:int.MaxValue);}int F;ŝ ϯ=null;public bool
Ϯ(bool ë){û ç=ē.ç;if(!ë)F=0;int ϭ=0;for(;F&lt;ç.º();F++){if(!Ɠ.Ȝ(40)||ϭ&gt;5)return false;è n=ç.ª(F);ϯ=o.Ǐ(ϯ,n);float?Ϭ=n.ß?.
FontSize;if(Ϭ!=null&amp;&amp;Ϭ&gt;3f)continue;if(ϯ.ŗ.Count&lt;=0)ϯ.Ť(o.ǈ(null,n));else o.ǈ(ϯ.ŗ[0],n);o.Ƭ();o.Ƣ(Ď.ǡ("B1"));double ʒ=(double)ϗ/o
.ɤ.Count*100;o.Ư(ʒ);if(ϗ==o.ɤ.Count){o.Ǎ("");o.Ƣ("Automatic LCDs 2");o.Ƣ("by MMaster");}else o.ǌ(o.ɤ[ϗ]);bool é=n.é;n.é=
false;o.Ǒ(n,ϯ);n.é=é;ϭ++;}return true;}public bool ϫ(){return ϗ&lt;=o.ɤ.Count;}}public enum ϩ{Ϩ=0,ϧ=1,Ϧ=2,ϥ=3,Ϥ=4,ϣ=5,Ϣ=6,ϡ=7,Ϡ=
8,ϟ=9,έ=10,ʹ=11,Β=12,ʷ=13,ʶ=14,ʵ=15,ʴ=16,ʳ=17,ʲ=18,ʱ=19,ʰ=20,ʯ=21,ʮ=22,ʭ=23,ʬ=24,ʫ=25,ʪ=26,ʩ=27,ʨ=28,ʧ=29,ʦ=30,ʥ=31,}
class ʤ{ȓ Ɠ;public string ʸ="";public string ʣ="";public string ʺ="";public string ˏ="";public ϩ ˎ=ϩ.Ϩ;public ʤ(ȓ ƕ){Ɠ=ƕ;}ϩ ˍ
(){if(ʸ=="echo"||ʸ=="center"||ʸ=="right")return ϩ.ϧ;if(ʸ.StartsWith("hscroll"))return ϩ.ʦ;if(ʸ.StartsWith("inventory")||ʸ
.StartsWith("missing")||ʸ.StartsWith("invlist"))return ϩ.Ϧ;if(ʸ.StartsWith("working"))return ϩ.ʲ;if(ʸ.StartsWith("cargo")
)return ϩ.ϥ;if(ʸ.StartsWith("mass"))return ϩ.Ϥ;if(ʸ.StartsWith("shipmass"))return ϩ.ʭ;if(ʸ=="oxygen")return ϩ.ϣ;if(ʸ.
StartsWith("tanks"))return ϩ.Ϣ;if(ʸ.StartsWith("powertime"))return ϩ.ϡ;if(ʸ.StartsWith("powerused"))return ϩ.Ϡ;if(ʸ.StartsWith(
"power"))return ϩ.ϟ;if(ʸ.StartsWith("speed"))return ϩ.έ;if(ʸ.StartsWith("accel"))return ϩ.ʹ;if(ʸ.StartsWith("alti"))return ϩ.ʫ;
if(ʸ.StartsWith("charge"))return ϩ.Β;if(ʸ.StartsWith("docked"))return ϩ.ʥ;if(ʸ.StartsWith("time")||ʸ.StartsWith("date"))
return ϩ.ʷ;if(ʸ.StartsWith("countdown"))return ϩ.ʶ;if(ʸ.StartsWith("textlcd"))return ϩ.ʵ;if(ʸ.EndsWith("count"))return ϩ.ʴ;if(
ʸ.StartsWith("dampeners")||ʸ.StartsWith("occupied"))return ϩ.ʳ;if(ʸ.StartsWith("damage"))return ϩ.ʱ;if(ʸ.StartsWith(
"amount"))return ϩ.ʰ;if(ʸ.StartsWith("pos"))return ϩ.ʯ;if(ʸ.StartsWith("distance"))return ϩ.ʬ;if(ʸ.StartsWith("details"))return
ϩ.ʮ;if(ʸ.StartsWith("stop"))return ϩ.ʪ;if(ʸ.StartsWith("gravity"))return ϩ.ʩ;if(ʸ.StartsWith("customdata"))return ϩ.ʨ;if(
ʸ.StartsWith("prop"))return ϩ.ʧ;return ϩ.Ϩ;}public ŵ ˌ(){switch(ˎ){case ϩ.ϧ:return new Ҕ();case ϩ.Ϧ:return new Ҡ();case ϩ
.ϥ:return new ʙ();case ϩ.Ϥ:return new ҿ();case ϩ.ϣ:return new ҷ();case ϩ.Ϣ:return new щ();case ϩ.ϡ:return new Т();case ϩ.
Ϡ:return new Р();case ϩ.ϟ:return new Ҥ();case ϩ.έ:return new я();case ϩ.ʹ:return new ʔ();case ϩ.Β:return new Ν();case ϩ.ʷ
:return new ˮ();case ϩ.ʶ:return new Ω();case ϩ.ʵ:return new Ĺ();case ϩ.ʴ:return new ʏ();case ϩ.ʳ:return new ѩ();case ϩ.ʲ:
return new ķ();case ϩ.ʱ:return new Ρ();case ϩ.ʰ:return new Ҽ();case ϩ.ʯ:return new Ҧ();case ϩ.ʮ:return new ˑ();case ϩ.ʭ:return
new Ѩ();case ϩ.ʬ:return new Έ();case ϩ.ʫ:return new ʑ();case ϩ.ʪ:return new ь();case ϩ.ʩ:return new Ғ();case ϩ.ʨ:return new
Τ();case ϩ.ʧ:return new ќ();case ϩ.ʦ:return new ґ();case ϩ.ʥ:return new Ҙ();default:return new ŵ();}}public List&lt;ˀ&gt;ˋ=new
List&lt;ˀ&gt;();string[]ˊ=null;string ˉ="";bool ˈ=false;int ĵ=1;public bool ʻ(string ˇ,bool ë){if(!ë){ˎ=ϩ.Ϩ;ʣ="";ʸ="";ʺ=ˇ.
TrimStart(' ');ˋ.Clear();if(ʺ=="")return true;int ˁ=ʺ.IndexOf(' ');if(ˁ&lt;0||ˁ&gt;=ʺ.Length-1)ˏ="";else ˏ=ʺ.Substring(ˁ+1);ˊ=ʺ.Split(
' ');ˉ="";ˈ=false;ʸ=ˊ[0].ToLower();ĵ=1;}for(;ĵ&lt;ˊ.Length;ĵ++){if(!Ɠ.Ȝ(40))return false;string ĳ=ˊ[ĵ];if(ĳ=="")continue;if(ĳ[
0]=='{'&amp;&amp;ĳ[ĳ.Length-1]=='}'){ĳ=ĳ.Substring(1,ĳ.Length-2);if(ĳ=="")continue;if(ʣ=="")ʣ=ĳ;else ˋ.Add(new ˀ(ĳ));continue;}if
(ĳ[0]=='{'){ˈ=true;ˉ=ĳ.Substring(1);continue;}if(ĳ[ĳ.Length-1]=='}'){ˈ=false;ˉ+=' '+ĳ.Substring(0,ĳ.Length-1);if(ʣ=="")ʣ=
ˉ;else ˋ.Add(new ˀ(ˉ));continue;}if(ˈ){if(ˉ.Length!=0)ˉ+=' ';ˉ+=ĳ;continue;}if(ʣ=="")ʣ=ĳ;else ˋ.Add(new ˀ(ĳ));}ˎ=ˍ();
return true;}}class ˀ{public string ʿ="";public string ʾ="";public string ĳ="";public List&lt;string&gt;ʽ=new List&lt;string&gt;();public
ˀ(string ʼ){ĳ=ʼ;}public void ʻ(){if(ĳ==""||ʿ!=""||ʾ!=""||ʽ.Count&gt;0)return;string ˆ=ĳ.Trim();if(ˆ[0]=='+'||ˆ[0]=='-'){ʿ+=ˆ
[0];ˆ=ĳ.Substring(1);}string[]Ɵ=ˆ.Split('/');string ʛ=Ɵ[0];if(Ɵ.Length&gt;1){ʾ=Ɵ[0];ʛ=Ɵ[1];}else ʾ="";if(ʛ.Length&gt;0){string[
]Ą=ʛ.Split(',');for(int F=0;F&lt;Ą.Length;F++)if(Ą[F]!="")ʽ.Add(Ą[F]);}}}class ʔ:ŵ{public ʔ(){Ɏ=0.5;ɒ="CmdAccel";}public
override bool Ɨ(bool ë){double ʓ=0;if(ƚ.ʣ!="")double.TryParse(ƚ.ʣ.Trim(),out ʓ);o.ƃ(Ď.ǡ("AC1")+" ");o.ƴ(o.ǀ.ʀ.ToString("F1")+
" m/s²");if(ʓ&gt;0){double ʒ=o.ǀ.ʀ/ʓ*100;o.Ư(ʒ);}return true;}}class ʑ:ŵ{public ʑ(){Ɏ=1;ɒ="CmdAltitude";}public override bool Ɨ(
bool ë){string ʐ=(ƚ.ʸ.EndsWith("sea")?"sea":"ground");switch(ʐ){case"sea":o.ƃ(Ď.ǡ("ALT1"));o.ƴ(o.ǀ.ɷ.ToString("F0")+" m");
break;default:o.ƃ(Ď.ǡ("ALT2"));o.ƴ(o.ǀ.ɵ.ToString("F0")+" m");break;}return true;}}class ʏ:ŵ{public ʏ(){Ɏ=15;ɒ=
"CmdBlockCount";}β Ķ;public override void Ʌ(){Ķ=new β(Ɠ,o.ő);}bool ʎ;bool ʍ;int ĵ=0;int Y=0;public override bool Ɨ(bool ë){if(!ë){ʎ=(ƚ.
ʸ=="enabledcount");ʍ=(ƚ.ʸ=="prodcount");ĵ=0;Y=0;}if(ƚ.ˋ.Count==0){if(Y==0){if(!ë)Ķ.Ŧ();if(!Ķ.μ(ƚ.ʣ,ë))return false;Y++;ë=
false;}if(!ʜ(Ķ,"blocks",ʎ,ʍ,ë))return false;return true;}for(;ĵ&lt;ƚ.ˋ.Count;ĵ++){ˀ ĳ=ƚ.ˋ[ĵ];if(!ë)ĳ.ʻ();if(!Į(ĳ,ë))return false
;ë=false;}return true;}int ı=0;int Ĳ=0;bool Į(ˀ ĳ,bool ë){if(!ë){ı=0;Ĳ=0;}for(;ı&lt;ĳ.ʽ.Count;ı++){if(Ĳ==0){if(!ë)Ķ.Ŧ();if(!
Ķ.ϼ(ĳ.ʽ[ı],ƚ.ʣ,ë))return false;Ĳ++;ë=false;}if(!ʜ(Ķ,ĳ.ʽ[ı],ʎ,ʍ,ë))return false;Ĳ=0;ë=false;}return true;}Dictionary&lt;
string,int&gt;ʢ=new Dictionary&lt;string,int&gt;();Dictionary&lt;string,int&gt;ʡ=new Dictionary&lt;string,int&gt;();List&lt;string&gt;ʠ=new List&lt;string&gt;(
);int ì=0;int ʟ=0;int ʞ=0;ʌ ʝ=new ʌ();bool ʜ(β Ā,string ʐ,bool ʎ,bool ʍ,bool ë){if(Ā.ϲ()==0){ʝ.Ŧ().ʆ(char.ToUpper(ʐ[0])).
ʆ(ʐ.ToLower(),1,ʐ.Length-1);o.ƃ(ʝ.ʆ(" ").ʆ(Ď.ǡ("C1")).ʆ(" "));string ʚ=(ʎ||ʍ?"0 / 0":"0");o.ƴ(ʚ);return true;}if(!ë){ʢ.
Clear();ʡ.Clear();ʠ.Clear();ì=0;ʟ=0;ʞ=0;}if(ʞ==0){for(;ì&lt;Ā.ϲ();ì++){if(!Ɠ.Ȝ(15))return false;IMyProductionBlock Ő=Ā.ί[ì]as
IMyProductionBlock;ʝ.Ŧ().ʆ(Ā.ί[ì].DefinitionDisplayNameText);string Ƕ=ʝ.ɕ();if(ʠ.Contains(Ƕ)){ʢ[Ƕ]++;if((ʎ&amp;&amp;Ā.ί[ì].IsWorking)||(ʍ&amp;&amp;Ő!=null
&amp;&amp;Ő.IsProducing))ʡ[Ƕ]++;}else{ʢ.Add(Ƕ,1);ʠ.Add(Ƕ);if(ʎ||ʍ)if((ʎ&amp;&amp;Ā.ί[ì].IsWorking)||(ʍ&amp;&amp;Ő!=null&amp;&amp;Ő.IsProducing))ʡ.Add(Ƕ,1)
;else ʡ.Add(Ƕ,0);}}ʞ++;ë=false;}for(;ʟ&lt;ʢ.Count;ʟ++){if(!Ɠ.Ȝ(8))return false;o.ƃ(ʠ[ʟ]+" "+Ď.ǡ("C1")+" ");string ʚ=(ʎ||ʍ?ʡ[
ʠ[ʟ]]+" / ":"")+ʢ[ʠ[ʟ]];o.ƴ(ʚ);}return true;}}class ʙ:ŵ{β Ķ;public ʙ(){Ɏ=2;ɒ="CmdCargo";}public override void Ʌ(){Ķ=new β
(Ɠ,o.ő);}bool ʘ=true;bool ʗ=false;bool ʕ=false;bool ʖ=false;double ː=0;double Ο=0;int Y=0;public override bool Ɨ(bool ë){
if(!ë){Ķ.Ŧ();ʘ=ƚ.ʸ.Contains("all");ʖ=ƚ.ʸ.EndsWith("bar");ʗ=(ƚ.ʸ[ƚ.ʸ.Length-1]=='x');ʕ=(ƚ.ʸ[ƚ.ʸ.Length-1]=='p');ː=0;Ο=0;Y=0
;}if(Y==0){if(ʘ){if(!Ķ.μ(ƚ.ʣ,ë))return false;}else{if(!Ķ.ϼ("cargocontainer",ƚ.ʣ,ë))return false;}Y++;ë=false;}double Ξ=Ķ.
ω(ref ː,ref Ο,ë);if(Double.IsNaN(Ξ))return false;if(ʖ){o.Ư(Ξ);return true;}o.ƃ(Ď.ǡ("C2")+" ");if(!ʗ&amp;&amp;!ʕ){o.ƴ(o.ȅ(ː)+
"L / "+o.ȅ(Ο)+"L");o.Ƶ(Ξ,1.0f,o.ə);o.Ǎ(' '+o.Ǽ(Ξ)+"%");}else if(ʕ){o.ƴ(o.Ǽ(Ξ)+"%");o.Ư(Ξ);}else o.ƴ(o.Ǽ(Ξ)+"%");return true;}}
class Ν:ŵ{public Ν(){Ɏ=3;ɒ="CmdCharge";}β Ķ;public override void Ʌ(){Ķ=new β(Ɠ,o.ő);}int Y=0;int ì=0;bool ʗ=false;bool Μ=
false;bool ʖ=false;Dictionary&lt;long,double&gt;f=new Dictionary&lt;long,double&gt;();Dictionary&lt;long,double&gt;Κ=new Dictionary&lt;long,double
&gt;();Dictionary&lt;long,double&gt;Ι=new Dictionary&lt;long,double&gt;();Dictionary&lt;long,double&gt;Θ=new Dictionary&lt;long,double&gt;();
Dictionary&lt;long,double&gt;Η=new Dictionary&lt;long,double&gt;();double Ζ(long Ε,double ˆ,double Ŷ){double Δ=0;double Γ=0;double Λ=0;double
Π=0;if(Κ.TryGetValue(Ε,out Λ)){Π=Θ[Ε];}if(f.TryGetValue(Ε,out Δ)){Γ=Ι[Ε];}double Χ=(Ɠ.ȏ-Λ);double ά=0;if(Χ&gt;0)ά=(ˆ-Π)/Χ;if
(ά&lt;0){if(!Η.TryGetValue(Ε,out ά))ά=0;}else Η[Ε]=ά;if(Δ&gt;0){Κ[Ε]=f[Ε];Θ[Ε]=Ι[Ε];}f[Ε]=Ɠ.ȏ;Ι[Ε]=ˆ;return(ά&gt;0?(Ŷ-ˆ)/ά:0);}
public override bool Ɨ(bool ë){if(!ë){Ķ.Ŧ();ʖ=ƚ.ʸ.EndsWith("bar");ʗ=ƚ.ʸ.Contains("x");Μ=ƚ.ʸ.Contains("time");ì=0;Y=0;}if(Y==0)
{if(!Ķ.ϼ("jumpdrive",ƚ.ʣ,ë))return false;if(Ķ.ϲ()&lt;=0){o.Ǎ("Charge: "+Ď.ǡ("D2"));return true;}Y++;ë=false;}for(;ì&lt;Ķ.ϲ();ì
++){if(!Ɠ.Ȝ(25))return false;IMyJumpDrive Ō=Ķ.ί[ì]as IMyJumpDrive;double ˆ,Ŷ,ʒ;ʒ=o.ő.Ϛ(Ō,out ˆ,out Ŷ);if(ʖ){o.Ư(ʒ);}else{o
.ƃ(Ō.CustomName+" ");if(Μ){TimeSpan Ϊ=TimeSpan.FromSeconds(Ζ(Ō.EntityId,ˆ,Ŷ));o.ƴ(o.ǁ.ȕ(Ϊ));if(!ʗ){o.Ƶ(ʒ,1.0f,o.ə);o.ƴ(
' '+ʒ.ToString("0.0")+"%");}}else{if(!ʗ){o.ƴ(o.ȅ(ˆ)+"Wh / "+o.ȅ(Ŷ)+"Wh");o.Ƶ(ʒ,1.0f,o.ə);}o.ƴ(' '+ʒ.ToString("0.0")+"%");}}
}return true;}}class Ω:ŵ{public Ω(){Ɏ=1;ɒ="CmdCountdown";}public override bool Ɨ(bool ë){bool ˣ=ƚ.ʸ.EndsWith("c");bool Ϋ=
ƚ.ʸ.EndsWith("r");string Ψ="";int ͷ=ƚ.ʺ.IndexOf(' ');if(ͷ&gt;=0)Ψ=ƚ.ʺ.Substring(ͷ+1).Trim();DateTime Φ=DateTime.Now;DateTime
Υ;if(!DateTime.TryParseExact(Ψ,"H:mm d.M.yyyy",System.Globalization.CultureInfo.InvariantCulture,System.Globalization.
DateTimeStyles.None,out Υ)){o.Ǎ(Ď.ǡ("C3"));o.Ǎ("  Countdown 19:02 28.2.2015");return true;}TimeSpan ˠ=Υ-Φ;string ĸ="";if(ˠ.Ticks&lt;=0)ĸ=
Ď.ǡ("C4");else{if((int)ˠ.TotalDays&gt;0)ĸ+=(int)ˠ.TotalDays+" "+Ď.ǡ("C5")+" ";if(ˠ.Hours&gt;0||ĸ!="")ĸ+=ˠ.Hours+"h ";if(ˠ.
Minutes&gt;0||ĸ!="")ĸ+=ˠ.Minutes+"m ";ĸ+=ˠ.Seconds+"s";}if(ˣ)o.Ƣ(ĸ);else if(Ϋ)o.ƴ(ĸ);else o.Ǎ(ĸ);return true;}}class Τ:ŵ{public Τ(
){Ɏ=1;ɒ="CmdCustomData";}public override bool Ɨ(bool ë){string ĸ="";if(ƚ.ʣ!=""&amp;&amp;ƚ.ʣ!="*"){IMyTerminalBlock Σ=o.ƿ.
GetBlockWithName(ƚ.ʣ)as IMyTerminalBlock;if(Σ==null){o.Ǎ("CustomData: "+Ď.ǡ("CD1")+ƚ.ʣ);return true;}ĸ=Σ.CustomData;}else{o.Ǎ(
"CustomData:"+Ď.ǡ("CD2"));return true;}if(ĸ.Length==0)return true;o.ǌ(ĸ);return true;}}class Ρ:ŵ{public Ρ(){Ɏ=5;ɒ="CmdDamage";}β Ķ;
public override void Ʌ(){Ķ=new β(Ɠ,o.ő);}bool Ɯ=false;int ì=0;public override bool Ɨ(bool ë){bool ʗ=ƚ.ʸ.StartsWith("damagex");
bool Ͷ=ƚ.ʸ.EndsWith("noc");bool ʹ=(!Ͷ&amp;&amp;ƚ.ʸ.EndsWith("c"));float ͳ=100;if(!ë){Ķ.Ŧ();Ɯ=false;ì=0;}if(!Ķ.μ(ƚ.ʣ,ë))return false;
if(ƚ.ˋ.Count&gt;0){if(!float.TryParse(ƚ.ˋ[0].ĳ,out ͳ))ͳ=100;}ͳ-=0.00001f;for(;ì&lt;Ķ.ϲ();ì++){if(!Ɠ.Ȝ(30))return false;
IMyTerminalBlock å=Ķ.ί[ì];IMySlimBlock Ͳ=å.CubeGrid.GetCubeBlock(å.Position);if(Ͳ==null)continue;float ͱ=(Ͷ?Ͳ.MaxIntegrity:Ͳ.
BuildIntegrity);if(!ʹ)ͱ-=Ͳ.CurrentDamage;float ʒ=100*(ͱ/Ͳ.MaxIntegrity);if(ʒ&gt;=ͳ)continue;Ɯ=true;string Ͱ=o.ǜ(Ͳ.FatBlock.
DisplayNameText,o.ɠ*0.69f-o.ə);o.ƃ(Ͱ+' ');if(!ʗ){o.Ʃ(o.ȅ(ͱ)+" / ",0.69f);o.ƃ(o.ȅ(Ͳ.MaxIntegrity));}o.ƴ(' '+ʒ.ToString("0.0")+'%');o.Ư(ʒ
);}if(!Ɯ)o.Ǎ(Ď.ǡ("D3"));return true;}}class ˮ:ŵ{public ˮ(){Ɏ=1;ɒ="CmdDateTime";}public override bool Ɨ(bool ë){bool ˬ=(ƚ.
ʸ.StartsWith("datetime"));bool ˤ=(ƚ.ʸ.StartsWith("date"));bool ˣ=ƚ.ʸ.Contains("c");int ˢ=ƚ.ʸ.IndexOf('+');if(ˢ&lt;0)ˢ=ƚ.ʸ.
IndexOf('-');float ˡ=0;if(ˢ&gt;=0)float.TryParse(ƚ.ʸ.Substring(ˢ),out ˡ);DateTime ˠ=DateTime.Now.AddHours(ˡ);string ĸ="";int ͷ=ƚ.ʺ
.IndexOf(' ');if(ͷ&gt;=0)ĸ=ƚ.ʺ.Substring(ͷ+1);if(!ˬ){if(!ˤ)ĸ+=ˠ.ToShortTimeString();else ĸ+=ˠ.ToShortDateString();}else{if(ĸ
=="")ĸ=String.Format("{0:d} {0:t}",ˠ);else{ĸ=ĸ.Replace("/","\\/");ĸ=ĸ.Replace(":","\\:");ĸ=ĸ.Replace("\"","\\\"");ĸ=ĸ.
Replace("'","\\'");ĸ=ˠ.ToString(ĸ+' ');ĸ=ĸ.Substring(0,ĸ.Length-1);}}if(ˣ)o.Ƣ(ĸ);else o.Ǎ(ĸ);return true;}}class ˑ:ŵ{public ˑ()
{Ɏ=5;ɒ="CmdDetails";}string Α="";β Ķ;public override void Ʌ(){Ķ=new β(Ɠ,o.ő);if(ƚ.ˋ.Count&gt;0)Α=ƚ.ˋ[0].ĳ.Trim();}int Y=0;
int ì=1;bool ΐ=false;IMyTerminalBlock å;public override bool Ɨ(bool ë){if(ƚ.ʣ==""||ƚ.ʣ=="*"){o.Ǎ("Details: "+Ď.ǡ("D1"));
return true;}if(!ë){Ķ.Ŧ();ΐ=ƚ.ʸ.Contains("non");Y=0;ì=1;}if(Y==0){if(!Ķ.μ(ƚ.ʣ,ë))return true;if(Ķ.ϲ()&lt;=0){o.Ǎ("Details: "+Ď.ǡ(
"D2"));return true;}Y++;ë=false;}int Ώ=(ƚ.ʸ.EndsWith("x")?1:0);if(Y==1){if(!ë){å=Ķ.ί[0];if(!ΐ)o.Ǎ(å.CustomName);}if(!Ί(å,Ώ,ë
))return false;Y++;ë=false;}for(;ì&lt;Ķ.ϲ();ì++){if(!ë){å=Ķ.ί[ì];if(!ΐ){o.Ǎ("");o.Ǎ(å.CustomName);}}if(!Ί(å,Ώ,ë))return
false;ë=false;}return true;}string[]ǉ;int Ύ=0;bool Ό=false;ʌ ƫ=new ʌ();bool Ί(IMyTerminalBlock å,int Ή,bool ë){if(!ë){ǉ=ƫ.Ŧ()
.ʆ(å.DetailedInfo).ʆ('\n').ʆ(å.CustomInfo).ɕ().Split('\n');Ύ=Ή;Ό=(Α.Length==0);}for(;Ύ&lt;ǉ.Length;Ύ++){if(!Ɠ.Ȝ(5))return
false;if(ǉ[Ύ].Length==0)continue;if(!Ό){if(!ǉ[Ύ].Contains(Α))continue;Ό=true;}o.Ǎ(ƫ.Ŧ().ʆ("  ").ʆ(ǉ[Ύ]));}return true;}}class
Έ:ŵ{public Έ(){Ɏ=1;ɒ="CmdDistance";}string Ά="";string[]ͽ;Vector3D ͼ;string ͻ="";bool ͺ=false;public override void Ʌ(){ͺ=
false;if(ƚ.ˋ.Count&lt;=0)return;Ά=ƚ.ˋ[0].ĳ.Trim();ͽ=Ά.Split(':');if(ͽ.Length&lt;5||ͽ[0]!="GPS")return;double θ,Ћ,Ѽ;if(!double.
TryParse(ͽ[2],out θ))return;if(!double.TryParse(ͽ[3],out Ћ))return;if(!double.TryParse(ͽ[4],out Ѽ))return;ͼ=new Vector3D(θ,Ћ,Ѽ);
ͻ=ͽ[1];ͺ=true;}public override bool Ɨ(bool ë){if(!ͺ){o.Ǎ("Distance: "+Ď.ǡ("DTU")+" '"+Ά+"'.");return true;}
IMyTerminalBlock å=k.E.å;if(ƚ.ʣ!=""&amp;&amp;ƚ.ʣ!="*"){å=o.ƿ.GetBlockWithName(ƚ.ʣ);if(å==null){o.Ǎ("Distance: "+Ď.ǡ("P1")+": "+ƚ.ʣ);return true;
}}double ъ=Vector3D.Distance(å.GetPosition(),ͼ);o.ƃ(ͻ+": ");o.ƴ(o.ȅ(ъ)+"m ");return true;}}class Ҙ:ŵ{β Ķ;public Ҙ(){Ɏ=2;ɒ
="CmdDocked";}public override void Ʌ(){Ķ=new β(Ɠ,o.ő);}int Y=0;int җ=0;bool Җ=false;bool ҕ=false;IMyShipConnector œ;
public override bool Ɨ(bool ë){if(!ë){if(ƚ.ʸ.EndsWith("e"))Җ=true;if(ƚ.ʸ.Contains("cn"))ҕ=true;Ķ.Ŧ();Y=0;}if(Y==0){if(!Ķ.ϼ(
"connector",ƚ.ʣ,ë))return false;Y++;җ=0;ë=false;}if(Ķ.ϲ()&lt;=0){o.Ǎ("Docked: "+Ď.ǡ("DO1"));return true;}for(;җ&lt;Ķ.ϲ();җ++){œ=Ķ.ί[җ]as
IMyShipConnector;if(œ.Status==MyShipConnectorStatus.Connected){if(ҕ){o.ƃ(œ.CustomName+":");o.ƴ(œ.OtherConnector.CubeGrid.CustomName);}
else{o.Ǎ(œ.OtherConnector.CubeGrid.CustomName);}}else{if(Җ){if(ҕ){o.ƃ(œ.CustomName+":");o.ƴ("-");}else o.Ǎ("-");}}}return
true;}}class Ҕ:ŵ{public Ҕ(){Ɏ=30;ɒ="CmdEcho";}public override bool Ɨ(bool ë){string ʐ=(ƚ.ʸ=="center"?"c":(ƚ.ʸ=="right"?"r":
"n"));switch(ʐ){case"c":o.Ƣ(ƚ.ˏ);break;case"r":o.ƴ(ƚ.ˏ);break;default:o.Ǎ(ƚ.ˏ);break;}return true;}}class Ғ:ŵ{public Ғ(){Ɏ=
1;ɒ="CmdGravity";}public override bool Ɨ(bool ë){string ʐ=(ƚ.ʸ.Contains("nat")?"n":(ƚ.ʸ.Contains("art")?"a":(ƚ.ʸ.Contains
("tot")?"t":"s")));Vector3D ϕ;if(o.ǀ.ɲ==null){o.Ǎ("Gravity: "+Ď.ǡ("GNC"));return true;}switch(ʐ){case"n":o.ƃ(Ď.ǡ("G2")+
" ");ϕ=o.ǀ.ɲ.GetNaturalGravity();o.ƴ(ϕ.Length().ToString("F1")+" m/s²");break;case"a":o.ƃ(Ď.ǡ("G3")+" ");ϕ=o.ǀ.ɲ.
GetArtificialGravity();o.ƴ(ϕ.Length().ToString("F1")+" m/s²");break;case"t":o.ƃ(Ď.ǡ("G1")+" ");ϕ=o.ǀ.ɲ.GetTotalGravity();o.ƴ(ϕ.Length().
ToString("F1")+" m/s²");break;default:o.ƃ(Ď.ǡ("GN"));o.Ʃ(" | ",0.33f);o.Ʃ(Ď.ǡ("GA")+" | ",0.66f);o.ƴ(Ď.ǡ("GT"),1.0f);o.ƃ("");ϕ=o
.ǀ.ɲ.GetNaturalGravity();o.Ʃ(ϕ.Length().ToString("F1")+" | ",0.33f);ϕ=o.ǀ.ɲ.GetArtificialGravity();o.Ʃ(ϕ.Length().
ToString("F1")+" | ",0.66f);ϕ=o.ǀ.ɲ.GetTotalGravity();o.ƴ(ϕ.Length().ToString("F1")+" ");break;}return true;}}class ґ:ŵ{public ґ
(){Ɏ=0.5;ɒ="CmdHScroll";}ʌ ғ=new ʌ();int ҙ=1;public override bool Ɨ(bool ë){if(ғ.ʊ==0){string ĸ=ƚ.ˏ+"  ";if(ĸ.Length==0)
return true;float ҡ=o.ɠ;float Ʀ=o.Ǟ(ĸ,o.ƹ);float ю=ҡ/Ʀ;if(ю&gt;1)ғ.ʆ(string.Join("",Enumerable.Repeat(ĸ,(int)Math.Ceiling(ю))));
else ғ.ʆ(ĸ);if(ĸ.Length&gt;40)ҙ=3;else if(ĸ.Length&gt;5)ҙ=2;else ҙ=1;o.Ǎ(ғ);return true;}bool Ϋ=ƚ.ʸ.EndsWith("r");if(Ϋ){ғ.ƫ.Insert
(0,ғ.ɕ(ғ.ʊ-ҙ,ҙ));ғ.ʅ(ғ.ʊ-ҙ,ҙ);}else{ғ.ʆ(ғ.ɕ(0,ҙ));ғ.ʅ(0,ҙ);}o.Ǎ(ғ);return true;}}class Ҡ:ŵ{public Ҡ(){Ɏ=7;ɒ="CmdInvList";
}float ҟ=-1;float Ҟ=-1;public override void Ʌ(){Ķ=new β(Ɠ,o.ő);ѱ=new Ɩ(Ɠ,o);}ʌ ƫ=new ʌ(100);Dictionary&lt;string,string&gt;ҝ=
new Dictionary&lt;string,string&gt;();void Ң(string ȥ,double ѳ,int ć){if(ć&gt;0){if(!Ҍ)o.Ƶ(Math.Min(100,100*ѳ/ć),0.3f);string Ͱ;if(ҝ
.ContainsKey(ȥ)){Ͱ=ҝ[ȥ];}else{if(!ҍ)Ͱ=o.ǜ(ȥ,o.ɠ*0.5f-қ-Ҟ);else{if(!Ҍ)Ͱ=o.ǜ(ȥ,o.ɠ*0.5f);else Ͱ=o.ǜ(ȥ,o.ɠ*0.9f);}ҝ[ȥ]=Ͱ;}ƫ.
Ŧ();if(!Ҍ)ƫ.ʆ(' ');if(!ҍ){o.ƃ(ƫ.ʆ(Ͱ).ʆ(' '));o.Ʃ(o.ȅ(ѳ),1.0f,қ+Ҟ);o.Ǎ(ƫ.Ŧ().ʆ(" / ").ʆ(o.ȅ(ć)));}else{o.Ǎ(ƫ.ʆ(Ͱ));}}else{
if(!ҍ){o.ƃ(ƫ.Ŧ().ʆ(ȥ).ʆ(':'));o.ƴ(o.ȅ(ѳ),1.0f,ҟ);}else o.Ǎ(ƫ.Ŧ().ʆ(ȥ));}}void Ҝ(string ȥ,double ѳ,double Ѳ,int ć){if(ć&gt;0){
if(!ҍ){o.ƃ(ƫ.Ŧ().ʆ(ȥ).ʆ(' '));o.Ʃ(o.ȅ(ѳ),0.51f);o.ƃ(ƫ.Ŧ().ʆ(" / ").ʆ(o.ȅ(ć)));o.ƴ(ƫ.Ŧ().ʆ(" +").ʆ(o.ȅ(Ѳ)).ʆ(" ").ʆ(Ď.ǡ(
"I1")),1.0f);}else o.Ǎ(ƫ.Ŧ().ʆ(ȥ));if(!Ҍ)o.Ư(Math.Min(100,100*ѳ/ć));}else{if(!ҍ){o.ƃ(ƫ.Ŧ().ʆ(ȥ).ʆ(':'));o.Ʃ(o.ȅ(ѳ),0.51f);o.
ƴ(ƫ.Ŧ().ʆ(" +").ʆ(o.ȅ(Ѳ)).ʆ(" ").ʆ(Ď.ǡ("I1")),1.0f);}else{o.Ǎ(ƫ.Ŧ().ʆ(ȥ));}}}float қ=0;bool Қ(Ÿ ż){int ć=(ҏ?ż.ŷ:ż.Ŷ);if(ć
&lt;0)return true;float Ʋ=o.Ǟ(o.ȅ(ć),o.ƹ);if(Ʋ&gt;қ)қ=Ʋ;return true;}List&lt;Ÿ&gt;Ѿ;int ѻ=0;int Ѻ=0;bool ѹ(bool ë,bool Ѹ,string Ï,
string П){if(!ë){Ѻ=0;ѻ=0;}if(Ѻ==0){if(ҁ){if((Ѿ=ѱ.ž(Ï,ë,Қ))==null)return false;}else{if((Ѿ=ѱ.ž(Ï,ë))==null)return false;}Ѻ++;ë=
false;}if(Ѿ.Count&gt;0){if(!Ѹ&amp;&amp;!ë){if(!o.Ƹ)o.Ǎ();o.Ƣ(ƫ.Ŧ().ʆ("&lt;&lt; ").ʆ(П).ʆ(" ").ʆ(Ď.ǡ("I2")).ʆ(" &gt;&gt;"));}for(;ѻ&lt;Ѿ.Count;ѻ++){if(!
Ɠ.Ȝ(30))return false;double ѳ=Ѿ[ѻ].ƌ;if(ҏ&amp;&amp;ѳ&gt;=Ѿ[ѻ].ŷ)continue;int ć=Ѿ[ѻ].Ŷ;if(ҏ)ć=Ѿ[ѻ].ŷ;string ȥ=o.ǲ(Ѿ[ѻ].Ð,Ѿ[ѻ].Ï);Ң(ȥ,
ѳ,ć);}}return true;}List&lt;Ÿ&gt;ѷ;int Ѷ=0;int ѵ=0;bool Ѵ(bool ë){if(!ë){Ѷ=0;ѵ=0;}if(ѵ==0){if((ѷ=ѱ.ž("Ingot",ë))==null)return
false;ѵ++;ë=false;}if(ѷ.Count&gt;0){if(!Ҏ&amp;&amp;!ë){if(!o.Ƹ)o.Ǎ();o.Ƣ(ƫ.Ŧ().ʆ("&lt;&lt; ").ʆ(Ď.ǡ("I4")).ʆ(" ").ʆ(Ď.ǡ("I2")).ʆ(" &gt;&gt;"));}for(
;Ѷ&lt;ѷ.Count;Ѷ++){if(!Ɠ.Ȝ(40))return false;double ѳ=ѷ[Ѷ].ƌ;if(ҏ&amp;&amp;ѳ&gt;=ѷ[Ѷ].ŷ)continue;int ć=ѷ[Ѷ].Ŷ;if(ҏ)ć=ѷ[Ѷ].ŷ;string ȥ=o.ǲ
(ѷ[Ѷ].Ð,ѷ[Ѷ].Ï);if(ѷ[Ѷ].Ð!="Scrap"){double Ѳ=ѱ.Ɓ(ѷ[Ѷ].Ð+" Ore",ѷ[Ѷ].Ð,"Ore").ƌ;Ҝ(ȥ,ѳ,Ѳ,ć);}else Ң(ȥ,ѳ,ć);}}return true;}β
Ķ=null;Ɩ ѱ;List&lt;ˀ&gt;ˋ;bool Ѱ,ʗ,ҏ,Ҏ,ҍ,Ҍ;int ĵ,ı;string ҋ="";float Ҋ=0;bool ҁ=true;void Ҁ(){if(o.ƹ!=ҋ||Ҋ!=o.ɠ){ҝ.Clear();Ҋ=o.
ɠ;}if(o.ƹ!=ҋ){Ҟ=o.Ǟ(" / ",o.ƹ);ҟ=o.Ǹ(' ',o.ƹ);ҋ=o.ƹ;}Ķ.Ŧ();Ѱ=ƚ.ʸ.EndsWith("x")||ƚ.ʸ.EndsWith("xs");ʗ=ƚ.ʸ.EndsWith("s")||ƚ
.ʸ.EndsWith("sx");ҏ=ƚ.ʸ.StartsWith("missing");Ҏ=ƚ.ʸ.Contains("list");Ҍ=ƚ.ʸ.Contains("nb");ҍ=ƚ.ʸ.Contains("nn");ѱ.Ŧ();ˋ=ƚ.
ˋ;if(ˋ.Count==0)ˋ.Add(new ˀ("all"));}bool ѿ(bool ë){if(!ë)ĵ=0;for(;ĵ&lt;ˋ.Count;ĵ++){ˀ ĳ=ˋ[ĵ];ĳ.ʻ();string Ï=ĳ.ʾ;if(!ë)ı=0;
else ë=false;for(;ı&lt;ĳ.ʽ.Count;ı++){if(!Ɠ.Ȝ(30))return false;string[]Ą=ĳ.ʽ[ı].Split(':');double Ȃ;if(string.Compare(Ą[0],
"all",true)==0)Ą[0]="";int ŷ=1;int Ŷ=-1;if(Ą.Length&gt;1){if(Double.TryParse(Ą[1],out Ȃ)){if(ҏ)ŷ=(int)Math.Ceiling(Ȃ);else Ŷ=(
int)Math.Ceiling(Ȃ);}}string Ơ=Ą[0];if(!string.IsNullOrEmpty(Ï))Ơ+=' '+Ï;ѱ.ơ(Ơ,ĳ.ʿ=="-",ŷ,Ŷ);}}return true;}int Л=0;int ς=0
;int ѽ=0;List&lt;MyInventoryItem&gt;Ɔ=new List&lt;MyInventoryItem&gt;();bool Ґ(bool ë){β ϳ=Ķ;if(!ë)Л=0;for(;Л&lt;ϳ.ί.Count;Л++){if(!ë)ς=
0;for(;ς&lt;ϳ.ί[Л].InventoryCount;ς++){IMyInventory ρ=ϳ.ί[Л].GetInventory(ς);if(!ë){ѽ=0;Ɔ.Clear();ρ.GetItems(Ɔ);}else ë=
false;for(;ѽ&lt;Ɔ.Count;ѽ++){if(!Ɠ.Ȝ(40))return false;MyInventoryItem À=Ɔ[ѽ];string Ò=o.ǵ(À);string Ð,Ï;o.ǳ(Ò,out Ð,out Ï);if(
string.Compare(Ï,"ore",true)==0){if(ѱ.Ɲ(Ð+" ingot",Ð,"Ingot")&amp;&amp;ѱ.Ɲ(Ò,Ð,Ï))continue;}else{if(ѱ.Ɲ(Ò,Ð,Ï))continue;}o.ǳ(Ò,out Ð,
out Ï);Ÿ Ź=ѱ.Ɓ(Ò,Ð,Ï);Ź.ƌ+=(double)À.Amount;}}}return true;}int Y=0;public override bool Ɨ(bool ë){if(!ë){Ҁ();Y=0;}for(;Y&lt;=
10;Y++){switch(Y){case 0:if(!Ķ.μ(ƚ.ʣ,ë))return false;break;case 1:if(!ѿ(ë))return false;if(Ѱ)Y++;break;case 2:if(!ѱ.ź(ë))
return false;break;case 3:if(!Ґ(ë))return false;break;case 4:if(!ѹ(ë,Ҏ,"Ore",Ď.ǡ("I3")))return false;break;case 5:if(ʗ){if(!ѹ(
ë,Ҏ,"Ingot",Ď.ǡ("I4")))return false;}else{if(!Ѵ(ë))return false;}break;case 6:if(!ѹ(ë,Ҏ,"Component",Ď.ǡ("I5")))return
false;break;case 7:if(!ѹ(ë,Ҏ,"OxygenContainerObject",Ď.ǡ("I6")))return false;break;case 8:if(!ѹ(ë,true,"GasContainerObject",
""))return false;break;case 9:if(!ѹ(ë,Ҏ,"AmmoMagazine",Ď.ǡ("I7")))return false;break;case 10:if(!ѹ(ë,Ҏ,"PhysicalGunObject"
,Ď.ǡ("I8")))return false;break;}ë=false;}ҁ=false;return true;}}class Ҽ:ŵ{public Ҽ(){Ɏ=2;ɒ="CmdAmount";}β Ķ;public
override void Ʌ(){Ķ=new β(Ɠ,o.ő);}bool ҽ;bool һ=false;int Ĳ=0;int ĵ=0;int ı=0;public override bool Ɨ(bool ë){if(!ë){ҽ=!ƚ.ʸ.
EndsWith("x");һ=ƚ.ʸ.EndsWith("bar");if(һ)ҽ=true;if(ƚ.ˋ.Count==0)ƚ.ˋ.Add(new ˀ(
"reactor,gatlingturret,missileturret,interiorturret,gatlinggun,launcherreload,launcher,oxygenerator"));ĵ=0;}for(;ĵ&lt;ƚ.ˋ.Count;ĵ++){ˀ ĳ=ƚ.ˋ[ĵ];if(!ë){ĳ.ʻ();Ĳ=0;ı=0;}for(;ı&lt;ĳ.ʽ.Count;ı++){if(Ĳ==0){if(!ë){if(ĳ.ʽ[ı]=="")
continue;Ķ.Ŧ();}string į=ĳ.ʽ[ı];if(!Ķ.ϼ(į,ƚ.ʣ,ë))return false;Ĳ++;ë=false;}if(!ӂ(ë))return false;ë=false;Ĳ=0;}}return true;}int
ҹ=0;int ĭ=0;double Ź=0;double Ҹ=0;double Һ=0;int ѽ=0;IMyTerminalBlock Ҿ;IMyInventory ӄ;List&lt;MyInventoryItem&gt;Ɔ=new List&lt;
MyInventoryItem&gt;();string Ӄ="";bool ӂ(bool ë){if(!ë){ҹ=0;ĭ=0;}for(;ҹ&lt;Ķ.ϲ();ҹ++){if(ĭ==0){if(!Ɠ.Ȝ(50))return false;Ҿ=Ķ.ί[ҹ];ӄ=Ҿ.
GetInventory(0);if(ӄ==null)continue;ĭ++;ë=false;}if(!ë){Ɔ.Clear();ӄ.GetItems(Ɔ);Ӄ=(Ɔ.Count&gt;0?Ɔ[0].Type.ToString():"");ѽ=0;Ź=0;Ҹ=0;Һ=
0;}for(;ѽ&lt;Ɔ.Count;ѽ++){if(!Ɠ.Ȝ(30))return false;MyInventoryItem À=Ɔ[ѽ];if(À.Type.ToString()!=Ӄ)Һ+=(double)À.Amount;else Ź
+=(double)À.Amount;}string Ӂ=Ď.ǡ("A1");string ŀ=Ҿ.CustomName;if(Ź&gt;0&amp;&amp;(double)ӄ.CurrentVolume&gt;0){double Ӏ=Һ*(double)ӄ.
CurrentVolume/(Ź+Һ);Ҹ=Math.Floor(Ź*((double)ӄ.MaxVolume-Ӏ)/((double)ӄ.CurrentVolume-Ӏ));Ӂ=o.ȅ(Ź)+" / "+(Һ&gt;0?"~":"")+o.ȅ(Ҹ);}if(!һ||Ҹ
&lt;=0){ŀ=o.ǜ(ŀ,o.ɠ*0.8f);o.ƃ(ŀ);o.ƴ(Ӂ);}if(ҽ&amp;&amp;Ҹ&gt;0){double ʒ=100*Ź/Ҹ;o.Ư(ʒ);}ĭ=0;ë=false;}return true;}}class ҿ:ŵ{β Ķ;public
ҿ(){Ɏ=2;ɒ="CmdMass";}public override void Ʌ(){Ķ=new β(Ɠ,o.ő);}bool ʗ=false;bool ʕ=false;int Y=0;public override bool Ɨ(
bool ë){if(!ë){Ķ.Ŧ();ʗ=(ƚ.ʸ[ƚ.ʸ.Length-1]=='x');ʕ=(ƚ.ʸ[ƚ.ʸ.Length-1]=='p');Y=0;}if(Y==0){if(!Ķ.μ(ƚ.ʣ,ë))return false;Y++;ë=
false;}double È=Ķ.σ(ë);if(Double.IsNaN(È))return false;double ʓ=0;int Ѧ=ƚ.ˋ.Count;if(Ѧ&gt;0){double.TryParse(ƚ.ˋ[0].ĳ.Trim(),out
ʓ);if(Ѧ&gt;1){string ѥ=ƚ.ˋ[1].ĳ.Trim();char э=' ';if(ѥ.Length&gt;0)э=Char.ToLower(ѥ[0]);int Ѥ="kmgtpezy".IndexOf(э);if(Ѥ&gt;=0)ʓ*=
Math.Pow(1000.0,Ѥ);}ʓ*=1000.0;}o.ƃ(Ď.ǡ("M1")+" ");if(ʓ&lt;=0){o.ƴ(o.ȃ(È,false));return true;}double ʒ=È/ʓ*100;if(!ʗ&amp;&amp;!ʕ){o.ƴ(o.
ȃ(È)+" / "+o.ȃ(ʓ));o.Ƶ(ʒ,1.0f,o.ə);o.Ǎ(' '+o.Ǽ(ʒ)+"%");}else if(ʕ){o.ƴ(o.Ǽ(ʒ)+"%");o.Ư(ʒ);}else o.ƴ(o.Ǽ(ʒ)+"%");return
true;}}class ҷ:ŵ{ȳ ǁ;β Ķ;public ҷ(){Ɏ=3;ɒ="CmdOxygen";}public override void Ʌ(){ǁ=o.ǁ;Ķ=new β(Ɠ,o.ő);}int Y=0;int ì=0;bool Ɯ
=false;int ҩ=0;double ȵ=0;double ȶ=0;double Ʈ;public override bool Ɨ(bool ë){if(!ë){Ķ.Ŧ();Y=0;ì=0;Ʈ=0;}if(Y==0){if(!Ķ.ϼ(
"airvent",ƚ.ʣ,ë))return false;Ɯ=(Ķ.ϲ()&gt;0);Y++;ë=false;}if(Y==1){for(;ì&lt;Ķ.ϲ();ì++){if(!Ɠ.Ȝ(8))return false;IMyAirVent ŏ=Ķ.ί[ì]as
IMyAirVent;Ʈ=Math.Max(ŏ.GetOxygenLevel()*100,0f);o.ƃ(ŏ.CustomName);if(ŏ.CanPressurize)o.ƴ(o.Ǽ(Ʈ)+"%");else o.ƴ(Ď.ǡ("O1"));o.Ư(Ʈ);}
Y++;ë=false;}if(Y==2){if(!ë)Ķ.Ŧ();if(!Ķ.ϼ("oxyfarm",ƚ.ʣ,ë))return false;ҩ=Ķ.ϲ();Y++;ë=false;}if(Y==3){if(ҩ&gt;0){if(!ë)ì=0;
double Ҩ=0;for(;ì&lt;ҩ;ì++){if(!Ɠ.Ȝ(4))return false;IMyOxygenFarm ҧ=Ķ.ί[ì]as IMyOxygenFarm;Ҩ+=ҧ.GetOutput()*100;}Ʈ=Ҩ/ҩ;if(Ɯ)o.Ǎ(
"");Ɯ|=(ҩ&gt;0);o.ƃ(Ď.ǡ("O2"));o.ƴ(o.Ǽ(Ʈ)+"%");o.Ư(Ʈ);}Y++;ë=false;}if(Y==4){if(!ë)Ķ.Ŧ();if(!Ķ.ϼ("oxytank",ƚ.ʣ,ë))return
false;ҩ=Ķ.ϲ();if(ҩ==0){if(!Ɯ)o.Ǎ(Ď.ǡ("O3"));return true;}Y++;ë=false;}if(Y==5){if(!ë){ȵ=0;ȶ=0;ì=0;}if(!ǁ.ȸ(Ķ.ί,"oxygen",ref ȶ
,ref ȵ,ë))return false;if(ȵ==0){if(!Ɯ)o.Ǎ(Ď.ǡ("O3"));return true;}Ʈ=ȶ/ȵ*100;if(Ɯ)o.Ǎ("");o.ƃ(Ď.ǡ("O4"));o.ƴ(o.Ǽ(Ʈ)+"%");o
.Ư(Ʈ);Y++;}return true;}}class Ҧ:ŵ{public Ҧ(){Ɏ=1;ɒ="CmdPosition";}public override bool Ɨ(bool ë){bool ҥ=(ƚ.ʸ=="posxyz");
bool Ά=(ƚ.ʸ=="posgps");IMyTerminalBlock å=k.E.å;if(ƚ.ʣ!=""&amp;&amp;ƚ.ʣ!="*"){å=o.ƿ.GetBlockWithName(ƚ.ʣ);if(å==null){o.Ǎ("Pos: "+Ď.
ǡ("P1")+": "+ƚ.ʣ);return true;}}if(Ά){Vector3D Ū=å.GetPosition();o.Ǎ("GPS:"+Ď.ǡ("P2")+":"+Ū.GetDim(0).ToString("F2")+":"+
Ū.GetDim(1).ToString("F2")+":"+Ū.GetDim(2).ToString("F2")+":");return true;}o.ƃ(Ď.ǡ("P2")+": ");if(!ҥ){o.ƴ(å.GetPosition(
).ToString("F0"));return true;}o.Ǎ("");o.ƃ(" X: ");o.ƴ(å.GetPosition().GetDim(0).ToString("F0"));o.ƃ(" Y: ");o.ƴ(å.
GetPosition().GetDim(1).ToString("F0"));o.ƃ(" Z: ");o.ƴ(å.GetPosition().GetDim(2).ToString("F0"));return true;}}class Ҥ:ŵ{public Ҥ(
){Ɏ=3;ɒ="CmdPower";}ȳ ǁ;β ң;β Ҫ;β Ҷ;β Ш;β Ҵ;β Ķ;public override void Ʌ(){ң=new β(Ɠ,o.ő);Ҫ=new β(Ɠ,o.ő);Ҷ=new β(Ɠ,o.ő);Ш=
new β(Ɠ,o.ő);Ҵ=new β(Ɠ,o.ő);Ķ=new β(Ɠ,o.ő);ǁ=o.ǁ;}string П;bool ҳ;string Ц;string Ҳ;int ұ;int Y=0;public override bool Ɨ(
bool ë){if(!ë){П=(ƚ.ʸ.EndsWith("x")?"s":(ƚ.ʸ.EndsWith("p")?"p":(ƚ.ʸ.EndsWith("v")?"v":"n")));ҳ=(ƚ.ʸ.StartsWith(
"powersummary"));Ц="a";Ҳ="";if(ƚ.ʸ.Contains("stored"))Ц="s";else if(ƚ.ʸ.Contains("in"))Ц="i";else if(ƚ.ʸ.Contains("out"))Ц="o";Y=0;ң.Ŧ
();Ҫ.Ŧ();Ҷ.Ŧ();Ш.Ŧ();Ҵ.Ŧ();}if(Ц=="a"){if(Y==0){if(!ң.ϼ("reactor",ƚ.ʣ,ë))return false;ë=false;Y++;}if(Y==1){if(!Ҫ.ϼ(
"hydrogenengine",ƚ.ʣ,ë))return false;ë=false;Y++;}if(Y==2){if(!Ҷ.ϼ("solarpanel",ƚ.ʣ,ë))return false;ë=false;Y++;}if(Y==3){if(!Ҵ.ϼ(
"windturbine",ƚ.ʣ,ë))return false;ë=false;Y++;}}else if(Y==0)Y=4;if(Y==4){if(!Ш.ϼ("battery",ƚ.ʣ,ë))return false;ë=false;Y++;}int ҵ=ң.
ϲ();int Ұ=Ҫ.ϲ();int ү=Ҷ.ϲ();int Ү=Ш.ϲ();int ҭ=Ҵ.ϲ();if(Y==5){ұ=0;if(ҵ&gt;0)ұ++;if(Ұ&gt;0)ұ++;if(ү&gt;0)ұ++;if(ҭ&gt;0)ұ++;if(Ү&gt;0)ұ++;
if(ұ&lt;1){o.Ǎ(Ď.ǡ("P6"));return true;}if(ƚ.ˋ.Count&gt;0){if(ƚ.ˋ[0].ĳ.Length&gt;0)Ҳ=ƚ.ˋ[0].ĳ;}Y++;ë=false;}if(Ц!="a"){if(!Щ(Ш,(Ҳ==
""?Ď.ǡ("P7"):Ҳ),Ц,П,ë))return false;return true;}string Ч=Ď.ǡ("P8");if(!ҳ){if(Y==6){if(ҵ&gt;0)if(!в(ң,(Ҳ==""?Ď.ǡ("P9"):Ҳ),П,ë
))return false;Y++;ë=false;}if(Y==7){if(Ұ&gt;0)if(!в(Ҫ,(Ҳ==""?Ď.ǡ("P12"):Ҳ),П,ë))return false;Y++;ë=false;}if(Y==8){if(ү&gt;0)
if(!в(Ҷ,(Ҳ==""?Ď.ǡ("P10"):Ҳ),П,ë))return false;Y++;ë=false;}if(Y==9){if(ҭ&gt;0)if(!в(Ҵ,(Ҳ==""?Ď.ǡ("P13"):Ҳ),П,ë))return false
;Y++;ë=false;}if(Y==10){if(Ү&gt;0)if(!Щ(Ш,(Ҳ==""?Ď.ǡ("P7"):Ҳ),Ц,П,ë))return false;Y++;ë=false;}}else{Ч=Ď.ǡ("P11");ұ=10;if(Y
==6)Y=11;}if(ұ==1)return true;if(!ë){Ķ.Ŧ();Ķ.ϴ(ң);Ķ.ϴ(Ҫ);Ķ.ϴ(Ҷ);Ķ.ϴ(Ҵ);Ķ.ϴ(Ш);}if(!в(Ķ,Ч,П,ë))return false;return true;}
void Н(double ˆ,double Ŷ){double М=(Ŷ&gt;0?ˆ/Ŷ*100:0);switch(П){case"s":o.ƴ(ƫ.Ŧ().ʆ(' ').ʆ(М.ToString("F1")).ʆ("%"));break;case
"v":o.ƴ(ƫ.Ŧ().ʆ(o.ȅ(ˆ)).ʆ("W / ").ʆ(o.ȅ(Ŷ)).ʆ("W"));break;case"c":o.ƴ(ƫ.Ŧ().ʆ(o.ȅ(ˆ)).ʆ("W"));break;case"p":o.ƴ(ƫ.Ŧ().ʆ(' '
).ʆ(М.ToString("F1")).ʆ("%"));o.Ư(М);break;default:o.ƴ(ƫ.Ŧ().ʆ(o.ȅ(ˆ)).ʆ("W / ").ʆ(o.ȅ(Ŷ)).ʆ("W"));o.Ƶ(М,1.0f,o.ə);o.ƴ(ƫ.
Ŧ().ʆ(' ').ʆ(М.ToString("F1")).ʆ("%"));break;}}double Ҭ=0;double З=0,ҫ=0;int ѯ=0;bool в(β ј,string Ч,string ʐ,bool ë){if(
!ë){З=0;ҫ=0;ѯ=0;}if(ѯ==0){if(!ǁ.Ƚ(ј.ί,ǁ.ȱ,ref Ҭ,ref Ҭ,ref З,ref ҫ,ë))return false;ѯ++;ë=false;}if(!Ɠ.Ȝ(50))return false;
double М=(ҫ&gt;0?З/ҫ*100:0);o.ƃ(Ч+": ");Н(З*1000000,ҫ*1000000);return true;}double а=0,Я=0,Ю=0,Э=0;double Ь=0,Ы=0;int Ъ=0;ʌ ƫ=new
ʌ(100);bool Щ(β Ш,string Ч,string Ц,string ʐ,bool ë){if(!ë){а=Я=0;Ю=Э=0;Ь=Ы=0;Ъ=0;}if(Ъ==0){if(!ǁ.ȭ(Ш.ί,ref Ю,ref Э,ref а
,ref Я,ref Ь,ref Ы,ë))return false;Ю*=1000000;Э*=1000000;а*=1000000;Я*=1000000;Ь*=1000000;Ы*=1000000;Ъ++;ë=false;}double
Х=(Ы&gt;0?Ь/Ы*100:0);double Ф=(Я&gt;0?а/Я*100:0);double У=(Э&gt;0?Ю/Э*100:0);bool б=Ц=="a";if(Ъ==1){if(!Ɠ.Ȝ(50))return false;if(б)
{if(ʐ!="p"){o.ƃ(ƫ.Ŧ().ʆ(Ч).ʆ(": "));o.ƴ(ƫ.Ŧ().ʆ("(IN ").ʆ(o.ȅ(Ю)).ʆ("W / OUT ").ʆ(o.ȅ(а)).ʆ("W)"));}else o.Ǎ(ƫ.Ŧ().ʆ(Ч).ʆ
(": "));o.ƃ(ƫ.Ŧ().ʆ("  ").ʆ(Ď.ǡ("P3")).ʆ(": "));}else o.ƃ(ƫ.Ŧ().ʆ(Ч).ʆ(": "));if(б||Ц=="s")switch(ʐ){case"s":o.ƴ(ƫ.Ŧ().ʆ(
' ').ʆ(Х.ToString("F1")).ʆ("%"));break;case"v":o.ƴ(ƫ.Ŧ().ʆ(o.ȅ(Ь)).ʆ("Wh / ").ʆ(o.ȅ(Ы)).ʆ("Wh"));break;case"p":o.ƴ(ƫ.Ŧ().ʆ(
' ').ʆ(Х.ToString("F1")).ʆ("%"));o.Ư(Х);break;default:o.ƴ(ƫ.Ŧ().ʆ(o.ȅ(Ь)).ʆ("Wh / ").ʆ(o.ȅ(Ы)).ʆ("Wh"));o.Ƶ(Х,1.0f,o.ə);o.ƴ
(ƫ.Ŧ().ʆ(' ').ʆ(Х.ToString("F1")).ʆ("%"));break;}if(Ц=="s")return true;Ъ++;ë=false;}if(Ъ==2){if(!Ɠ.Ȝ(50))return false;if(
б)o.ƃ(ƫ.Ŧ().ʆ("  ").ʆ(Ď.ǡ("P4")).ʆ(": "));if(б||Ц=="o")switch(ʐ){case"s":o.ƴ(ƫ.Ŧ().ʆ(' ').ʆ(Ф.ToString("F1")).ʆ("%"));
break;case"v":o.ƴ(ƫ.Ŧ().ʆ(o.ȅ(а)).ʆ("W / ").ʆ(o.ȅ(Я)).ʆ("W"));break;case"p":o.ƴ(ƫ.Ŧ().ʆ(' ').ʆ(Ф.ToString("F1")).ʆ("%"));o.Ư(
Ф);break;default:o.ƴ(ƫ.Ŧ().ʆ(o.ȅ(а)).ʆ("W / ").ʆ(o.ȅ(Я)).ʆ("W"));o.Ƶ(Ф,1.0f,o.ə);o.ƴ(ƫ.Ŧ().ʆ(' ').ʆ(Ф.ToString("F1")).ʆ(
"%"));break;}if(Ц=="o")return true;Ъ++;ë=false;}if(!Ɠ.Ȝ(50))return false;if(б)o.ƃ(ƫ.Ŧ().ʆ("  ").ʆ(Ď.ǡ("P5")).ʆ(": "));if(б
||Ц=="i")switch(ʐ){case"s":o.ƴ(ƫ.Ŧ().ʆ(' ').ʆ(У.ToString("F1")).ʆ("%"));break;case"v":o.ƴ(ƫ.Ŧ().ʆ(o.ȅ(Ю)).ʆ("W / ").ʆ(o.ȅ(
Э)).ʆ("W"));break;case"p":o.ƴ(ƫ.Ŧ().ʆ(' ').ʆ(У.ToString("F1")).ʆ("%"));o.Ư(У);break;default:o.ƴ(ƫ.Ŧ().ʆ(o.ȅ(Ю)).ʆ("W / ")
.ʆ(o.ȅ(Э)).ʆ("W"));o.Ƶ(У,1.0f,o.ə);o.ƴ(ƫ.Ŧ().ʆ(' ').ʆ(У.ToString("F1")).ʆ("%"));break;}return true;}}class Т:ŵ{public Т()
{Ɏ=7;ɒ="CmdPowerTime";}class х{public TimeSpan Ċ=new TimeSpan(-1);public double А=-1;public double у=0;}х т=new х();β с;β
р;public override void Ʌ(){с=new β(Ɠ,o.ő);р=new β(Ɠ,o.ő);}int п=0;double о=0;double н=0,м=0;double ф=0,л=0,й=0;double и=0
,з=0;int ж=0;private bool е(string ʣ,out TimeSpan д,out double г,bool ë){MyResourceSourceComponent Ⱥ;
MyResourceSinkComponent Ȫ;double к=ɏ;х С=т;д=С.Ċ;г=С.А;if(!ë){с.Ŧ();р.Ŧ();С.А=0;п=0;о=0;н=м=0;ф=0;л=й=0;и=з=0;ж=0;}if(п==0){if(!с.ϼ("reactor",ʣ
,ë))return false;ë=false;п++;}if(п==1){for(;ж&lt;с.ί.Count;ж++){if(!Ɠ.Ȝ(6))return false;IMyReactor å=с.ί[ж]as IMyReactor;if(
å==null||!å.IsWorking)continue;if(å.Components.TryGet&lt;MyResourceSourceComponent&gt;(out Ⱥ)){н+=Ⱥ.CurrentOutputByType(o.ǁ.ȱ);
м+=Ⱥ.MaxOutputByType(o.ǁ.ȱ);}о+=(double)å.GetInventory(0).CurrentMass;}ë=false;п++;}if(п==2){if(!р.ϼ("battery",ʣ,ë))
return false;ë=false;п++;}if(п==3){if(!ë)ж=0;for(;ж&lt;р.ί.Count;ж++){if(!Ɠ.Ȝ(15))return false;IMyBatteryBlock å=р.ί[ж]as
IMyBatteryBlock;if(å==null||!å.IsWorking)continue;if(å.Components.TryGet&lt;MyResourceSourceComponent&gt;(out Ⱥ)){л=Ⱥ.CurrentOutputByType(o.ǁ
.ȱ);й=Ⱥ.MaxOutputByType(o.ǁ.ȱ);}if(å.Components.TryGet&lt;MyResourceSinkComponent&gt;(out Ȫ)){л-=Ȫ.CurrentInputByType(o.ǁ.ȱ);}
double И=(л&lt;0?(å.MaxStoredPower-å.CurrentStoredPower)/(-л/3600):0);if(И&gt;С.А)С.А=И;if(å.ChargeMode==ChargeMode.Recharge)
continue;и+=л;з+=й;ф+=å.CurrentStoredPower;}ë=false;п++;}double З=н+и;if(З&lt;=0)С.Ċ=TimeSpan.FromSeconds(-1);else{double Ж=С.Ċ.
TotalSeconds;double Е;double Д=(С.у-о)/к;if(н&lt;=0)Д=Math.Min(З,м)/3600000;double Г=0;if(з&gt;0)Г=Math.Min(З,з)/3600;if(Д&lt;=0&amp;&amp;Г&lt;=0)Е=-1;
else if(Д&lt;=0)Е=ф/Г;else if(Г&lt;=0)Е=о/Д;else{double В=Г;double Б=(н&lt;=0?З/3600:Д*З/н);Е=ф/В+о/Б;}if(Ж&lt;=0||Е&lt;0)Ж=Е;else Ж=(Ж+Е)/
2;try{С.Ċ=TimeSpan.FromSeconds(Ж);}catch{С.Ċ=TimeSpan.FromSeconds(-1);}}С.у=о;г=С.А;д=С.Ċ;return true;}int Y=0;bool ʖ=
false;bool ʗ=false;bool ʕ=false;double А=0;TimeSpan Ȕ;int Џ=0,Ў=0,Ѝ=0;int ǰ=0;int Ќ=0;public override bool Ɨ(bool ë){if(!ë){ʖ
=ƚ.ʸ.EndsWith("bar");ʗ=(ƚ.ʸ[ƚ.ʸ.Length-1]=='x');ʕ=(ƚ.ʸ[ƚ.ʸ.Length-1]=='p');Y=0;Џ=Ў=Ѝ=ǰ=0;Ќ=0;А=0;}if(Y==0){if(ƚ.ˋ.Count&gt;0
){for(;Ќ&lt;ƚ.ˋ.Count;Ќ++){if(!Ɠ.Ȝ(100))return false;ƚ.ˋ[Ќ].ʻ();if(ƚ.ˋ[Ќ].ʽ.Count&lt;=0)continue;string ĳ=ƚ.ˋ[Ќ].ʽ[0];int.
TryParse(ĳ,out ǰ);if(Ќ==0)Џ=ǰ;else if(Ќ==1)Ў=ǰ;else if(Ќ==2)Ѝ=ǰ;}}Y++;ë=false;}if(Y==1){if(!е(ƚ.ʣ,out Ȕ,out А,ë))return false;Y
++;ë=false;}if(!Ɠ.Ȝ(30))return false;double Ċ=0;TimeSpan Й;try{Й=new TimeSpan(Џ,Ў,Ѝ);}catch{Й=TimeSpan.FromSeconds(-1);}
string ĸ;if(Ȕ.TotalSeconds&gt;0||А&lt;=0){if(!ʖ)o.ƃ(Ď.ǡ("PT1")+" ");ĸ=o.ǁ.ȕ(Ȕ);Ċ=Ȕ.TotalSeconds;}else{if(!ʖ)o.ƃ(Ď.ǡ("PT2")+" ");ĸ=o.
ǁ.ȕ(TimeSpan.FromSeconds(А));if(Й.TotalSeconds&gt;=А)Ċ=Й.TotalSeconds-А;else Ċ=0;}if(Й.Ticks&lt;=0){o.ƴ(ĸ);return true;}double
ʒ=Ċ/Й.TotalSeconds*100;if(ʒ&gt;100)ʒ=100;if(ʖ){o.Ư(ʒ);return true;}if(!ʗ&amp;&amp;!ʕ){o.ƴ(ĸ);o.Ƶ(ʒ,1.0f,o.ə);o.Ǎ(' '+ʒ.ToString(
"0.0")+"%");}else if(ʕ){o.ƴ(ʒ.ToString("0.0")+"%");o.Ư(ʒ);}else o.ƴ(ʒ.ToString("0.0")+"%");return true;}}class Р:ŵ{public Р()
{Ɏ=7;ɒ="CmdPowerUsed";}ȳ ǁ;β Ķ;public override void Ʌ(){Ķ=new β(Ɠ,o.ő);ǁ=o.ǁ;}string П;string О;string ϝ;void Н(double ˆ,
double Ŷ){double М=(Ŷ&gt;0?ˆ/Ŷ*100:0);switch(П){case"s":o.ƴ(М.ToString("0.0")+"%",1.0f);break;case"v":o.ƴ(o.ȅ(ˆ)+"W / "+o.ȅ(Ŷ)+
"W",1.0f);break;case"c":o.ƴ(o.ȅ(ˆ)+"W",1.0f);break;case"p":o.ƴ(М.ToString("0.0")+"%",1.0f);o.Ư(М);break;default:o.ƴ(o.ȅ(ˆ)+
"W / "+o.ȅ(Ŷ)+"W");o.Ƶ(М,1.0f,o.ə);o.ƴ(' '+М.ToString("0.0")+"%");break;}}double Ȭ=0,Ȳ=0;int Л=0;int Y=0;ѡ К=new ѡ();public
override bool Ɨ(bool ë){if(!ë){П=(ƚ.ʸ.EndsWith("x")?"s":(ƚ.ʸ.EndsWith("usedp")||ƚ.ʸ.EndsWith("topp")?"p":(ƚ.ʸ.EndsWith("v")?"v":
(ƚ.ʸ.EndsWith("c")?"c":"n"))));О=(ƚ.ʸ.Contains("top")?"top":"");ϝ=(ƚ.ˋ.Count&gt;0?ƚ.ˋ[0].ĳ:Ď.ǡ("PU1"));Ȭ=Ȳ=0;Y=0;Л=0;Ķ.Ŧ();К
.w();}if(Y==0){if(!Ķ.μ(ƚ.ʣ,ë))return false;ë=false;Y++;}MyResourceSinkComponent Ȫ;MyResourceSourceComponent Ⱥ;switch(О){
case"top":if(Y==1){for(;Л&lt;Ķ.ί.Count;Л++){if(!Ɠ.Ȝ(20))return false;IMyTerminalBlock å=Ķ.ί[Л];if(å.Components.TryGet&lt;
MyResourceSinkComponent&gt;(out Ȫ)){ListReader&lt;MyDefinitionId&gt;Ȗ=Ȫ.AcceptedResources;if(Ȗ.IndexOf(ǁ.ȱ)&lt;0)continue;Ȭ=Ȫ.CurrentInputByType(ǁ.ȱ)*
1000000;}else continue;К.A(Ȭ,å);}ë=false;Y++;}if(К.º()&lt;=0){o.Ǎ("PowerUsedTop: "+Ď.ǡ("D2"));return true;}int Ľ=10;if(ƚ.ˋ.Count&gt;0
)if(!int.TryParse(ϝ,out Ľ)){Ľ=10;}if(Ľ&gt;К.º())Ľ=К.º();if(Y==2){if(!ë){Л=К.º()-1;К.Ã();}for(;Л&gt;=К.º()-Ľ;Л--){if(!Ɠ.Ȝ(30))
return false;IMyTerminalBlock å=К.ª(Л);string ŀ=o.ǜ(å.CustomName,o.ɠ*0.4f);if(å.Components.TryGet&lt;MyResourceSinkComponent&gt;(out
Ȫ)){Ȭ=Ȫ.CurrentInputByType(ǁ.ȱ)*1000000;Ȳ=Ȫ.MaxRequiredInputByType(ǁ.ȱ)*1000000;}o.ƃ(ŀ+" ");Н(Ȭ,Ȳ);}}break;default:for(;Л
&lt;Ķ.ί.Count;Л++){if(!Ɠ.Ȝ(10))return false;double Ѣ;IMyTerminalBlock å=Ķ.ί[Л];if(å.Components.TryGet&lt;
MyResourceSinkComponent&gt;(out Ȫ)){ListReader&lt;MyDefinitionId&gt;Ȗ=Ȫ.AcceptedResources;if(Ȗ.IndexOf(ǁ.ȱ)&lt;0)continue;Ѣ=Ȫ.CurrentInputByType(ǁ.ȱ);Ȳ+=Ȫ.
MaxRequiredInputByType(ǁ.ȱ);}else continue;if(å.Components.TryGet&lt;MyResourceSourceComponent&gt;(out Ⱥ)&amp;&amp;(å as IMyBatteryBlock!=null)){Ѣ-=Ⱥ.
CurrentOutputByType(ǁ.ȱ);if(Ѣ&lt;=0)continue;}Ȭ+=Ѣ;}o.ƃ(ϝ);Н(Ȭ*1000000,Ȳ*1000000);break;}return true;}public class ѡ{List&lt;KeyValuePair&lt;double,
IMyTerminalBlock&gt;&gt;Ѡ=new List&lt;KeyValuePair&lt;double,IMyTerminalBlock&gt;&gt;();public void A(double џ,IMyTerminalBlock å){Ѡ.Add(new KeyValuePair&lt;
double,IMyTerminalBlock&gt;(џ,å));}public int º(){return Ѡ.Count;}public IMyTerminalBlock ª(int z){return Ѡ[z].Value;}public void
w(){Ѡ.Clear();}public void Ã(){Ѡ.Sort((Ђ,ѝ)=&gt;(Ђ.Key.CompareTo(ѝ.Key)));}}}class ќ:ŵ{β Ķ;public ќ(){Ɏ=1;ɒ="CmdProp";}
public override void Ʌ(){Ķ=new β(Ɠ,o.ő);}int Y=0;int Л=0;bool ћ=false;string њ=null;string љ=null;string ў=null;string ѣ=null;
public override bool Ɨ(bool ë){if(!ë){ћ=ƚ.ʸ.StartsWith("props");њ=љ=ў=ѣ=null;Л=0;Y=0;}if(ƚ.ˋ.Count&lt;1){o.Ǎ(ƚ.ʸ+": "+
"Missing property name.");return true;}if(Y==0){if(!ë)Ķ.Ŧ();if(!Ķ.μ(ƚ.ʣ,ë))return false;Ѯ();Y++;ë=false;}if(Y==1){int Ľ=Ķ.ϲ();if(Ľ==0){o.Ǎ(ƚ.ʸ+
": "+"No blocks found.");return true;}for(;Л&lt;Ľ;Л++){if(!Ɠ.Ȝ(50))return false;IMyTerminalBlock å=Ķ.ί[Л];if(å.GetProperty(њ)!=
null){if(љ==null){string ϝ=o.ǜ(å.CustomName,o.ɠ*0.7f);o.ƃ(ϝ);}else o.ƃ(љ);o.ƴ(ѭ(å,њ,ў,ѣ));if(!ћ)return true;}}}return true;}
void Ѯ(){њ=ƚ.ˋ[0].ĳ;if(ƚ.ˋ.Count&gt;1){if(!ћ)љ=ƚ.ˋ[1].ĳ;else ў=ƚ.ˋ[1].ĳ;if(ƚ.ˋ.Count&gt;2){if(!ћ)ў=ƚ.ˋ[2].ĳ;else ѣ=ƚ.ˋ[2].ĳ;if(ƚ.ˋ
.Count&gt;3&amp;&amp;!ћ)ѣ=ƚ.ˋ[3].ĳ;}}}string ѭ(IMyTerminalBlock å,string Ѭ,string ѫ=null,string Ѫ=null){return(å.GetValue&lt;bool&gt;(Ѭ)?(
ѫ!=null?ѫ:Ď.ǡ("W9")):(Ѫ!=null?Ѫ:Ď.ǡ("W1")));}}class ѩ:ŵ{public ѩ(){Ɏ=5;ɒ="CmdShipCtrl";}β Ķ;public override void Ʌ(){Ķ=
new β(Ɠ,o.ő);}public override bool Ɨ(bool ë){if(!ë)Ķ.Ŧ();if(!Ķ.ϼ("shipctrl",ƚ.ʣ,ë))return false;if(Ķ.ϲ()&lt;=0){if(ƚ.ʣ!=""&amp;&amp;ƚ.
ʣ!="*")o.Ǎ(ƚ.ʸ+": "+Ď.ǡ("SC1")+" ("+ƚ.ʣ+")");else o.Ǎ(ƚ.ʸ+": "+Ď.ǡ("SC1"));return true;}if(ƚ.ʸ.StartsWith("damp")){bool Ѝ
=(Ķ.ί[0]as IMyShipController).DampenersOverride;o.ƃ(Ď.ǡ("SCD"));o.ƴ(Ѝ?"ON":"OFF");}else{bool Ѝ=(Ķ.ί[0]as
IMyShipController).IsUnderControl;o.ƃ(Ď.ǡ("SCO"));o.ƴ(Ѝ?"YES":"NO");}return true;}}class Ѩ:ŵ{public Ѩ(){Ɏ=1;ɒ="CmdShipMass";}public
override bool Ɨ(bool ë){bool ѧ=ƚ.ʸ.EndsWith("base");double ʓ=0;if(ƚ.ʣ!="")double.TryParse(ƚ.ʣ.Trim(),out ʓ);int Ѧ=ƚ.ˋ.Count;if(Ѧ
&gt;0){string ѥ=ƚ.ˋ[0].ĳ.Trim();char э=' ';if(ѥ.Length&gt;0)э=Char.ToLower(ѥ[0]);int Ѥ="kmgtpezy".IndexOf(э);if(Ѥ&gt;=0)ʓ*=Math.
Pow(1000.0,Ѥ);}double ɺ=(ѧ?o.ǀ.ɸ:o.ǀ.ɹ);if(!ѧ)o.ƃ(Ď.ǡ("SM1")+" ");else o.ƃ(Ď.ǡ("SM2")+" ");o.ƴ(o.ȃ(ɺ,true,'k')+" ");if(ʓ&gt;0)
o.Ư(ɺ/ʓ*100);return true;}}class я:ŵ{public я(){Ɏ=0.5;ɒ="CmdSpeed";}public override bool Ɨ(bool ë){double ʓ=0;double ю=1;
string э="m/s";if(ƚ.ʸ.Contains("kmh")){ю=3.6;э="km/h";}else if(ƚ.ʸ.Contains("mph")){ю=2.23694;э="mph";}if(ƚ.ʣ!="")double.
TryParse(ƚ.ʣ.Trim(),out ʓ);o.ƃ(Ď.ǡ("S1")+" ");o.ƴ((o.ǀ.ʃ*ю).ToString("F1")+" "+э+" ");if(ʓ&gt;0)o.Ư(o.ǀ.ʃ/ʓ*100);return true;}}
class ь:ŵ{public ь(){Ɏ=1;ɒ="CmdStopTask";}public override bool Ɨ(bool ë){double ы=0;if(ƚ.ʸ.Contains("best"))ы=o.ǀ.ʃ/o.ǀ.ɾ;
else ы=o.ǀ.ʃ/o.ǀ.ɻ;double ъ=o.ǀ.ʃ/2*ы;if(ƚ.ʸ.Contains("time")){o.ƃ(Ď.ǡ("ST"));if(double.IsNaN(ы)){o.ƴ("N/A");return true;}
string ĸ="";try{TimeSpan ˠ=TimeSpan.FromSeconds(ы);if((int)ˠ.TotalDays&gt;0)ĸ=" &gt; 24h";else{if(ˠ.Hours&gt;0)ĸ=ˠ.Hours+"h ";if(ˠ.
Minutes&gt;0||ĸ!="")ĸ+=ˠ.Minutes+"m ";ĸ+=ˠ.Seconds+"s";}}catch{ĸ="N/A";}o.ƴ(ĸ);return true;}o.ƃ(Ď.ǡ("SD"));if(!double.IsNaN(ъ)&amp;&amp;!
double.IsInfinity(ъ))o.ƴ(o.ȅ(ъ)+"m ");else o.ƴ("N/A");return true;}}class щ:ŵ{ȳ ǁ;β Ķ;public щ(){Ɏ=2;ɒ="CmdTanks";}public
override void Ʌ(){ǁ=o.ǁ;Ķ=new β(Ɠ,o.ő);}int Y=0;char П='n';string ш;double ч=0;double ц=0;double Ʈ;bool ʖ=false;public override
bool Ɨ(bool ë){List&lt;ˀ&gt;ˋ=ƚ.ˋ;if(ˋ.Count==0){o.Ǎ(Ď.ǡ("T4"));return true;}if(!ë){П=(ƚ.ʸ.EndsWith("x")?'s':(ƚ.ʸ.EndsWith("p")?
'p':(ƚ.ʸ.EndsWith("v")?'v':'n')));ʖ=ƚ.ʸ.EndsWith("bar");Y=0;if(ш==null){ш=ˋ[0].ĳ.Trim();ш=char.ToUpper(ш[0])+ш.Substring(1)
.ToLower();}Ķ.Ŧ();ч=0;ц=0;}if(Y==0){if(!Ķ.ϼ("oxytank",ƚ.ʣ,ë))return false;ë=false;Y++;}if(Y==1){if(!Ķ.ϼ("hydrogenengine",
ƚ.ʣ,ë))return false;ë=false;Y++;}if(Y==2){if(!ǁ.ȸ(Ķ.ί,ш,ref ч,ref ц,ë))return false;ë=false;Y++;}if(ц==0){o.Ǎ(String.
Format(Ď.ǡ("T5"),ш));return true;}Ʈ=ч/ц*100;if(ʖ){o.Ư(Ʈ);return true;}o.ƃ(ш);switch(П){case's':o.ƴ(' '+o.Ǽ(Ʈ)+"%");break;case
'v':o.ƴ(o.ȅ(ч)+"L / "+o.ȅ(ц)+"L");break;case'p':o.ƴ(' '+o.Ǽ(Ʈ)+"%");o.Ư(Ʈ);break;default:o.ƴ(o.ȅ(ч)+"L / "+o.ȅ(ц)+"L");o.Ƶ(
Ʈ,1.0f,o.ə);o.ƴ(' '+Ʈ.ToString("0.0")+"%");break;}return true;}}class ї{ɖ o=null;public string J="Debug";public float і=
1.0f;public List&lt;ʌ&gt;ǉ=new List&lt;ʌ&gt;();public int Ŗ=0;public float ѕ=0;public ї(ɖ Û){o=Û;ǉ.Add(new ʌ());}public void є(string ĸ)
{ǉ[Ŗ].ʆ(ĸ);}public void є(ʌ ƪ){ǉ[Ŗ].ʆ(ƪ);}public void ѓ(){ǉ.Add(new ʌ());Ŗ++;ѕ=0;}public void ѓ(string ǎ){ǉ[Ŗ].ʆ(ǎ);ѓ();}
public void ђ(List&lt;ʌ&gt;ё){if(ǉ[Ŗ].ʊ==0)ǉ.RemoveAt(Ŗ);else Ŗ++;ǉ.AddList(ё);Ŗ+=ё.Count-1;ѓ();}public List&lt;ʌ&gt;ţ(){if(ǉ[Ŗ].ʊ==0)
return ǉ.GetRange(0,Ŗ);else return ǉ;}public void ѐ(string ǋ,string P=""){string[]ǉ=ǋ.Split('\n');for(int F=0;F&lt;ǉ.Length;F++)ѓ
(P+ǉ[F]);}public void Ƭ(){ǉ.Clear();ѓ();Ŗ=0;}public int ť(){return Ŗ+(ǉ[Ŗ].ʊ&gt;0?1:0);}public string Ų(){return String.Join
("\n",ǉ);}public void ţ(List&lt;ʌ&gt;Ţ,int š,int Š){int ş=š+Š;int Ş=ť();if(ş&gt;Ş)ş=Ş;for(int F=š;F&lt;ş;F++)Ţ.Add(ǉ[F]);}}class ŝ{ɖ
o=null;public float Ŝ=1.0f;public int ś=17;public int Ś=0;int ř=1;int Ř=1;public List&lt;ї&gt;ŗ=new List&lt;ї&gt;();public int Ŗ=0;
public ŝ(ɖ Û){o=Û;}public void ŕ(int Ľ){Ř=Ľ;}public void Ŕ(){ś=(int)Math.Floor(ɖ.ɪ*Ŝ*Ř/ɖ.ɨ);}public void Ť(ї ĸ){ŗ.Add(ĸ);}
public void Ŧ(){ŗ.Clear();}public int ť(){int Ľ=0;foreach(var ĸ in ŗ){Ľ+=ĸ.ť();}return Ľ;}ʌ ų=new ʌ(256);public ʌ Ų(){ų.Ŧ();
int Ľ=ŗ.Count;for(int F=0;F&lt;Ľ-1;F++){ų.ʆ(ŗ[F].Ų());ų.ʆ("\n");}if(Ľ&gt;0)ų.ʆ(ŗ[Ľ-1].Ų());return ų;}List&lt;ʌ&gt;ű=new List&lt;ʌ&gt;(20);
public ʌ Ű(int ů=0){ų.Ŧ();ű.Clear();if(Ř&lt;=0)return ų;int Ů=ŗ.Count;int Ŵ=0;int ŭ=(ś/Ř);int ū=(ů*ŭ);int Ū=Ś+ū;int ũ=Ū+ŭ;bool Ũ=
false;for(int F=0;F&lt;Ů;F++){ї ĸ=ŗ[F];int Ş=ĸ.ť();int ŧ=Ŵ;Ŵ+=Ş;if(!Ũ&amp;&amp;Ŵ&gt;Ū){int š=Ū-ŧ;if(Ŵ&gt;=ũ){ĸ.ţ(ű,š,ũ-ŧ-š);break;}Ũ=true;ĸ.ţ(
ű,š,Ş);continue;}if(Ũ){if(Ŵ&gt;=ũ){ĸ.ţ(ű,0,ũ-ŧ);break;}ĸ.ţ(ű,0,Ş);}}int Ľ=ű.Count;for(int F=0;F&lt;Ľ-1;F++){ų.ʆ(ű[F]);ų.ʆ("\n")
;}if(Ľ&gt;0)ų.ʆ(ű[Ľ-1]);return ų;}public bool Ŭ(int Ľ=-1){if(Ľ&lt;=0)Ľ=o.ɦ;if(Ś-Ľ&lt;=0){Ś=0;return true;}Ś-=Ľ;return false;}
public bool ň(int Ľ=-1){if(Ľ&lt;=0)Ľ=o.ɦ;int ļ=ť();if(Ś+Ľ+ś&gt;=ļ){Ś=Math.Max(ļ-ś,0);return true;}Ś+=Ľ;return false;}public int Ļ=0;
public void ĺ(){if(Ļ&gt;0){Ļ--;return;}if(ť()&lt;=ś){Ś=0;ř=1;return;}if(ř&gt;0){if(ň()){ř=-1;Ļ=2;}}else{if(Ŭ()){ř=1;Ļ=2;}}}}class Ĺ:ŵ{
public Ĺ(){Ɏ=1;ɒ="CmdTextLCD";}public override bool Ɨ(bool ë){string ĸ="";if(ƚ.ʣ!=""&amp;&amp;ƚ.ʣ!="*"){IMyTextPanel ý=o.ƿ.
GetBlockWithName(ƚ.ʣ)as IMyTextPanel;if(ý==null){o.Ǎ("TextLCD: "+Ď.ǡ("T1")+ƚ.ʣ);return true;}ĸ=ý.GetText();}else{o.Ǎ("TextLCD:"+Ď.ǡ("T2"
));return true;}if(ĸ.Length==0)return true;o.ǌ(ĸ);return true;}}class ķ:ŵ{public ķ(){Ɏ=5;ɒ="CmdWorking";}β Ķ;public
override void Ʌ(){Ķ=new β(Ɠ,o.ő);}int Y=0;int ĵ=0;bool Ĵ;public override bool Ɨ(bool ë){if(!ë){Y=0;Ĵ=(ƚ.ʸ=="workingx");ĵ=0;}if(ƚ
.ˋ.Count==0){if(Y==0){if(!ë)Ķ.Ŧ();if(!Ķ.μ(ƚ.ʣ,ë))return false;Y++;ë=false;}if(!Ń(Ķ,Ĵ,"",ë))return false;return true;}for(
;ĵ&lt;ƚ.ˋ.Count;ĵ++){ˀ ĳ=ƚ.ˋ[ĵ];if(!ë)ĳ.ʻ();if(!Į(ĳ,ë))return false;ë=false;}return true;}int Ĳ=0;int ı=0;string[]İ;string į
;string ľ;bool Į(ˀ ĳ,bool ë){if(!ë){Ĳ=0;ı=0;}for(;ı&lt;ĳ.ʽ.Count;ı++){if(Ĳ==0){if(!ë){if(string.IsNullOrEmpty(ĳ.ʽ[ı]))
continue;Ķ.Ŧ();İ=ĳ.ʽ[ı].Split(':');į=İ[0];ľ=(İ.Length&gt;1?İ[1]:"");}if(!string.IsNullOrEmpty(į)){if(!Ķ.ϼ(į,ƚ.ʣ,ë))return false;}
else{if(!Ķ.μ(ƚ.ʣ,ë))return false;}Ĳ++;ë=false;}if(!Ń(Ķ,Ĵ,ľ,ë))return false;Ĳ=0;ë=false;}return true;}string Œ(
IMyTerminalBlock å){ϵ ő=o.ő;if(!å.IsWorking)return Ď.ǡ("W1");IMyProductionBlock Ő=å as IMyProductionBlock;if(Ő!=null)if(Ő.IsProducing)
return Ď.ǡ("W2");else return Ď.ǡ("W3");IMyAirVent ŏ=å as IMyAirVent;if(ŏ!=null){if(ŏ.CanPressurize)return(ŏ.GetOxygenLevel()*
100).ToString("F1")+"%";else return Ď.ǡ("W4");}IMyGasTank Ŏ=å as IMyGasTank;if(Ŏ!=null)return(Ŏ.FilledRatio*100).ToString(
"F1")+"%";IMyBatteryBlock ō=å as IMyBatteryBlock;if(ō!=null)return ő.Ϫ(ō);IMyJumpDrive Ō=å as IMyJumpDrive;if(Ō!=null)return
ő.ϙ(Ō).ToString("0.0")+"%";IMyLandingGear ŋ=å as IMyLandingGear;if(ŋ!=null){switch((int)ŋ.LockMode){case 0:return Ď.ǡ(
"W8");case 1:return Ď.ǡ("W10");case 2:return Ď.ǡ("W7");}}IMyDoor Ŋ=å as IMyDoor;if(Ŋ!=null){if(Ŋ.Status==DoorStatus.Open)
return Ď.ǡ("W5");return Ď.ǡ("W6");}IMyShipConnector œ=å as IMyShipConnector;if(œ!=null){if(œ.Status==MyShipConnectorStatus.
Unconnected)return Ď.ǡ("W8");if(œ.Status==MyShipConnectorStatus.Connected)return Ď.ǡ("W7");else return Ď.ǡ("W10");}IMyLaserAntenna
ŉ=å as IMyLaserAntenna;if(ŉ!=null)return ő.ϛ(ŉ);IMyRadioAntenna Ň=å as IMyRadioAntenna;if(Ň!=null)return o.ȅ(Ň.Radius)+
"m";IMyBeacon ņ=å as IMyBeacon;if(ņ!=null)return o.ȅ(ņ.Radius)+"m";IMyThrust Ņ=å as IMyThrust;if(Ņ!=null&amp;&amp;Ņ.ThrustOverride&gt;
0)return o.ȅ(Ņ.ThrustOverride)+"N";return Ď.ǡ("W9");}int ń=0;bool Ń(β Ā,bool ł,string Ł,bool ë){if(!ë)ń=0;for(;ń&lt;Ā.ϲ();ń
++){if(!Ɠ.Ȝ(20))return false;IMyTerminalBlock å=Ā.ί[ń];string Ŀ=(ł?(å.IsWorking?Ď.ǡ("W9"):Ď.ǡ("W1")):Œ(å));if(!string.
IsNullOrEmpty(Ł)&amp;&amp;String.Compare(Ŀ,Ł,true)!=0)continue;if(ł)Ŀ=Œ(å);string ŀ=å.CustomName;ŀ=o.ǜ(ŀ,o.ɠ*0.7f);o.ƃ(ŀ);o.ƴ(Ŀ);}return true
;}}class ŵ:ɓ{public ї ĸ=null;protected ʤ ƚ;protected ɖ o;protected Ę k;protected ǒ Ď;public ŵ(){Ɏ=3600;ɒ="CommandTask";}
public void ƙ(Ę j,ʤ Ƙ){k=j;o=k.o;ƚ=Ƙ;Ď=o.Ď;}public virtual bool Ɨ(bool ë){o.Ǎ(Ď.ǡ("UC")+": '"+ƚ.ʺ+"'");return true;}public
override bool Ʉ(bool ë){ĸ=o.ǈ(ĸ,k.E);if(!ë)o.Ƭ();return Ɨ(ë);}}class Ɩ{Dictionary&lt;string,string&gt;Ɣ=new Dictionary&lt;string,string&gt;(
StringComparer.InvariantCultureIgnoreCase){{"ingot","ingot"},{"ore","ore"},{"component","component"},{"tool","physicalgunobject"},{
"ammo","ammomagazine"},{"oxygen","oxygencontainerobject"},{"gas","gascontainerobject"}};ȓ Ɠ;ɖ o;ƈ ƒ;ƈ Ƒ;ƈ Ɛ;Ƈ Ə;bool Ǝ;public
ƈ ƍ;public Ɩ(ȓ ƕ,ɖ Û,int K=20){ƒ=new ƈ();Ƒ=new ƈ();Ɛ=new ƈ();Ǝ=false;ƍ=new ƈ();Ɠ=ƕ;o=Û;Ə=o.Ə;}public void Ŧ(){Ɛ.w();Ƒ.w()
;ƒ.w();Ǝ=false;ƍ.w();}public void ơ(string Ơ,bool Ƃ=false,int ŷ=1,int Ŷ=-1){if(string.IsNullOrEmpty(Ơ)){Ǝ=true;return;}
string[]Ɵ=Ơ.Split(' ');string Ï="";Ÿ ż=new Ÿ(Ƃ,ŷ,Ŷ);if(Ɵ.Length==2){if(!Ɣ.TryGetValue(Ɵ[1],out Ï))Ï=Ɵ[1];}string Ð=Ɵ[0];if(Ɣ.
TryGetValue(Ð,out ż.Ï)){Ƒ.A(ż.Ï,ż);return;}o.Ǳ(ref Ð,ref Ï);if(string.IsNullOrEmpty(Ï)){ż.Ð=Ð;ƒ.A(ż.Ð,ż);return;}ż.Ð=Ð;ż.Ï=Ï;Ɛ.A(Ð+
' '+Ï,ż);}public Ÿ ƞ(string Ò,string Ð,string Ï){Ÿ ż;ż=Ɛ.µ(Ò);if(ż!=null)return ż;ż=ƒ.µ(Ð);if(ż!=null)return ż;ż=Ƒ.µ(Ï);if(
ż!=null)return ż;return null;}public bool Ɲ(string Ò,string Ð,string Ï){Ÿ ż;bool Ɯ=false;ż=Ƒ.µ(Ï);if(ż!=null){if(ż.Ƃ)
return true;Ɯ=true;}ż=ƒ.µ(Ð);if(ż!=null){if(ż.Ƃ)return true;Ɯ=true;}ż=Ɛ.µ(Ò);if(ż!=null){if(ż.Ƃ)return true;Ɯ=true;}return!(Ǝ
||Ɯ);}public Ÿ ƛ(string Ò,string Ð,string Ï){Ÿ Ź=new Ÿ();Ÿ ż=ƞ(Ò,Ð,Ï);if(ż!=null){Ź.ŷ=ż.ŷ;Ź.Ŷ=ż.Ŷ;}Ź.Ð=Ð;Ź.Ï=Ï;ƍ.A(Ò,Ź);
return Ź;}public Ÿ Ɓ(string Ò,string Ð,string Ï){Ÿ Ź=ƍ.µ(Ò);if(Ź==null)Ź=ƛ(Ò,Ð,Ï);return Ź;}int ƀ=0;List&lt;Ÿ&gt;ſ;public List&lt;Ÿ&gt;ž(
string Ï,bool ë,Func&lt;Ÿ,bool&gt;Ž=null){if(!ë){ſ=new List&lt;Ÿ&gt;();ƀ=0;}for(;ƀ&lt;ƍ.º();ƀ++){if(!Ɠ.Ȝ(5))return null;Ÿ ż=ƍ.ª(ƀ);if(Ɲ(ż.Ð+
' '+ż.Ï,ż.Ð,ż.Ï))continue;if((string.Compare(ż.Ï,Ï,true)==0)&amp;&amp;(Ž==null||Ž(ż)))ſ.Add(ż);}return ſ;}int Ż=0;public bool ź(
bool ë){if(!ë){Ż=0;}for(;Ż&lt;Ə.V.Count;Ż++){if(!Ɠ.Ȝ(10))return false;Î À=Ə.Ɔ[Ə.V[Ż]];if(!À.È)continue;string Ò=À.Í+' '+À.Ì;if(
Ɲ(Ò,À.Í,À.Ì))continue;Ÿ Ź=Ɓ(Ò,À.Í,À.Ì);if(Ź.Ŷ==-1)Ź.Ŷ=À.Ë;}return true;}}class Ÿ{public int ŷ;public int Ŷ;public string
Ð="";public string Ï="";public bool Ƃ;public double ƌ;public Ÿ(bool Ƌ=false,int Ɗ=1,int Ɖ=-1){ŷ=Ɗ;Ƃ=Ƌ;Ŷ=Ɖ;}}class ƈ{
Dictionary&lt;string,Ÿ&gt;ú=new Dictionary&lt;string,Ÿ&gt;(StringComparer.InvariantCultureIgnoreCase);List&lt;string&gt;V=new List&lt;string&gt;();public
void A(string X,Ÿ À){if(!ú.ContainsKey(X)){V.Add(X);ú.Add(X,À);}}public int º(){return ú.Count;}public Ÿ µ(string X){if(ú.
ContainsKey(X))return ú[X];return null;}public Ÿ ª(int z){return ú[V[z]];}public void w(){V.Clear();ú.Clear();}public void Ã(){V.
Sort();}}class Ƈ{public Dictionary&lt;string,Î&gt;Ɔ=new Dictionary&lt;string,Î&gt;(StringComparer.InvariantCultureIgnoreCase);Dictionary
&lt;string,Î&gt;ƅ=new Dictionary&lt;string,Î&gt;(StringComparer.InvariantCultureIgnoreCase);public List&lt;string&gt;V=new List&lt;string&gt;();
public Dictionary&lt;string,Î&gt;Ƅ=new Dictionary&lt;string,Î&gt;(StringComparer.InvariantCultureIgnoreCase);public void ƃ(string Ð,string
Ï,int ć,string Ô,string Ó,bool È){if(Ï=="Ammo")Ï="AmmoMagazine";else if(Ï=="Tool")Ï="PhysicalGunObject";string Ò=Ð+' '+Ï;
Î À=new Î(Ð,Ï,ć,Ô,Ó,È);Ɔ.Add(Ò,À);if(!ƅ.ContainsKey(Ð))ƅ.Add(Ð,À);if(Ó!="")Ƅ.Add(Ó,À);V.Add(Ò);}public Î Ñ(string Ð="",
string Ï=""){if(Ɔ.ContainsKey(Ð+" "+Ï))return Ɔ[Ð+" "+Ï];if(string.IsNullOrEmpty(Ï)){Î À=null;ƅ.TryGetValue(Ð,out À);return À;
}if(string.IsNullOrEmpty(Ð))for(int F=0;F&lt;Ɔ.Count;F++){Î À=Ɔ[V[F]];if(string.Compare(Ï,À.Ì,true)==0)return À;}return null
;}}class Î{public string Í;public string Ì;public int Ë;public string Ê;public string É;public bool È;public Î(string Ç,
string Æ,int Õ=0,string Å="",string Ö="",bool ê=true){Í=Ç;Ì=Æ;Ë=Õ;Ê=Å;É=Ö;È=ê;}}class è{ɖ o=null;public D ç=new D();public ŝ æ
;public IMyTerminalBlock å;public IMyTextSurface ä;public int ã=0;public int â=0;public string á="";public string à="";
public bool é=true;public IMyTextSurface ß=&gt;(Ü?ä:å as IMyTextSurface);public int Ý=&gt;(Ü?(o.Ǉ(å)?0:1):ç.º());public bool Ü=false
;public è(ɖ Û,string Ú){o=Û;à=Ú;}public è(ɖ Û,string Ú,IMyTerminalBlock Ù,IMyTextSurface G,int Ø){o=Û;à=Ú;å=Ù;ä=G;ã=Ø;Ü=
true;}public bool Þ(){return æ.ť()&gt;æ.ś||æ.Ś!=0;}float Ä=1.0f;bool r=false;public float U(){if(r)return Ä;r=true;if(å.
BlockDefinition.SubtypeId.Contains("Corner_LCD")){Ä=0.15f;if(å.BlockDefinition.SubtypeId.Contains("Flat"))Ä=0.1765f;if(å.
BlockDefinition.SubtypeId.Contains("Small"))Ä*=1.8f;}return Ä;}bool S=false;public void R(){if(S)return;if(!Ü){ç.Ã();å=ç.ª(0);}int Q=å.
CustomName.IndexOf("!MARGIN:");if(Q&lt;0||Q+8&gt;=å.CustomName.Length){â=1;á=" ";}else{string P=å.CustomName.Substring(Q+8);int O=P.
IndexOf(" ");if(O&gt;=0)P=P.Substring(0,O);if(!int.TryParse(P,out â))â=1;á=new String(' ',â);}if(å.CustomName.Contains("!NOSCROLL"
))é=false;else é=true;S=true;}public void N(ŝ L=null){if(æ==null||å==null)return;if(L==null)L=æ;if(!Ü){IMyTextSurface G=å
as IMyTextSurface;if(G!=null){float K=G.FontSize;string J=G.Font;for(int F=0;F&lt;ç.º();F++){IMyTextSurface E=ç.ª(F)as
IMyTextSurface;if(E==null)continue;E.Alignment=VRage.Game.GUI.TextPanel.TextAlignment.LEFT;E.FontSize=K;E.Font=J;string I=L.Ű(F).ɕ();E
.ContentType=VRage.Game.GUI.TextPanel.ContentType.TEXT_AND_IMAGE;E.WriteText(I);}}}else{ä.Alignment=VRage.Game.GUI.
TextPanel.TextAlignment.LEFT;ä.ContentType=VRage.Game.GUI.TextPanel.ContentType.TEXT_AND_IMAGE;ä.WriteText(L.Ű().ɕ());}S=false;}
public void H(){if(å==null)return;if(Ü){ä.WriteText("");return;}IMyTextSurface G=å as IMyTextSurface;if(G==null)return;for(int
F=0;F&lt;ç.º();F++){IMyTextSurface E=ç.ª(F)as IMyTextSurface;if(E==null)continue;E.WriteText("");}}}class D{Dictionary&lt;
string,IMyTerminalBlock&gt;C=new Dictionary&lt;string,IMyTerminalBlock&gt;();Dictionary&lt;IMyTerminalBlock,string&gt;B=new Dictionary&lt;
IMyTerminalBlock,string&gt;();List&lt;string&gt;V=new List&lt;string&gt;();public void A(string X,IMyTerminalBlock À){if(!V.Contains(X)){V.Add(X);C.Add
(X,À);B.Add(À,X);}}public void Â(string X){if(V.Contains(X)){V.Remove(X);B.Remove(C[X]);C.Remove(X);}}public void Á(
IMyTerminalBlock À){if(B.ContainsKey(À)){V.Remove(B[À]);C.Remove(B[À]);B.Remove(À);}}public int º(){return C.Count;}public
IMyTerminalBlock µ(string X){if(V.Contains(X))return C[X];return null;}public IMyTerminalBlock ª(int z){return C[V[z]];}public void w(){
V.Clear();C.Clear();B.Clear();}public void Ã(){V.Sort();}}class v:ɓ{public ɖ o;public è n;Ę k;public v(Ę j){k=j;o=k.o;n=k
.E;Ɏ=0.5;ɒ="PanelDisplay";}double f=0;public void e(){f=0;}int b=0;int a=0;bool Z=true;double W=double.MaxValue;int Y=0;
public override bool Ʉ(bool ë){ŵ Ě;if(!ë&amp;&amp;(k.Ē==false||k.Ĕ==null||k.Ĕ.Count&lt;=0))return true;if(k.ē.Ġ&gt;3)return Ɉ(0);if(!ë){a=0;
Z=false;W=double.MaxValue;Y=0;}if(Y==0){while(a&lt;k.Ĕ.Count){if(!Ɠ.Ȝ(5))return false;if(k.ĕ.TryGetValue(k.Ĕ[a],out Ě)){if(!
Ě.ɋ)return Ɉ(Ě.ɑ-Ɠ.ȏ+0.001);if(Ě.ɐ&gt;f)Z=true;if(Ě.ɑ&lt;W)W=Ě.ɑ;}a++;}Y++;ë=false;}double ę=W-Ɠ.ȏ+0.001;if(!Z&amp;&amp;!n.Þ())return Ɉ
(ę);o.Ǐ(n.æ,n);if(Z){if(!ë){f=Ɠ.ȏ;n.æ.Ŧ();b=0;}while(b&lt;k.Ĕ.Count){if(!Ɠ.Ȝ(7))return false;if(!k.ĕ.TryGetValue(k.Ĕ[b],out
Ě)){n.æ.ŗ.Add(o.ǈ(null,n));o.Ƭ();o.Ǎ("ERR: No cmd task ("+k.Ĕ[b]+")");b++;continue;}n.æ.Ť(Ě.ĸ);b++;}}o.Ǒ(n);k.ē.Ġ++;if(Ɏ&lt;
ę&amp;&amp;!n.Þ())return Ɉ(ę);return true;}}class Ę:ɓ{public ɖ o;public è E;public v ė=null;string Ė="N/A";public Dictionary&lt;
string,ŵ&gt;ĕ=new Dictionary&lt;string,ŵ&gt;();public List&lt;string&gt;Ĕ=null;public Ģ ē;public bool Ē{get{return ē.Ć;}}public Ę(Ģ đ,è ď){Ɏ=
5;E=ď;ē=đ;o=đ.o;ɒ="PanelProcess";}ǒ Ď;public override void Ʌ(){Ď=o.Ď;}ʤ č=null;ŵ Č(string ċ,bool ë){if(!ë)č=new ʤ(Ɠ);if(!
č.ʻ(ċ,ë))return null;ŵ Ċ=č.ˌ();Ċ.ƙ(this,č);Ɠ.Ȉ(Ċ,0);return Ċ;}string ĉ="";void Ĉ(){try{ĉ=E.å.ǧ(E.ã,o.ɧ);}catch{ĉ="";
return;}ĉ=ĉ?.Replace("\\\n","");}int b=0;int Đ=0;List&lt;string&gt;ě=null;HashSet&lt;string&gt;Ĥ=new HashSet&lt;string&gt;();int ĭ=0;bool ī(bool
ë){if(!ë){char[]Ī={';','\n'};string ĩ=ĉ.Replace("\\;","\f");if(ĩ.StartsWith("@")){int Ĩ=ĩ.IndexOf("\n");if(Ĩ&lt;0){ĩ="";}
else{ĩ=ĩ.Substring(Ĩ+1);}}ě=new List&lt;string&gt;(ĩ.Split(Ī,StringSplitOptions.RemoveEmptyEntries));Ĥ.Clear();b=0;Đ=0;ĭ=0;}while(
b&lt;ě.Count){if(!Ɠ.Ȝ(500))return false;if(ě[b].StartsWith("//")){ě.RemoveAt(b);continue;}ě[b]=ě[b].Replace('\f',';');if(!ĕ.
ContainsKey(ě[b])){if(ĭ!=1)ë=false;ĭ=1;ŵ Ě=Č(ě[b],ë);if(Ě==null)return false;ë=false;ĕ.Add(ě[b],Ě);ĭ=0;}if(!Ĥ.Contains(ě[b]))Ĥ.Add(
ě[b]);b++;}if(Ĕ!=null){ŵ Ċ;while(Đ&lt;Ĕ.Count){if(!Ɠ.Ȝ(7))return false;if(!Ĥ.Contains(Ĕ[Đ]))if(ĕ.TryGetValue(Ĕ[Đ],out Ċ)){Ċ.
Ɇ();ĕ.Remove(Ĕ[Đ]);}Đ++;}}Ĕ=ě;return true;}public override void Ƀ(){if(Ĕ!=null){ŵ Ċ;for(int ħ=0;ħ&lt;Ĕ.Count;ħ++){if(ĕ.
TryGetValue(Ĕ[ħ],out Ċ))Ċ.Ɇ();}Ĕ=null;}if(ė!=null){ė.Ɇ();ė=null;}else{}}ŝ Ħ=null;string Ĭ="";bool ĥ=false;public override bool Ʉ(
bool ë){if(E.Ý&lt;=0){Ɇ();return true;}if(!ë){E.æ=o.Ǐ(E.æ,E);Ħ=o.Ǐ(Ħ,E);Ĉ();if(ĉ==null){if(E.Ü){ē.ò(E.ä,E.å as IMyTextPanel);}
else{Ɇ();}return true;}if(E.å.CustomName!=Ĭ){ĥ=true;}else{ĥ=false;}Ĭ=E.å.CustomName;}if(ĉ!=Ė){if(!ī(ë))return false;if(ĉ==""
){Ė="";if(ē.Ć){if(Ħ.ŗ.Count&lt;=0)Ħ.ŗ.Add(o.ǈ(null,E));else o.ǈ(Ħ.ŗ[0],E);o.Ƭ();o.Ǎ(Ď.ǡ("H1"));bool ģ=E.é;E.é=false;o.Ǒ(E,Ħ)
;E.é=ģ;return true;}return this.Ɉ(2);}ĥ=true;}Ė=ĉ;if(ė!=null&amp;&amp;ĥ){Ɠ.Ȩ(ė);ė.e();Ɠ.Ȉ(ė,0);}else if(ė==null){ė=new v(this);Ɠ.
Ȉ(ė,0);}return true;}}class Ģ:ɓ{const string ġ="T:!LCD!";public int Ġ=0;public ɖ o;public û ç=new û();β ğ;β Ğ;Dictionary&lt;
è,Ę&gt;ĝ=new Dictionary&lt;è,Ę&gt;();public Dictionary&lt;IMyTextSurface,è&gt;Ĝ=new Dictionary&lt;IMyTextSurface,è&gt;();public bool Ć=false;Ϙ
ù=null;public Ģ(ɖ Û){Ɏ=5;o=Û;ɒ="ProcessPanels";}public override void Ʌ(){ğ=new β(Ɠ,o.ő);Ğ=new β(Ɠ,o.ő);ù=new Ϙ(o,this);}
int ö=0;bool õ(bool ë){if(!ë)ö=0;if(ö==0){if(!ğ.μ(o.ɧ,ë))return false;ö++;ë=false;}if(ö==1){if(o.ɧ=="T:[LCD]"&amp;&amp;ġ!="")if(!ğ.
μ(ġ,ë))return false;ö++;ë=false;}return true;}string ô(IMyTerminalBlock å){int ó=å.CustomName.IndexOf("!LINK:");if(ó&gt;=0&amp;&amp;
å.CustomName.Length&gt;ó+6){return å.CustomName.Substring(ó+6)+' '+å.Position.ToString();}return å.EntityId.ToString();}
public void ò(IMyTextSurface G,IMyTextPanel E){è n;if(G==null)return;if(!Ĝ.TryGetValue(G,out n))return;if(E!=null){n.ç.Á(E);}Ĝ
.Remove(G);if(n.Ý&lt;=0||n.Ü){Ę ñ;if(ĝ.TryGetValue(n,out ñ)){ç.Á(n.à);ĝ.Remove(n);ñ.Ɇ();}}}void ð(IMyTerminalBlock å){
IMyTextSurfaceProvider ï=å as IMyTextSurfaceProvider;IMyTextSurface G=å as IMyTextSurface;if(G!=null){ò(G,å as IMyTextPanel);return;}if(ï==
null)return;for(int F=0;F&lt;ï.SurfaceCount;F++){G=ï.GetSurface(F);ò(G,null);}}string Ú;string î;bool í;int ì=0;int ø=0;public
override bool Ʉ(bool ë){if(!ë){ğ.Ŧ();ì=0;ø=0;}if(!õ(ë))return false;while(ì&lt;ğ.ϲ()){if(!Ɠ.Ȝ(20))return false;IMyTerminalBlock å=(
ğ.ί[ì]as IMyTerminalBlock);if(å==null||!å.IsWorking){ğ.ί.RemoveAt(ì);continue;}IMyTextSurfaceProvider ï=å as
IMyTextSurfaceProvider;IMyTextSurface G=å as IMyTextSurface;IMyTextPanel E=å as IMyTextPanel;è n;Ú=ô(å);string[]Ą=Ú.Split(' ');î=Ą[0];í=Ą.
Length&gt;1;if(E!=null){if(Ĝ.ContainsKey(G)){n=Ĝ[G];if(n.à==Ú+"@0"||(í&amp;&amp;n.à==î)){ì++;continue;}ð(å);}if(!í){n=new è(o,Ú+"@0",å,G,
0);Ę ñ=new Ę(this,n);Ɠ.Ȉ(ñ,0);ĝ.Add(n,ñ);ç.A(n.à,n);Ĝ.Add(G,n);ì++;continue;}n=ç.µ(î);if(n==null){n=new è(o,î);ç.A(î,n);Ę
ñ=new Ę(this,n);Ɠ.Ȉ(ñ,0);ĝ.Add(n,ñ);}n.ç.A(Ú,å);Ĝ.Add(G,n);}else{if(ï==null){ì++;continue;}for(int F=0;F&lt;ï.SurfaceCount;F
++){G=ï.GetSurface(F);if(Ĝ.ContainsKey(G)){n=Ĝ[G];if(n.à==Ú+'@'+F.ToString()){continue;}ò(G,null);}if(å.ǧ(F,o.ɧ)==null)
continue;n=new è(o,Ú+"@"+F.ToString(),å,G,F);Ę ñ=new Ę(this,n);Ɠ.Ȉ(ñ,0);ĝ.Add(n,ñ);ç.A(n.à,n);Ĝ.Add(G,n);}}ì++;}while(ø&lt;Ğ.ϲ()){
if(!Ɠ.Ȝ(300))return false;IMyTerminalBlock å=Ğ.ί[ø];if(å==null)continue;if(!ğ.ί.Contains(å)){ð(å);}ø++;}Ğ.Ŧ();Ğ.ϴ(ğ);if(!ù
.Ɍ&amp;&amp;ù.ϫ())Ɠ.Ȉ(ù,0);return true;}public bool ă(string ą){if(string.Compare(ą,"clear",true)==0){ù.ϖ();if(!ù.Ɍ)Ɠ.Ȉ(ù,0);
return true;}if(string.Compare(ą,"boot",true)==0){ù.ϗ=0;if(!ù.Ɍ)Ɠ.Ȉ(ù,0);return true;}if(ą.ǭ("scroll")){ζ Ă=new ζ(o,this,ą);Ɠ.
Ȉ(Ă,0);return true;}if(string.Compare(ą,"props",true)==0){ϵ ā=o.ő;List&lt;IMyTerminalBlock&gt;Ā=new List&lt;IMyTerminalBlock&gt;();
List&lt;ITerminalAction&gt;ÿ=new List&lt;ITerminalAction&gt;();List&lt;ITerminalProperty&gt;þ=new List&lt;ITerminalProperty&gt;();IMyTextPanel ý=Ɠ.ǂ
.GridTerminalSystem.GetBlockWithName("DEBUG")as IMyTextPanel;if(ý==null){return true;}ý.WriteText("Properties: ");foreach
(var À in ā.І){ý.WriteText(À.Key+" =============="+"\n",true);À.Value(Ā,null);if(Ā.Count&lt;=0){ý.WriteText("No blocks\n",
true);continue;}Ā[0].GetProperties(þ,(n)=&gt;{return n.Id!="Name"&amp;&amp;n.Id!="OnOff"&amp;&amp;!n.Id.StartsWith("Show");});foreach(var ü in
þ){ý.WriteText("P "+ü.Id+" "+ü.TypeName+"\n",true);}þ.Clear();Ā.Clear();}}return false;}}class û{Dictionary&lt;string,è&gt;ú=
new Dictionary&lt;string,è&gt;();List&lt;string&gt;V=new List&lt;string&gt;();public void A(string X,è À){if(!ú.ContainsKey(X)){V.Add(X);ú.
Add(X,À);}}public int º(){return ú.Count;}public è µ(string X){if(ú.ContainsKey(X))return ú[X];return null;}public è ª(int
z){return ú[V[z]];}public void Á(string X){ú.Remove(X);V.Remove(X);}public void w(){V.Clear();ú.Clear();}public void Ã(){
V.Sort();}}class ȳ{ȓ Ɠ;ɖ o;public MyDefinitionId ȱ=new MyDefinitionId(typeof(VRage.Game.ObjectBuilders.Definitions.
MyObjectBuilder_GasProperties),"Electricity");public MyDefinitionId Ȱ=new MyDefinitionId(typeof(VRage.Game.ObjectBuilders.Definitions.
MyObjectBuilder_GasProperties),"Oxygen");public MyDefinitionId ȯ=new MyDefinitionId(typeof(VRage.Game.ObjectBuilders.Definitions.
MyObjectBuilder_GasProperties),"Hydrogen");public ȳ(ȓ ƕ,ɖ Û){Ɠ=ƕ;o=Û;}int Ȯ=0;public bool ȭ(List&lt;IMyTerminalBlock&gt;Ā,ref double Ȭ,ref double Ȳ,ref
double ȴ,ref double Ȼ,ref double Ɂ,ref double ɀ,bool ë){if(!ë)Ȯ=0;MyResourceSinkComponent Ȫ;MyResourceSourceComponent Ⱥ;for(;Ȯ
&lt;Ā.Count;Ȯ++){if(!Ɠ.Ȝ(8))return false;if(Ā[Ȯ].Components.TryGet&lt;MyResourceSinkComponent&gt;(out Ȫ)){Ȭ+=Ȫ.CurrentInputByType(
ȱ);Ȳ+=Ȫ.MaxRequiredInputByType(ȱ);}if(Ā[Ȯ].Components.TryGet&lt;MyResourceSourceComponent&gt;(out Ⱥ)){ȴ+=Ⱥ.CurrentOutputByType(
ȱ);Ȼ+=Ⱥ.MaxOutputByType(ȱ);}IMyBatteryBlock ȿ=(Ā[Ȯ]as IMyBatteryBlock);Ɂ+=ȿ.CurrentStoredPower;ɀ+=ȿ.MaxStoredPower;}
return true;}int Ⱦ=0;public bool Ƚ(List&lt;IMyTerminalBlock&gt;Ā,MyDefinitionId ȼ,ref double Ȭ,ref double Ȳ,ref double ȴ,ref double
Ȼ,bool ë){if(!ë)Ⱦ=0;MyResourceSinkComponent Ȫ;MyResourceSourceComponent Ⱥ;for(;Ⱦ&lt;Ā.Count;Ⱦ++){if(!Ɠ.Ȝ(6))return false;if(
Ā[Ⱦ].Components.TryGet&lt;MyResourceSinkComponent&gt;(out Ȫ)){Ȭ+=Ȫ.CurrentInputByType(ȼ);Ȳ+=Ȫ.MaxRequiredInputByType(ȼ);}if(Ā[Ⱦ
].Components.TryGet&lt;MyResourceSourceComponent&gt;(out Ⱥ)){ȴ+=Ⱥ.CurrentOutputByType(ȼ);Ȼ+=Ⱥ.MaxOutputByType(ȼ);}}return true;
}int ȹ=0;public bool ȸ(List&lt;IMyTerminalBlock&gt;Ā,string ȷ,ref double ȶ,ref double ȵ,bool ë){if(!ë){ȹ=0;ȵ=0;ȶ=0;}
MyResourceSinkComponent Ȫ;for(;ȹ&lt;Ā.Count;ȹ++){if(!Ɠ.Ȝ(30))return false;IMyGasTank Ŏ=Ā[ȹ]as IMyGasTank;if(Ŏ==null)continue;double ȡ=0;if(Ŏ.
Components.TryGet&lt;MyResourceSinkComponent&gt;(out Ȫ)){ListReader&lt;MyDefinitionId&gt;Ȗ=Ȫ.AcceptedResources;int F=0;for(;F&lt;Ȗ.Count;F++){if(
string.Compare(Ȗ[F].SubtypeId.ToString(),ȷ,true)==0){ȡ=Ŏ.Capacity;ȵ+=ȡ;ȶ+=ȡ*Ŏ.FilledRatio;break;}}}}return true;}public string
ȕ(TimeSpan Ȕ){string ĸ="";if(Ȕ.Ticks&lt;=0)return"-";if((int)Ȕ.TotalDays&gt;0)ĸ+=(long)Ȕ.TotalDays+" "+o.Ď.ǡ("C5")+" ";if(Ȕ.
Hours&gt;0||ĸ!="")ĸ+=Ȕ.Hours+"h ";if(Ȕ.Minutes&gt;0||ĸ!="")ĸ+=Ȕ.Minutes+"m ";return ĸ+Ȕ.Seconds+"s";}}class ȓ{public const double Ȓ
=0.05;public const int ȑ=1000;public const int Ȑ=10000;public double ȏ{get{return ȍ;}}int Ȏ=ȑ;double ȍ=0;List&lt;ɓ&gt;Ȍ=new
List&lt;ɓ&gt;(100);public MyGridProgram ǂ;public bool ȋ=false;int Ȋ=0;public ȓ(MyGridProgram Ƽ,int ƻ=1,bool ȉ=false){ǂ=Ƽ;Ȋ=ƻ;ȋ=ȉ;}
public void Ȉ(ɓ ñ,double ȇ,bool ȗ=false){ñ.Ɍ=true;ñ.ɉ(this);if(ȗ){ñ.ɑ=ȏ;Ȍ.Insert(0,ñ);return;}if(ȇ&lt;=0)ȇ=0.001;ñ.ɑ=ȏ+ȇ;for(int
F=0;F&lt;Ȍ.Count;F++){if(Ȍ[F].ɑ&gt;ñ.ɑ){Ȍ.Insert(F,ñ);return;}if(ñ.ɑ-Ȍ[F].ɑ&lt;Ȓ)ñ.ɑ=Ȍ[F].ɑ+Ȓ;}Ȍ.Add(ñ);}public void Ȩ(ɓ ñ){if(Ȍ.
Contains(ñ)){Ȍ.Remove(ñ);ñ.Ɍ=false;}}public void Ȧ(ʌ ȧ,int Ȥ=1){if(Ȋ==Ȥ)ǂ.Echo(ȧ.ɕ());}public void Ȧ(string ȥ,int Ȥ=1){if(Ȋ==Ȥ)ǂ
.Echo(ȥ);}const double ȣ=(16.66666666/16);double Ȣ=0;public void ȩ(){Ȣ+=ǂ.Runtime.TimeSinceLastRun.TotalSeconds*ȣ;}ʌ ƫ=
new ʌ();public void Ƞ(){double ȟ=ǂ.Runtime.TimeSinceLastRun.TotalSeconds*ȣ+Ȣ;Ȣ=0;ȍ+=ȟ;Ȏ=(int)Math.Min((ȟ*60)*ȑ/(ȋ?5:1),Ȑ-
1000);while(Ȍ.Count&gt;=1){ɓ ñ=Ȍ[0];if(Ȏ-ǂ.Runtime.CurrentInstructionCount&lt;=0)break;if(ñ.ɑ&gt;ȍ){int Ȟ=(int)(60*(ñ.ɑ-ȍ));if(Ȟ&gt;=100
){ǂ.Runtime.UpdateFrequency=UpdateFrequency.Update100;}else{if(Ȟ&gt;=10||ȋ)ǂ.Runtime.UpdateFrequency=UpdateFrequency.
Update10;else ǂ.Runtime.UpdateFrequency=UpdateFrequency.Update1;}break;}Ȍ.Remove(ñ);if(!ñ.ɇ())break;}}public int ȝ(){return(Ȑ-ǂ.
Runtime.CurrentInstructionCount);}public bool Ȝ(int ț){return((Ȏ-ǂ.Runtime.CurrentInstructionCount)&gt;=ț);}public void Ț(){Ȧ(ƫ.Ŧ(
).ʆ("Remaining Instr: ").ʆ(ȝ()));}}class ș:ɓ{MyShipVelocities Ș;public Vector3D ȫ{get{return Ș.LinearVelocity;}}public
Vector3D ɂ{get{return Ș.AngularVelocity;}}double ɮ=0;public double ʃ{get{if(ɴ!=null)return ɴ.GetShipSpeed();else return ɮ;}}
double ʁ=0;public double ʀ{get{return ʁ;}}double ɿ=0;public double ɾ{get{return ɿ;}}double ɽ=0;double ɼ=0;public double ɻ{get{
return ɽ;}}MyShipMass ɺ;public double ɹ{get{return ɺ.TotalMass;}}public double ɸ{get{return ɺ.BaseMass;}}double ʂ=double.NaN;
public double ɷ{get{return ʂ;}}double ɶ=double.NaN;public double ɵ{get{return ɶ;}}IMyShipController ɴ=null;IMySlimBlock ɳ=null
;public IMyShipController ɲ{get{return ɴ;}}Vector3D ɱ;public ș(ȓ ƕ){ɒ="ShipMgr";Ɠ=ƕ;ɱ=Ɠ.ǂ.Me.GetPosition();Ɏ=0.5;}List&lt;
IMyTerminalBlock&gt;ɰ=new List&lt;IMyTerminalBlock&gt;();int ɯ=0;public override bool Ʉ(bool ë){if(!ë){ɰ.Clear();Ɠ.ǂ.GridTerminalSystem.
GetBlocksOfType&lt;IMyShipController&gt;(ɰ);ɯ=0;if(ɴ!=null&amp;&amp;ɴ.CubeGrid.GetCubeBlock(ɴ.Position)!=ɳ)ɴ=null;}if(ɰ.Count&gt;0){for(;ɯ&lt;ɰ.Count;ɯ++){
if(!Ɠ.Ȝ(20))return false;IMyShipController ʄ=ɰ[ɯ]as IMyShipController;if(ʄ.IsMainCockpit||ʄ.IsUnderControl){ɴ=ʄ;ɳ=ʄ.
CubeGrid.GetCubeBlock(ʄ.Position);if(ʄ.IsMainCockpit){ɯ=ɰ.Count;break;}}}if(ɴ==null){ɴ=ɰ[0]as IMyShipController;ɳ=ɴ.CubeGrid.
GetCubeBlock(ɴ.Position);}ɺ=ɴ.CalculateShipMass();if(!ɴ.TryGetPlanetElevation(MyPlanetElevation.Sealevel,out ʂ))ʂ=double.NaN;if(!ɴ.
TryGetPlanetElevation(MyPlanetElevation.Surface,out ɶ))ɶ=double.NaN;Ș=ɴ.GetShipVelocities();}double ʈ=ɮ;ɮ=ȫ.Length();ʁ=(ɮ-ʈ)/ɏ;if(-ʁ&gt;ɿ)ɿ=-ʁ;
if(-ʁ&gt;ɽ){ɽ=-ʁ;ɼ=Ɠ.ȏ;}if(Ɠ.ȏ-ɼ&gt;5&amp;&amp;-ʁ&gt;0.1)ɽ-=(ɽ+ʁ)*0.3f;return true;}}class ʌ{public StringBuilder ƫ;public ʌ(int ʋ=0){ƫ=new
StringBuilder(ʋ);}public int ʊ{get{return ƫ.Length;}}public ʌ Ŧ(){ƫ.Clear();return this;}public ʌ ʆ(string ĩ){ƫ.Append(ĩ);return this
;}public ʌ ʆ(double ʉ){ƫ.Append(ʉ);return this;}public ʌ ʆ(char ǰ){ƫ.Append(ǰ);return this;}public ʌ ʆ(ʌ ʇ){ƫ.Append(ʇ.ƫ)
;return this;}public ʌ ʆ(string ĩ,int Ǿ,int ɔ){ƫ.Append(ĩ,Ǿ,ɔ);return this;}public ʌ ʆ(char ǰ,int Š){ƫ.Append(ǰ,Š);return
this;}public ʌ ʅ(int Ǿ,int ɔ){ƫ.Remove(Ǿ,ɔ);return this;}public string ɕ(){return ƫ.ToString();}public string ɕ(int Ǿ,int ɔ)
{return ƫ.ToString(Ǿ,ɔ);}public char this[int X]{get{return ƫ[X];}}}class ɓ{public string ɒ="MMTask";public double ɑ=0;
public double ɐ=0;public double ɏ=0;public double Ɏ=-1;double ɍ=-1;public bool Ɍ=false;public bool ɋ=false;double Ɋ=0;
protected ȓ Ɠ;public void ɉ(ȓ ƕ){Ɠ=ƕ;if(Ɠ.ȋ){if(ɍ==-1){ɍ=Ɏ;Ɏ*=2;}else{Ɏ=ɍ*2;}}else{if(ɍ!=-1){Ɏ=ɍ;ɍ=-1;}}}protected bool Ɉ(double
ȇ){Ɋ=Math.Max(ȇ,0.0001);return true;}public bool ɇ(){if(ɐ&gt;0){ɏ=Ɠ.ȏ-ɐ;Ɠ.Ȧ((ɋ?"Running":"Resuming")+" task: "+ɒ);ɋ=Ʉ(!ɋ);}
else{ɏ=0;Ɠ.Ȧ("Init task: "+ɒ);Ʌ();Ɠ.Ȧ("Running..");ɋ=Ʉ(false);if(!ɋ)ɐ=0.001;}if(ɋ){ɐ=Ɠ.ȏ;if((Ɏ&gt;=0||Ɋ&gt;0)&amp;&amp;Ɍ)Ɠ.Ȉ(this,(Ɋ&gt;0?Ɋ:Ɏ
));else{Ɍ=false;ɐ=0;}}else{if(Ɍ)Ɠ.Ȉ(this,0,true);}Ɠ.Ȧ("Task "+(ɋ?"":"NOT ")+"finished. "+(Ɍ?(Ɋ&gt;0?"Postponed by "+Ɋ.
ToString("F1")+"s":"Scheduled after "+Ɏ.ToString("F1")+"s"):"Stopped."));Ɋ=0;return ɋ;}public void Ɇ(){Ɠ.Ȩ(this);Ƀ();Ɍ=false;ɋ=
false;ɐ=0;}public virtual void Ʌ(){}public virtual bool Ʉ(bool ë){return true;}public virtual void Ƀ(){}}class ɖ{public const
float ɭ=512;public const float ɫ=ɭ/0.7783784f;public const float ɪ=ɭ/0.7783784f;public const float ɩ=ɫ;public const float ɨ=
37;public string ɧ="T:[LCD]";public int ɦ=1;public bool ɥ=true;public List&lt;string&gt;ɤ=null;public bool ɣ=true;public int Ȋ=0
;public float ɬ=1.0f;public float ɢ=1.0f;public float ɡ{get{return ɩ*ƺ.і;}}public float ɠ{get{return(float)ɡ-2*ɘ[ƹ]*â;}}
string ɟ;string ɞ;float ɝ=-1;Dictionary&lt;string,float&gt;ɜ=new Dictionary&lt;string,float&gt;(2);Dictionary&lt;string,float&gt;ɛ=new
Dictionary&lt;string,float&gt;(2);Dictionary&lt;string,float&gt;ɚ=new Dictionary&lt;string,float&gt;(2);public float ə{get{return ɚ[ƹ];}}Dictionary&lt;
string,float&gt;ɘ=new Dictionary&lt;string,float&gt;(2);Dictionary&lt;string,float&gt;ɗ=new Dictionary&lt;string,float&gt;(2);Dictionary&lt;string,
float&gt;Ȇ=new Dictionary&lt;string,float&gt;(2);int â=0;string á="";Dictionary&lt;string,char&gt;ǆ=new Dictionary&lt;string,char&gt;(2);
Dictionary&lt;string,char&gt;ǅ=new Dictionary&lt;string,char&gt;(2);Dictionary&lt;string,char&gt;Ǆ=new Dictionary&lt;string,char&gt;(2);Dictionary&lt;string,
char&gt;ǃ=new Dictionary&lt;string,char&gt;(2);public ȓ Ɠ;public MyGridProgram ǂ;public ȳ ǁ;public ϵ ő;public ș ǀ;public Ƈ Ə;public ǒ
Ď;public IMyGridTerminalSystem ƿ{get{return ǂ.GridTerminalSystem;}}public IMyProgrammableBlock ƾ{get{return ǂ.Me;}}public
Action&lt;string&gt;ƽ{get{return ǂ.Echo;}}public ɖ(MyGridProgram Ƽ,int ƻ,ȓ ƕ){Ɠ=ƕ;Ȋ=ƻ;ǂ=Ƽ;Ď=new ǒ();ǁ=new ȳ(ƕ,this);ő=new ϵ(ƕ,this);
ő.Ѕ();ǀ=new ș(Ɠ);Ɠ.Ȉ(ǀ,0);}ї ƺ=null;public string ƹ{get{return ƺ.J;}}public bool Ƹ{get{return(ƺ.ť()==0);}}public bool Ǉ(
IMyTerminalBlock å){if(å==null||å.WorldMatrix==MatrixD.Identity)return true;return ƿ.GetBlockWithId(å.EntityId)==null;}public ї ǈ(ї ǐ,è
n){n.R();IMyTextSurface G=n.ß;if(ǐ==null)ǐ=new ї(this);ǐ.J=G.Font;if(!ɘ.ContainsKey(ǐ.J))ǐ.J=ɟ;ǐ.і=(G.SurfaceSize.X/G.
TextureSize.X)*(G.TextureSize.X/G.TextureSize.Y)*ɬ/G.FontSize*(100f-G.TextPadding*2)/100;á=n.á;â=n.â;ƺ=ǐ;return ǐ;}public ŝ Ǐ(ŝ æ,è
n){n.R();IMyTextSurface G=n.ß;if(æ==null)æ=new ŝ(this);æ.ŕ(n.Ý);æ.Ŝ=n.U()*(G.SurfaceSize.Y/G.TextureSize.Y)*ɢ/G.FontSize*
(100f-G.TextPadding*2)/100;æ.Ŕ();á=n.á;â=n.â;return æ;}public void Ǎ(){ƺ.ѓ();}public void Ǎ(ʌ ǎ){if(ƺ.ѕ&lt;=0)ƺ.є(á);ƺ.є(ǎ);
ƺ.ѓ();}public void Ǎ(string ǎ){if(ƺ.ѕ&lt;=0)ƺ.є(á);ƺ.ѓ(ǎ);}public void ǌ(string ǋ){ƺ.ѐ(ǋ,á);}public void Ǌ(List&lt;ʌ&gt;ǉ){ƺ.ђ(ǉ);
}public void ƃ(ʌ ƪ,bool Ƴ=true){if(ƺ.ѕ&lt;=0)ƺ.є(á);ƺ.є(ƪ);if(Ƴ)ƺ.ѕ+=Ǟ(ƪ,ƺ.J);}public void ƃ(string ĸ,bool Ƴ=true){if(ƺ.ѕ&lt;=0
)ƺ.є(á);ƺ.є(ĸ);if(Ƴ)ƺ.ѕ+=Ǟ(ĸ,ƺ.J);}public void ƴ(ʌ ƪ,float ƨ=1.0f,float Ƨ=0f){Ʃ(ƪ,ƨ,Ƨ);ƺ.ѓ();}public void ƴ(string ĸ,
float ƨ=1.0f,float Ƨ=0f){Ʃ(ĸ,ƨ,Ƨ);ƺ.ѓ();}ʌ ƫ=new ʌ();public void Ʃ(ʌ ƪ,float ƨ=1.0f,float Ƨ=0f){float Ʀ=Ǟ(ƪ,ƺ.J);float ƥ=ƨ*ɩ*
ƺ.і-ƺ.ѕ-Ƨ;if(â&gt;0)ƥ-=2*ɘ[ƺ.J]*â;if(ƥ&lt;Ʀ){ƺ.є(ƪ);ƺ.ѕ+=Ʀ;return;}ƥ-=Ʀ;int Ƥ=(int)Math.Floor(ƥ/ɘ[ƺ.J]);float ƣ=Ƥ*ɘ[ƺ.J];ƫ.Ŧ().
ʆ(' ',Ƥ).ʆ(ƪ);ƺ.є(ƫ);ƺ.ѕ+=ƣ+Ʀ;}public void Ʃ(string ĸ,float ƨ=1.0f,float Ƨ=0f){float Ʀ=Ǟ(ĸ,ƺ.J);float ƥ=ƨ*ɩ*ƺ.і-ƺ.ѕ-Ƨ;if(
â&gt;0)ƥ-=2*ɘ[ƺ.J]*â;if(ƥ&lt;Ʀ){ƺ.є(ĸ);ƺ.ѕ+=Ʀ;return;}ƥ-=Ʀ;int Ƥ=(int)Math.Floor(ƥ/ɘ[ƺ.J]);float ƣ=Ƥ*ɘ[ƺ.J];ƫ.Ŧ().ʆ(' ',Ƥ).ʆ(ĸ)
;ƺ.є(ƫ);ƺ.ѕ+=ƣ+Ʀ;}public void Ƣ(ʌ ƪ){Ʒ(ƪ);ƺ.ѓ();}public void Ƣ(string ĸ){Ʒ(ĸ);ƺ.ѓ();}public void Ʒ(ʌ ƪ){float Ʀ=Ǟ(ƪ,ƺ.J);
float ƶ=ɩ/2*ƺ.і-ƺ.ѕ;if(ƶ&lt;Ʀ/2){ƺ.є(ƪ);ƺ.ѕ+=Ʀ;return;}ƶ-=Ʀ/2;int Ƥ=(int)Math.Round(ƶ/ɘ[ƺ.J],MidpointRounding.AwayFromZero);
float ƣ=Ƥ*ɘ[ƺ.J];ƫ.Ŧ().ʆ(' ',Ƥ).ʆ(ƪ);ƺ.є(ƫ);ƺ.ѕ+=ƣ+Ʀ;}public void Ʒ(string ĸ){float Ʀ=Ǟ(ĸ,ƺ.J);float ƶ=ɩ/2*ƺ.і-ƺ.ѕ;if(ƶ&lt;Ʀ/2){
ƺ.є(ĸ);ƺ.ѕ+=Ʀ;return;}ƶ-=Ʀ/2;int Ƥ=(int)Math.Round(ƶ/ɘ[ƺ.J],MidpointRounding.AwayFromZero);float ƣ=Ƥ*ɘ[ƺ.J];ƫ.Ŧ().ʆ(' ',Ƥ
).ʆ(ĸ);ƺ.є(ƫ);ƺ.ѕ+=ƣ+Ʀ;}public void Ƶ(double Ʈ,float ƭ=1.0f,float Ƨ=0f,bool Ƴ=true){if(â&gt;0)Ƨ+=2*â*ɘ[ƺ.J];float Ʋ=ɩ*ƭ*ƺ.і-
ƺ.ѕ-Ƨ;if(Double.IsNaN(Ʈ))Ʈ=0;int Ʊ=(int)(Ʋ/ɗ[ƺ.J])-2;if(Ʊ&lt;=0)Ʊ=2;int ư=Math.Min((int)(Ʈ*Ʊ)/100,Ʊ);if(ư&lt;0)ư=0;if(ƺ.ѕ&lt;=0)ƺ.
є(á);ƫ.Ŧ().ʆ(ǆ[ƺ.J]).ʆ(ǃ[ƺ.J],ư).ʆ(Ǆ[ƺ.J],Ʊ-ư).ʆ(ǅ[ƺ.J]);ƺ.є(ƫ);if(Ƴ)ƺ.ѕ+=ɗ[ƺ.J]*Ʊ+2*Ȇ[ƺ.J];}public void Ư(double Ʈ,float
ƭ=1.0f,float Ƨ=0f){Ƶ(Ʈ,ƭ,Ƨ,false);ƺ.ѓ();}public void Ƭ(){ƺ.Ƭ();}public void Ǒ(è E,ŝ L=null){E.N(L);if(E.é)E.æ.ĺ();}public
void Ƿ(string Ƕ,string ĸ){IMyTextPanel E=ǂ.GridTerminalSystem.GetBlockWithName(Ƕ)as IMyTextPanel;if(E==null)return;E.
WriteText(ĸ+"\n",true);}public string ǵ(MyInventoryItem À){string Ǵ=À.Type.TypeId.ToString();Ǵ=Ǵ.Substring(Ǵ.LastIndexOf('_')+1);
return À.Type.SubtypeId+" "+Ǵ;}public void ǳ(string Ò,out string Ð,out string Ï){int š=Ò.LastIndexOf(' ');if(š&gt;=0){Ð=Ò.
Substring(0,š);Ï=Ò.Substring(š+1);return;}Ð=Ò;Ï="";}public string ǲ(string Ò){string Ð,Ï;ǳ(Ò,out Ð,out Ï);return ǲ(Ð,Ï);}public
string ǲ(string Ð,string Ï){Î À=Ə.Ñ(Ð,Ï);if(À!=null){if(À.Ê.Length&gt;0)return À.Ê;return À.Í;}return System.Text.
RegularExpressions.Regex.Replace(Ð,"([a-z])([A-Z])","$1 $2");}public void Ǳ(ref string Ð,ref string Ï){Î À;if(Ə.Ƅ.TryGetValue(Ð,out À)){Ð=
À.Í;Ï=À.Ì;return;}À=Ə.Ñ(Ð,Ï);if(À!=null){Ð=À.Í;if((string.Compare(Ï,"Ore",true)==0)||(string.Compare(Ï,"Ingot",true)==0))
return;Ï=À.Ì;}}public string ȅ(double Ȃ,bool ȁ=true,char Ȅ=' '){if(!ȁ)return Ȃ.ToString(
"#,###,###,###,###,###,###,###,###,###");string Ȁ=" kMGTPEZY";double ǿ=Ȃ;int Ǿ=Ȁ.IndexOf(Ȅ);var ǽ=(Ǿ&lt;0?0:Ǿ);while(ǿ&gt;=1000&amp;&amp;ǽ+1&lt;Ȁ.Length){ǿ/=1000;ǽ++;}ƫ.Ŧ().ʆ(
Math.Round(ǿ,1,MidpointRounding.AwayFromZero));if(ǽ&gt;0)ƫ.ʆ(" ").ʆ(Ȁ[ǽ]);return ƫ.ɕ();}public string ȃ(double Ȃ,bool ȁ=true,
char Ȅ=' '){if(!ȁ)return Ȃ.ToString("#,###,###,###,###,###,###,###,###,###");string Ȁ=" ktkMGTPEZY";double ǿ=Ȃ;int Ǿ=Ȁ.
IndexOf(Ȅ);var ǽ=(Ǿ&lt;0?0:Ǿ);while(ǿ&gt;=1000&amp;&amp;ǽ+1&lt;Ȁ.Length){ǿ/=1000;ǽ++;}ƫ.Ŧ().ʆ(Math.Round(ǿ,1,MidpointRounding.AwayFromZero));if(
ǽ==1)ƫ.ʆ(" kg");else if(ǽ==2)ƫ.ʆ(" t");else if(ǽ&gt;2)ƫ.ʆ(" ").ʆ(Ȁ[ǽ]).ʆ("t");return ƫ.ɕ();}public string Ǽ(double Ʈ){return
(Math.Floor(Ʈ*10)/10).ToString("F1");}Dictionary&lt;char,float&gt;ǻ=new Dictionary&lt;char,float&gt;();void Ǻ(string ǹ,float K){K+=1;
for(int F=0;F&lt;ǹ.Length;F++){if(K&gt;ɜ[ɟ])ɜ[ɟ]=K;ǻ.Add(ǹ[F],K);}}public float Ǹ(char ǰ,string J){float Ʋ;if(J==ɞ||!ǻ.
TryGetValue(ǰ,out Ʋ))return ɜ[J];return Ʋ;}public float Ǟ(ʌ ǟ,string J){if(J==ɞ)return ǟ.ʊ*ɜ[J];float ǝ=0;for(int F=0;F&lt;ǟ.ʊ;F++)ǝ+=
Ǹ(ǟ[F],J);return ǝ;}public float Ǟ(string ĩ,string J){if(J==ɞ)return ĩ.Length*ɜ[J];float ǝ=0;for(int F=0;F&lt;ĩ.Length;F++)ǝ
+=Ǹ(ĩ[F],J);return ǝ;}public string ǜ(string ĸ,float Ǜ){if(Ǜ/ɜ[ƺ.J]&gt;=ĸ.Length)return ĸ;float ǚ=Ǟ(ĸ,ƺ.J);if(ǚ&lt;=Ǜ)return ĸ;
float Ǚ=ǚ/ĸ.Length;Ǜ-=ɛ[ƺ.J];int ǘ=(int)Math.Max(Ǜ/Ǚ,1);if(ǘ&lt;ĸ.Length/2){ƫ.Ŧ().ʆ(ĸ,0,ǘ);ǚ=Ǟ(ƫ,ƺ.J);}else{ƫ.Ŧ().ʆ(ĸ);ǘ=ĸ.
Length;}while(ǚ&gt;Ǜ&amp;&amp;ǘ&gt;1){ǘ--;ǚ-=Ǹ(ĸ[ǘ],ƺ.J);}if(ƫ.ʊ&gt;ǘ)ƫ.ʅ(ǘ,ƫ.ʊ-ǘ);return ƫ.ʆ("..").ɕ();}void Ǘ(string ǖ){ɟ=ǖ;ǆ[ɟ]=MMStyle.
BAR_START;ǅ[ɟ]=MMStyle.BAR_END;Ǆ[ɟ]=MMStyle.BAR_EMPTY;ǃ[ɟ]=MMStyle.BAR_FILL;ɜ[ɟ]=0f;}void Ǖ(string ǔ,float Ǔ){ɞ=ǔ;ɝ=Ǔ;ɜ[ɞ]=ɝ+1;ɛ[
ɞ]=2*(ɝ+1);ǆ[ɞ]=MMStyle.BAR_MONO_START;ǅ[ɞ]=MMStyle.BAR_MONO_END;Ǆ[ɞ]=MMStyle.BAR_MONO_EMPTY;ǃ[ɞ]=MMStyle.BAR_MONO_FILL;ɘ
[ɞ]=Ǹ(' ',ɞ);ɗ[ɞ]=Ǹ(Ǆ[ɞ],ɞ);Ȇ[ɞ]=Ǹ(ǆ[ɞ],ɞ);ɚ[ɞ]=Ǟ(" 100.0%",ɞ);}public void Ǡ(){if(ǻ.Count&gt;0)return;
// Monospace font name, width of single character
// Change this if you want to use different (modded) monospace font
Ǖ("Monospace", 24f);

// Classic/Debug font name (uses widths of characters below)
// Change this if you want to use different font name (non-monospace)
Ǘ("Debug");
// Font characters width (font "aw" values here)
Ǻ("3FKTabdeghknopqsuy£µÝàáâãäåèéêëðñòóôõöøùúûüýþÿāăąďđēĕėęěĝğġģĥħĶķńņňŉōŏőśŝşšŢŤŦũūŭůűųŶŷŸșȚЎЗКЛбдекруцяёђћўџ", 17f);
Ǻ("ABDNOQRSÀÁÂÃÄÅÐÑÒÓÔÕÖØĂĄĎĐŃŅŇŌŎŐŔŖŘŚŜŞŠȘЅЊЖф□", 21f);
Ǻ("#0245689CXZ¤¥ÇßĆĈĊČŹŻŽƒЁЌАБВДИЙПРСТУХЬ€", 19f);
Ǻ("￥$&amp;GHPUVY§ÙÚÛÜÞĀĜĞĠĢĤĦŨŪŬŮŰŲОФЦЪЯжы†‡", 20f);
Ǻ("！ !I`ijl ¡¨¯´¸ÌÍÎÏìíîïĨĩĪīĮįİıĵĺļľłˆˇ˘˙˚˛˜˝ІЇії‹›∙", 8f);
Ǻ("？7?Jcz¢¿çćĉċčĴźżžЃЈЧавийнопсъьѓѕќ", 16f);
Ǻ("（）：《》，。、；【】(),.1:;[]ft{}·ţťŧț", 9f);
Ǻ("+&lt;=&gt;E^~¬±¶ÈÉÊË×÷ĒĔĖĘĚЄЏЕНЭ−", 18f);
Ǻ("L_vx«»ĹĻĽĿŁГгзлхчҐ–•", 15f);
Ǻ("\"-rª­ºŀŕŗř", 10f);
Ǻ("WÆŒŴ—…‰", 31f);
Ǻ("'|¦ˉ‘’‚", 6f);
Ǻ("@©®мшњ", 25f);
Ǻ("mw¼ŵЮщ", 27f);
Ǻ("/ĳтэє", 14f);
Ǻ("\\°“”„", 12f);
Ǻ("*²³¹", 11f);
Ǻ("¾æœЉ", 28f);
Ǻ("%ĲЫ", 24f);
Ǻ("MМШ", 26f);
Ǻ("½Щ", 29f);
Ǻ("ю", 23f);
Ǻ("ј", 7f);
Ǻ("љ", 22f);
Ǻ("ґ", 13f);
Ǻ("™", 30f);
// End of font characters width
        ɘ[ɟ]=Ǹ(' ',ɟ);ɗ[ɟ]=Ǹ(Ǆ[ɟ],ɟ);Ȇ[ɟ]=Ǹ(ǆ[ɟ],ɟ);ɚ[ɟ]=Ǟ(" 100.0%",ɟ);ɛ[ɟ]=Ǹ('.',ɟ)*2;}}class ǒ{public string ǡ(string
ǯ){return TT[ǯ];}
readonly Dictionary&lt;string, string&gt; TT = new Dictionary&lt;string, string&gt;
{
// TRANSLATION STRINGS
// msg id, text
{ "AC1", "Acceleration:" },
// amount
{ "A1", "EMPTY" },
{ "ALT1", "Altitude:"},
{ "ALT2", "Ground:"},
{ "B1", "Booting up..." },
{ "C1", "count:" },
{ "C2", "Cargo Used:" },
{ "C3", "Invalid countdown format, use:" },
{ "C4", "EXPIRED" },
{ "C5", "days" },
// customdata
{ "CD1", "Block not found: " },
{ "CD2", "Missing block name" },
{ "D1", "You need to enter name." },
{ "D2", "No blocks found." },
{ "D3", "No damaged blocks found." },
{ "DO1", "No connectors found." }, // NEW
{ "DTU", "Invalid GPS format" },
{ "GA", "Artif."}, // (not more than 5 characters)
{ "GN", "Natur."}, // (not more than 5 characters)
{ "GT", "Total"}, // (not more than 5 characters)
{ "G1", "Total Gravity:"},
{ "G2", "Natur. Gravity:"},
{ "G3", "Artif. Gravity:"},
{ "GNC", "No cockpit!"},
{ "H1", "Write commands to Custom Data of this panel." },
// inventory
{ "I1", "ore" },
{ "I2", "summary" },
{ "I3", "Ores" },
{ "I4", "Ingots" },
{ "I5", "Components" },
{ "I6", "Gas" },
{ "I7", "Ammo" },
{ "I8", "Tools" },
{ "M1", "Cargo Mass:" },
// oxygen
{ "O1", "Leaking" },
{ "O2", "Oxygen Farms" },
{ "O3", "No oxygen blocks found." },
{ "O4", "Oxygen Tanks" },
// position
{ "P1", "Block not found" },
{ "P2", "Location" },
// power
{ "P3", "Stored" },
{ "P4", "Output" },
{ "P5", "Input" },
{ "P6", "No power source found!" },
{ "P7", "Batteries" },
{ "P8", "Total Output" },
{ "P9", "Reactors" },
{ "P10", "Solars" },
{ "P11", "Power" },
{ "P12", "Engines" }, // NEW!
{ "P13", "Turbines" }, // NEW!
{ "PT1", "Power Time:" },
{ "PT2", "Charge Time:" },
{ "PU1", "Power Used:" },
{ "S1", "Speed:" },
{ "SM1", "Ship Mass:" },
{ "SM2", "Ship Base Mass:" },
{ "SD", "Stop Distance:" },
{ "ST", "Stop Time:" },
// text
{ "T1", "Source LCD not found: " },
{ "T2", "Missing source LCD name" },
// tanks
{ "T4", "Missing tank type. eg: 'Tanks * Hydrogen'" },
{ "T5", "No {0} tanks found." }, // {0} is tank type
{ "UC", "Unknown command" },
// occupied &amp; dampeners
{ "SC1", "Cannot find control block." },
{ "SCD", "Dampeners: " },
{ "SCO", "Occupied: " },
// working
{ "W1", "OFF" },
{ "W2", "WORK" },
{ "W3", "IDLE" },
{ "W4", "LEAK" },
{ "W5", "OPEN" },
{ "W6", "CLOSED" },
{ "W7", "LOCK" },
{ "W8", "UNLOCK" },
{ "W9", "ON" },
{ "W10", "READY" }
};
    }
}static class Ǯ{public static bool ǭ(this string ĩ,string ǫ){return ĩ.StartsWith(ǫ,StringComparison.
InvariantCultureIgnoreCase);}public static bool Ǭ(this string ĩ,string ǫ){if(ĩ==null)return false;return ĩ.IndexOf(ǫ,StringComparison.
InvariantCultureIgnoreCase)&gt;=0;}public static bool Ǫ(this string ĩ,string ǫ){return ĩ.EndsWith(ǫ,StringComparison.InvariantCultureIgnoreCase);}}
static class ǩ{public static string Ǩ(this IMyTerminalBlock å){int Ū=å.CustomData.IndexOf("\n---\n");if(Ū&lt;0){if(å.CustomData.
StartsWith("---\n"))return å.CustomData.Substring(4);return å.CustomData;}return å.CustomData.Substring(Ū+5);}public static string
ǧ(this IMyTerminalBlock å,int š,string Ǧ){string ǥ=å.Ǩ();string Ǥ="@"+š.ToString()+" AutoLCD";string ǣ='\n'+Ǥ;int Ū=0;if(
!ǥ.StartsWith(Ǥ,StringComparison.InvariantCultureIgnoreCase)){Ū=ǥ.IndexOf(ǣ,StringComparison.InvariantCultureIgnoreCase);
}if(Ū&lt;0){if(š==0){if(ǥ.Length==0)return"";if(ǥ[0]=='@')return null;Ū=ǥ.IndexOf("\n@");if(Ū&lt;0)return ǥ;return ǥ.Substring(
0,Ū);}else return null;}int Ǣ=ǥ.IndexOf("\n@",Ū+1);if(Ǣ&lt;0){if(Ū==0)return ǥ;return ǥ.Substring(Ū+1);}if(Ū==0)return ǥ.
Substring(0,Ǣ);return ǥ.Substring(Ū+1,Ǣ-Ū);}</Program>
                      <Storage />
                      <TextPanels>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <SelectedScript />
                          <TextPadding>2</TextPadding>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <SelectedScript />
                          <TextPadding>2</TextPadding>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                      </TextPanels>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="-1" y="8" z="16" />
                      <BlockOrientation Forward="Up" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope</SubtypeName>
                      <Min x="1" y="9" z="15" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
                      <Min x="1" y="8" z="16" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="4" y="6" z="16" />
                      <BlockOrientation Forward="Right" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_PistonTop">
                      <SubtypeName>SmallPistonTop</SubtypeName>
                      <EntityId>95776308721975658</EntityId>
                      <Min x="5" y="3" z="7" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                      <ParentEntityId>0</ParentEntityId>
                      <YieldLastComponent>false</YieldLastComponent>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="4" y="8" z="15" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_PistonTop">
                      <SubtypeName>SmallPistonTop</SubtypeName>
                      <EntityId>121104941950826428</EntityId>
                      <Min x="-5" y="3" z="7" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                      <ParentEntityId>0</ParentEntityId>
                      <YieldLastComponent>false</YieldLastComponent>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="4" y="4" z="15" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope</SubtypeName>
                      <Min x="-1" y="9" z="16" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-1" y="8" z="17" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope</SubtypeName>
                      <Min x="1" y="9" z="16" />
                      <BlockOrientation Forward="Down" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="1" y="8" z="17" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-1" y="9" z="17" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="-2" y="8" z="17" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="1" y="9" z="17" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="2" y="8" z="17" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-2" y="9" z="17" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="2" y="9" z="17" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorInvCorner</SubtypeName>
                      <EntityId>142017517635406081</EntityId>
                      <Min x="0" y="9" z="12" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
                      <Min x="0" y="9" z="11" />
                      <BlockOrientation Forward="Down" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope</SubtypeName>
                      <Min x="-1" y="9" z="13" />
                      <BlockOrientation Forward="Down" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorInvCorner</SubtypeName>
                      <EntityId>74662628692107155</EntityId>
                      <Min x="0" y="9" z="14" />
                      <BlockOrientation Forward="Right" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
                      <SubtypeName>SmallBlockLight_1corner</SubtypeName>
                      <EntityId>109516961655292910</EntityId>
                      <Min x="-5" y="8" z="14" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Port Light</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <Radius>1</Radius>
                      <ReflectorRadius>120</ReflectorRadius>
                      <ColorGreen>0</ColorGreen>
                      <ColorBlue>0</ColorBlue>
                      <Falloff>1</Falloff>
                      <Intensity>10</Intensity>
                      <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
                      <BlinkLenght>10</BlinkLenght>
                      <BlinkOffset>0</BlinkOffset>
                      <Offset>1</Offset>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
                      <SubtypeName>SmallBlockLight_1corner</SubtypeName>
                      <EntityId>122312531513503426</EntityId>
                      <Min x="5" y="4" z="14" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>External Light G-2</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <Radius>1</Radius>
                      <ReflectorRadius>120</ReflectorRadius>
                      <ColorRed>0.7058824</ColorRed>
                      <ColorGreen>0.784313738</ColorGreen>
                      <Falloff>1</Falloff>
                      <Intensity>10</Intensity>
                      <BlinkIntervalSeconds>1</BlinkIntervalSeconds>
                      <BlinkLenght>10</BlinkLenght>
                      <BlinkOffset>0</BlinkOffset>
                      <Offset>0.5</Offset>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
                      <SubtypeName>SmallBlockLight_1corner</SubtypeName>
                      <EntityId>87377316179203960</EntityId>
                      <Min x="5" y="8" z="14" />
                      <BlockOrientation Forward="Up" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Starboard Light</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <Radius>1</Radius>
                      <ReflectorRadius>120</ReflectorRadius>
                      <ColorRed>0</ColorRed>
                      <ColorBlue>0</ColorBlue>
                      <Falloff>1</Falloff>
                      <Intensity>10</Intensity>
                      <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
                      <BlinkLenght>10</BlinkLenght>
                      <BlinkOffset>0</BlinkOffset>
                      <Offset>1</Offset>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
                      <SubtypeName>SmallBlockSmallLight</SubtypeName>
                      <EntityId>87097901306121609</EntityId>
                      <Min x="0" y="10" z="13" />
                      <BlockOrientation Forward="Up" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <CustomName>Exterior Light G-2</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <Radius>1</Radius>
                      <ReflectorRadius>120</ReflectorRadius>
                      <ColorGreen>0</ColorGreen>
                      <ColorBlue>0</ColorBlue>
                      <Falloff>1.3</Falloff>
                      <Intensity>10</Intensity>
                      <BlinkIntervalSeconds>1</BlinkIntervalSeconds>
                      <BlinkLenght>10</BlinkLenght>
                      <BlinkOffset>10</BlinkOffset>
                      <Offset>0.5</Offset>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_PistonTop">
                      <SubtypeName>SmallPistonTop</SubtypeName>
                      <EntityId>98799809710185710</EntityId>
                      <Min x="5" y="9" z="7" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                      <ParentEntityId>0</ParentEntityId>
                      <YieldLastComponent>false</YieldLastComponent>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>80370023264712195</EntityId>
                      <Min x="2" y="7" z="7" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Small Battery 13</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0.05</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>104785624592862700</EntityId>
                      <Min x="2" y="7" z="8" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Small Battery 14</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0.05</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>143861254747028172</EntityId>
                      <Min x="2" y="7" z="6" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Small Battery 15</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0.05</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>106512868542969273</EntityId>
                      <Min x="-2" y="7" z="7" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Small Battery 02</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0.05</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>126935476710956408</EntityId>
                      <Min x="-2" y="7" z="6" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Small Battery 03</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0.05</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>108871456426819440</EntityId>
                      <Min x="-2" y="7" z="8" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Small Battery 04</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0.05</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-2" y="4" z="10" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-2" y="4" z="12" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="-2" y="4" z="13" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="2" y="4" z="10" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="2" y="4" z="11" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="2" y="4" z="12" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
                      <Min x="2" y="4" z="13" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="2" y="4" z="14" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
                      <Min x="-2" y="4" z="14" />
                      <BlockOrientation Forward="Right" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="-1" y="4" z="13" />
                      <BlockOrientation Forward="Right" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
                      <Min x="-1" y="4" z="12" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
                      <Min x="1" y="4" z="12" />
                      <BlockOrientation Forward="Right" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="1" y="4" z="14" />
                      <BlockOrientation Forward="Forward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorCenter</SubtypeName>
                      <EntityId>135061665140778343</EntityId>
                      <Min x="0" y="4" z="11" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
                      <Min x="-1" y="4" z="14" />
                      <BlockOrientation Forward="Up" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
                      <Min x="1" y="4" z="13" />
                      <BlockOrientation Forward="Left" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
                      <SubtypeName>SmallCameraBlock</SubtypeName>
                      <EntityId>96917811493566733</EntityId>
                      <Min x="0" y="4" z="14" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Rear Camera</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <IsActive>false</IsActive>
                      <Fov>1.04719758</Fov>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorCenter</SubtypeName>
                      <EntityId>82577743430415734</EntityId>
                      <Min x="0" y="4" z="12" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RadioAntenna">
                      <SubtypeName>SmallBlockRadioAntenna</SubtypeName>
                      <EntityId>73099833011583464</EntityId>
                      <Min x="0" y="5" z="13" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Antenna</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <BroadcastRadius>5000</BroadcastRadius>
                      <ShowShipName>false</ShowShipName>
                      <EnableBroadcasting>true</EnableBroadcasting>
                      <AttachedPB>0</AttachedPB>
                      <IgnoreAllied>false</IgnoreAllied>
                      <IgnoreOther>true</IgnoreOther>
                      <HudText>[WDM] Cyclone Class Fighter Bomber (FBMB)</HudText>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
                      <Min x="0" y="4" z="7" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorInvCorner</SubtypeName>
                      <EntityId>98153972563702866</EntityId>
                      <Min x="0" y="4" z="13" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
                      <Min x="0" y="4" z="8" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-4" y="7" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="4" y="7" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>94498184198955448</EntityId>
                      <Min x="-3" y="5" z="9" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Small Battery 05</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0.05</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>114857096659720562</EntityId>
                      <Min x="-3" y="5" z="5" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Small Battery 06</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0.05</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>142878723619149181</EntityId>
                      <Min x="3" y="5" z="5" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Small Battery 07</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0.05</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
                      <EntityId>82164124782754778</EntityId>
                      <Min x="3" y="5" z="9" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Small Battery 08</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>false</ShowInTerminal>
                      <ShowInToolbarConfig>false</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>0.05</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorCenter</SubtypeName>
                      <EntityId>94807295941454024</EntityId>
                      <Min x="0" y="4" z="9" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallArmorCenter</SubtypeName>
                      <EntityId>115235459360396965</EntityId>
                      <Min x="0" y="4" z="10" />
                      <BlockOrientation Forward="Left" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
                      <SubtypeName>SmallBlockGyro</SubtypeName>
                      <EntityId>99973574418059356</EntityId>
                      <Min x="-2" y="6" z="5" />
                      <BlockOrientation Forward="Forward" Up="Left" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Gyroscope 01</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
                      <SubtypeName>SmallBlockGyro</SubtypeName>
                      <EntityId>78885306202458406</EntityId>
                      <Min x="2" y="6" z="5" />
                      <BlockOrientation Forward="Forward" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Gyroscope 02</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="5" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="6" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
                      <SubtypeName>SmallProgrammableBlock</SubtypeName>
                      <EntityId>137039110320006581</EntityId>
                      <Min x="1" y="6" z="9" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyModStorageComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                              <Storage>
                                <dictionary>
                                  <item>
                                    <Key>74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                                    <Value>[Weapon Salvo Config]
Salvo group nametag=Salvo Group
Arguments=
</Value>
                                  </item>
                                </dictionary>
                              </Storage>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Sequencer Computer</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <Program>#region DONT FREAKING TOUCH THESE
const string VERSION = "43.3.1";
const string DATE = "03/03/2019";
#endregion

/*     
/ //// / Whip's Multi-Group Weapon Salvo Script / //// /
PUBLIC RELEASE
HOWDY!  
______________________________________________________________________________________    
SETUP INSTRUCTIONS

    1.) Place this script in a programmable block (No timer is needed!)
    2.) Make a group of your weapons with the name "Salvo Group &lt;unique tag&gt;" where &lt;unique tag&gt; is a unique word or phrase
    3.) You can make as many salvo groups as you want!
______________________________________________________________________________________        
ARGUMENTS 

Type in these arguments without quotes. Arguments are case INSENSITIVE. 
These arguments can be input manually to the program argument field, 
this program's Custom Data, through timers, or through sensors. 
 
In the Custom Data, command lines can be separated with semi-colons, or they can each have
their own lines. 

&gt; BASIC ARGUMENT SYNTAX
    &lt;Group name tag&gt;:&lt;command 1&gt;

&gt; ADVANCED ARGUMENT SYNTAX
    You can also execute several commands to the same group.
    &lt;Group name tag&gt;:&lt;command 1&gt;:&lt;command 2&gt;

&gt; MULTI-GROUP COMMAND SYNTAX
    You can also execute several commands to several different groups in one line
    &lt;Group 1 name&gt;:&lt;command 1&gt;:&lt;command 2&gt;;&lt;Group 2 name&gt;:&lt;command 1&gt;:&lt;command 2&gt;

&gt; AVAILABLE COMMANDS

    RPS &lt;number&gt;   
        Changes the rate of fire in rounds per second.  
        * [Maximum RPS] = [Standard RPS] * [Number of sequenced weapons] 
            NOTE: The script will round this number, this is not a bug! 
            
    RPM &lt;number&gt;    
        Changes the rate of fire in rounds per minute.  
        * [Maximum RPM] = 60 * [Standard RPM] * [Number of sequenced weapons] 
            NOTE: The script will round this number, this is not a bug! 

    delay &lt;integer&gt;  
        Sets number of ticks between shots (60 ticks = 1 sec)
        
    burst &lt;integer&gt;
        Shoots a burst with the specified number of shots

    default  
        Lets the script to set the fire rate automatically based on the number of     
        available weapons (using the default fixed rocket rate of fire). The script 
        will attempt to fire ALL sequenced weapons in the span of ONE second with 
        this particular setting.

    fire_on   
        Toggles fire on only  

    fire_off  
        Toggles fire off only  

    fire_toggle 
        Toggles fire on/off  
    
______________________________________________________________________________________     
EXAMPLES: 

"Salvo Group 1 : fire_on" 
    Toggles the weapons' firing on and use default rate of fire in any group with 
    "Salvo Group 1" in its name
    
"Salvo Group 2 : default" 
    Resets the default rate of fire in any group with "Salvo Group 2" in its name

"Salvo Group 3 : rpm 10 : fire_toggle" 
    Sets the rate of fire to 10 rounds per minute and toggles firing in any group
    with "Salvo Group 3" in its name
    
"Salvo Group 1 : rps 10 ; Salvo Group 2 : rps 5" 
    Sets the rate of fire to 10 rounds per second on any any group named "Salvo Group 1" 
    and also sets the rate of fire to 5 rounds per second on any any group named "Salvo Group 2"  
        
______________________________________________________________________________________     
AUTHOR'S NOTES:

If you have any questions feel free to post them on the workshop page!             

- Whiplash141
*/

//=================================================
/////////DO NOT TOUCH ANYTHING BELOW HERE/////////
//=================================================
string salvoGroupNameTag = "Salvo Group";

const double refreshTime = 10; //seconds
double currentRefreshTime = 141;
bool isSetup = false;
const double runtimeToRealTime = 1.0 / 0.96;
const double updateTime = 1.0 / 60.0;
double currentTime = 141;
double echoTime = 141;
readonly StringBuilder salvoGroupSB = new StringBuilder();
readonly MyIni configIni = new MyIni();

const string INI_SECTION_TAG = "Weapon Salvo Config";
const string INI_KEY_NAMETAG = "Salvo group nametag";
const string INI_KEY_ARGS = "Arguments";
string userCommands = "";

RuntimeTracker runtimeTracker;

Program()
{
    Runtime.UpdateFrequency = UpdateFrequency.Update1;
    Echo("If this code is not running\nclick the 'Run' button!");
    runtimeTracker = new RuntimeTracker(this, 120);
}

void LoadIni()
{
    configIni.Clear();
    bool parsed = configIni.TryParse(Me.CustomData);
    
    if (parsed)
    {
        salvoGroupNameTag = configIni.Get(INI_SECTION_TAG, INI_KEY_NAMETAG).ToString(salvoGroupNameTag);
        userCommands = configIni.Get(INI_SECTION_TAG, INI_KEY_ARGS).ToString(userCommands);
    }
    
    SaveIni();
}

void SaveIni()
{
    configIni.Clear();
    configIni.Set(INI_SECTION_TAG, INI_KEY_NAMETAG, salvoGroupNameTag);
    configIni.Set(INI_SECTION_TAG, INI_KEY_ARGS, userCommands);
    
    Me.CustomData = configIni.ToString();
}

void Main(string arg, UpdateType updateSource)
{
    runtimeTracker.AddRuntime();

    bool queueArg = false;

    if ((updateSource &amp; (UpdateType.Trigger | UpdateType.Terminal)) != 0)
    {
        queueArg = true;
    }

    if (!isSetup || currentRefreshTime &gt;= refreshTime)
    {
        LoadIni();
        isSetup = GrabBlockGroups();
        currentRefreshTime = 0;
        queueArg = true;
    }

    if (queueArg)
    {
        foreach (var thisGroup in salvoGroups)
        {
            thisGroup.ProcessArgument($"{arg};{userCommands}");
        }
    }

    if (!isSetup)
        return;

    var lastRuntime = runtimeToRealTime * Math.Max(Runtime.TimeSinceLastRun.TotalSeconds, 0);
    currentTime += lastRuntime;
    currentRefreshTime += lastRuntime;
    echoTime += lastRuntime;
    
    if (currentTime + 1e-6 &gt;= updateTime)
    {
        currentTime = 0;
        salvoGroupSB.Clear();
        salvoGroupSB.AppendLine($"Whip's Weapon Salvo Code\n(Version {VERSION} - {DATE})\n\nNext block refresh in {Math.Max(0, refreshTime - currentRefreshTime):N0} seconds");
        
        try
        {
            foreach (var thisGroup in salvoGroups)
            {
                thisGroup.SequenceWeapons();
                salvoGroupSB.Append(thisGroup.EchoBuilder);
            }
        }
        catch
        {
            Echo("EXCEPTION OCCURED\nREFRESHING SCRIPT...");
            isSetup = false;
        }

        salvoGroupSB.Append(runtimeTracker.Write());
    }

    if (echoTime &gt; 1)
    {
        Echo(salvoGroupSB.ToString());
        echoTime = 0;
    }
    
    runtimeTracker.AddInstructions();
}

List&lt;WeaponSalvoGroup&gt; salvoGroups = new List&lt;WeaponSalvoGroup&gt;();
List&lt;IMyBlockGroup&gt; sequenceGroups = new List&lt;IMyBlockGroup&gt;();
HashSet&lt;IMyBlockGroup&gt; cachedSequenceGroups = new HashSet&lt;IMyBlockGroup&gt;();
bool GrabBlockGroups()
{
    sequenceGroups.Clear();
    cachedSequenceGroups.Clear();

    GridTerminalSystem.GetBlockGroups(sequenceGroups, x =&gt; x.Name.ToLower().Contains(salvoGroupNameTag.ToLower()));

    if (sequenceGroups.Count == 0)
    {
        Echo($"----------------------------------\nERROR: No groups containing the\n name tag '{salvoGroupNameTag}' were found");
        return false;
    }

    //removes salvo groups that dont exist any more
    salvoGroups.RemoveAll(x =&gt; !sequenceGroups.Contains(x.ThisGroup));

    //Update existing salvo groups
    foreach (var group in salvoGroups)
    {
        group.GetBlocks();
    }

    //add groups that currently exist and are already initialized to a list
    foreach (var salvoGroup in salvoGroups)
    {
        cachedSequenceGroups.Add(salvoGroup.ThisGroup);
    }

    //Echo($"cachedSequenceGroups: {cachedSequenceGroups.Count}");

    foreach (var group in sequenceGroups)
    {
        if (!cachedSequenceGroups.Contains(group))
            salvoGroups.Add(new WeaponSalvoGroup(group, this)); //add groups that now exist, but were not initialized
    }
    return true;
}

public class WeaponSalvoGroup
{
    public readonly StringBuilder EchoBuilder = new StringBuilder();
    public IMyBlockGroup ThisGroup { get; private set; } = null;
    Program _thisProgram = null;
    List&lt;IMyUserControllableGun&gt; _weapons = new List&lt;IMyUserControllableGun&gt;();
    int _weaponCount = 0;
    int _timeCount = 0;
    int _delay = 0;
    int _defaultRateOfFire = 1;
    int _burstCount = 0;
    double _desiredRPM = 0;
    bool _isShooting = false;
    bool _executeToggle = false;
    bool _manualOverride = false;
    bool _limitReached = false;
    bool _shouldBurst = false;
    string _messageToggle = "";
    string _messageOverride = "";
    IMyUserControllableGun weaponToFire = null;

    public WeaponSalvoGroup(IMyBlockGroup group, Program program)
    {
        ThisGroup = group;
        _thisProgram = program;
        this.GetBlocks();
    }

    void Echo(string echoStr)
    {
        EchoBuilder.AppendLine(echoStr);
    }

    public void GetBlocks()
    {
        ThisGroup.GetBlocksOfType(_weapons, x =&gt; !(x is IMyLargeTurretBase) &amp;&amp; x.IsFunctional &amp;&amp; _thisProgram.Me.IsSameConstructAs(x));

        //Sorting method
        _weapons.Sort((gun1, gun2) =&gt; gun1.CustomName.CompareTo(gun2.CustomName));
    }

    public void ProcessArgument(string argument = "")
    {
        //It's splittin' time!     
        string[] argumentSplit = argument.Split(new char[] { '\n', ';' });  //split at semicolons and new lines

        //====ARGUMENT HANDLING====
        #region ARGUMENT HANDLING
        foreach (string thisArgument in argumentSplit)
        {
            var argumentFields = thisArgument.Split(':');
            if (argumentFields.Length &lt; 2) //no valid command
                continue;

            if (!ThisGroup.Name.Trim().Equals(argumentFields[0].Trim(), StringComparison.OrdinalIgnoreCase)) //explicit name that trims spaces
                continue;
            Echo("TEST");
            for (int i = 1; i &lt; argumentFields.Length; i++)
            {
                string command = argumentFields[i].ToLower().Trim();

                if (command.StartsWith("rps", StringComparison.OrdinalIgnoreCase)) //change rate of fire manually    
                {
                    var value = command.Replace("rps", "").Trim();

                    double valueDouble;
                    bool isDouble = double.TryParse(value, out valueDouble);
                    if (!isDouble) continue;

                    double delayUnrounded = 60.0 / valueDouble; //Dont change this from 60 
                    _desiredRPM = valueDouble * 60.0;
                    _delay = (int)Math.Ceiling(delayUnrounded);
                    _manualOverride = true;
                }
                if (command.StartsWith("rpm", StringComparison.OrdinalIgnoreCase)) //change rate of fire manually    
                {
                    var value = command.Replace("rpm", "").Trim();

                    double valueDouble;
                    bool isDouble = double.TryParse(value, out valueDouble);
                    if (!isDouble) continue;

                    double delayUnrounded = 3600.0 / valueDouble;
                    _desiredRPM = valueDouble;
                    _delay = (int)Math.Ceiling(delayUnrounded);
                    _manualOverride = true;
                }
                else if (command.StartsWith("delay", StringComparison.OrdinalIgnoreCase)) //change delay (in ticks) between shots; 60 ticks = 1 sec    
                {
                    var value = command.Replace("delay", "").Trim(); //trim spaces and remove keyword

                    int valueInteger = 0;
                    bool isInteger = int.TryParse(value, out valueInteger);
                    if (!isInteger) continue;

                    _delay = valueInteger;
                    _desiredRPM = 3600.0 / _delay;
                    _manualOverride = true;
                }
                else if (command.StartsWith("burst", StringComparison.OrdinalIgnoreCase))
                {
                    var value = command.Replace("burst", "").Trim(); //trim spaces and remove keyword

                    int valueInteger = 0;
                    bool isInteger = int.TryParse(value, out valueInteger);
                    if (!isInteger) continue;

                    _burstCount = valueInteger;
                    _executeToggle = true;
                    _shouldBurst = true;
                }
                else if (command.Equals("default", StringComparison.OrdinalIgnoreCase)) //lets the script set fire rate       
                {
                    _manualOverride = false;
                }
                else if (command.Equals("fire_on", StringComparison.OrdinalIgnoreCase)) //toggle fire on      
                {
                    _executeToggle = true;
                }
                else if (command.Equals("fire_off", StringComparison.OrdinalIgnoreCase)) //toggle fire off
                {
                    _executeToggle = false;
                }
                else if (command.Equals("fire_toggle", StringComparison.OrdinalIgnoreCase)) //toggle fire on/off
                {
                    _executeToggle = !_executeToggle;
                }
            }

        }
        #endregion
    }

    public void SequenceWeapons()
    {
        //GetBlocks();
        EchoBuilder.Clear();

        if (_weapons.Count == 0)
        {
            Echo("----------------------------------\n ERROR: No weapons in group '" + ThisGroup.Name + "' were found.");
            return;
        }

        if (_weapons[0].CubeGrid.GridSizeEnum == MyCubeSize.Large)
        {
            _defaultRateOfFire = 2;
        }
        else
            _defaultRateOfFire = 1;

        //Checks for divide by zero
        if (_delay == 0)
        {
            _delay = 1; //stops divide by zero 
            _desiredRPM = 3600.0 / _delay;
        }

        //Sets default rate of fire
        if (!_manualOverride)
        {
            var delayUnrounded = 60.0 / (double)_weapons.Count / (double)_defaultRateOfFire; //set _delay between weapons          
            _delay = (int)Math.Ceiling(delayUnrounded);
            _desiredRPM = 3600.0 / _delay;
        }

        //Checks if guns are being fired
        if (!_isShooting)
        {
            foreach (IMyUserControllableGun thisWeapon in _weapons) //need to track if bool has been reset
            {
                if (thisWeapon.IsShooting &amp;&amp; thisWeapon.Enabled)
                {
                    _isShooting = true;
                    break;
                }
            }
        }

        //===SEQUENCER HANDLING===
        if (_timeCount &gt;= _delay)
        {
            if (!_limitReached)
            {
                ////===RESETTING ALL WEAPON STATES===          
                foreach (var thisWeapon in _weapons)
                {
                    thisWeapon.Enabled = false;
                }

                //===ACTIVATING SPECIFIED WEAPON===  
                if (_weaponCount &gt;= _weapons.Count)
                    _weaponCount = 0; //incase something gets broken

                weaponToFire = _weapons[_weaponCount];
                weaponToFire.Enabled = true;
                _limitReached = true;
            }
            else
            {
                if (weaponToFire.Enabled == false)
                    weaponToFire.Enabled = true;
            }

            if (_isShooting)
            {
                if (_weaponCount + 1 &lt; _weapons.Count)
                {
                    _weaponCount++; //counts once per _delay
                }
                else
                {
                    _weaponCount = 0;
                }
                _timeCount = 0; //start count over
                _isShooting = false;
                weaponToFire.Enabled = false;
                _limitReached = false;

                if (_burstCount &gt; 1 &amp;&amp; _shouldBurst)
                {
                    _burstCount--;
                }
                else if (_shouldBurst)
                {
                    _shouldBurst = false;
                    _executeToggle = false;
                    _burstCount = 0; //has to be bigger than 0
                }
            }

            if (_executeToggle)
            {
                weaponToFire.ApplyAction("ShootOnce"); //there is no interface method for this :(
                _messageToggle = "&gt;&gt;Toggle Fire Enabled&lt;&lt;";
            }
            else
            {
                _messageToggle = "&lt;&lt;Toggle Fire Disabled&gt;&gt;";
            }
        }
        else
        {
            _timeCount++; //continues to count until _delay is hit	          
        }

        if (_manualOverride)
        {
            _messageOverride = "&gt;&gt;Defaults Overriden&lt;&lt;";
        }
        else
        {
            _messageOverride = "&lt;&lt;Defaults Applied&gt;&gt;";
        }

        //Debug    
        string output = $"----------------------------------\nInfo for '{ThisGroup.Name}' \n{_messageToggle}\n{_messageOverride}\nNo. Weapons: {_weapons.Count}\nRate of Fire: {_desiredRPM} -&gt; {3600.0 / (double)_delay:N1} RPM\nDelay: {_delay} ticks\nCurrent Time: {_timeCount}\nWeapon Count: {_weaponCount}\nIsShooting: {_isShooting}\nBurst Count: {_burstCount}";
        Echo(output);
    }
}

/// &lt;summary&gt;
/// Class that tracks runtime history.
/// &lt;/summary&gt;
public class RuntimeTracker
{
    public int Capacity { get; set; }
    public double Sensitivity { get; set; }
    public double MaxRuntime {get; private set;}
    public double MaxInstructions {get; private set;}
    public double AverageRuntime {get; private set;}
    public double AverageInstructions {get; private set;}
    
    private readonly Queue&lt;double&gt; _runtimes = new Queue&lt;double&gt;();
    private readonly Queue&lt;double&gt; _instructions = new Queue&lt;double&gt;();
    private readonly StringBuilder _sb = new StringBuilder();
    private readonly int _instructionLimit;
    private readonly Program _program;

    public RuntimeTracker(Program program, int capacity = 100, double sensitivity = 0.01)
    {
        _program = program;
        Capacity = capacity;
        Sensitivity = sensitivity;
        _instructionLimit = _program.Runtime.MaxInstructionCount;
    }

    public void AddRuntime()
    {
        double runtime = _program.Runtime.LastRunTimeMs;
        AverageRuntime = Sensitivity * (runtime - AverageRuntime) + AverageRuntime;
        
        _runtimes.Enqueue(runtime);
        if (_runtimes.Count == Capacity)
        {
            _runtimes.Dequeue();
        }
        
        MaxRuntime = _runtimes.Max();
    }

    public void AddInstructions()
    {
        double instructions = _program.Runtime.CurrentInstructionCount;
        AverageInstructions = Sensitivity * (instructions - AverageInstructions) + AverageInstructions;
        
        _instructions.Enqueue(instructions);
        if (_instructions.Count == Capacity)
        {
            _instructions.Dequeue();
        }
        
        MaxInstructions = _instructions.Max();
    }

    public string Write()
    {
        _sb.Clear();
        _sb.AppendLine("_____________________________\nGeneral Runtime Info\n");
        _sb.AppendLine($"Avg instructions: {AverageInstructions:n2}");
        _sb.AppendLine($"Max instructions: {MaxInstructions:n0}");
        _sb.AppendLine($"Avg complexity: {MaxInstructions / _instructionLimit:0.000}%");
        _sb.AppendLine($"Avg runtime: {AverageRuntime:n4} ms");
        _sb.AppendLine($"Max runtime: {MaxRuntime:n4} ms");
        return _sb.ToString();
    }
}</Program>
                      <Storage />
                      <TextPanels>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <SelectedScript />
                          <TextPadding>2</TextPadding>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <SelectedScript />
                          <TextPadding>2</TextPadding>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                      </TextPanels>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
                      <SubtypeName>SmallBlockConveyor</SubtypeName>
                      <EntityId>73975034314066565</EntityId>
                      <Min x="1" y="6" z="10" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
                      <SubtypeName>SmallBlockConveyor</SubtypeName>
                      <EntityId>90482975932854114</EntityId>
                      <Min x="0" y="6" z="10" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-1" y="8" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="8" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="1" y="8" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="6" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockSmallContainer</SubtypeName>
                      <EntityId>142058687716300613</EntityId>
                      <Min x="-3" y="6" z="10" />
                      <BlockOrientation Forward="Left" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.125</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Ammunition Container 03</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockSmallContainer</SubtypeName>
                      <EntityId>138299254286788990</EntityId>
                      <Min x="-2" y="6" z="10" />
                      <BlockOrientation Forward="Left" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.125</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Ammunition Container 04</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockSmallContainer</SubtypeName>
                      <EntityId>87407480269271658</EntityId>
                      <Min x="3" y="6" z="10" />
                      <BlockOrientation Forward="Left" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.125</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Ammunition Container 05</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
                      <SubtypeName>SmallBlockSmallContainer</SubtypeName>
                      <EntityId>126543407777365507</EntityId>
                      <Min x="2" y="6" z="10" />
                      <BlockOrientation Forward="Left" Up="Forward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyInventoryBase</TypeId>
                            <Component xsi:type="MyObjectBuilder_Inventory">
                              <Items />
                              <nextItemId>0</nextItemId>
                              <Volume>0.125</Volume>
                              <Mass>9223372036854.775807</Mass>
                              <MaxItemCount>2147483647</MaxItemCount>
                              <Size xsi:nil="true" />
                              <InventoryFlags>CanReceive CanSend</InventoryFlags>
                              <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Cyclone Ammunition Container 06</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="5" z="5" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="5" z="4" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="5" z="4" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="5" z="5" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="4" y="6" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-4" y="6" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="5" z="10" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="5" z="11" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="0" y="5" z="12" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-1" y="5" z="12" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="1" y="5" z="12" />
                      <ColorMaskHSV x="0" y="-0.8" z="0" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_PistonTop">
                      <SubtypeName>SmallPistonTop</SubtypeName>
                      <EntityId>75211292976896611</EntityId>
                      <Min x="-5" y="9" z="7" />
                      <BlockOrientation Forward="Left" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
                      <ParentEntityId>0</ParentEntityId>
                      <YieldLastComponent>false</YieldLastComponent>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
                      <SubtypeName>SmallBlockConveyor</SubtypeName>
                      <EntityId>72797942202508689</EntityId>
                      <Min x="-1" y="6" z="10" />
                      <BlockOrientation Forward="Left" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
                      <SubtypeName>TimerBlockSmall</SubtypeName>
                      <EntityId>137342817887971712</EntityId>
                      <Min x="0" y="7" z="10" />
                      <BlockOrientation Forward="Forward" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Combat Mode Timer</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <Toolbar>
                        <ToolbarType>Character</ToolbarType>
                        <SelectedSlot xsi:nil="true" />
                        <Slots>
                          <Slot>
                            <Index>0</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                              <Action>OnOff</Action>
                              <GridEntityId>0</GridEntityId>
                              <BlockEntityId>137342817887971712</BlockEntityId>
                              <GroupName>Cyclone Armaments</GroupName>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>1</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>OnOff</Action>
                              <BlockEntityId>105742339342027498</BlockEntityId>
                            </Data>
                          </Slot>
                        </Slots>
                        <SlotsGamepad />
                      </Toolbar>
                      <Delay>1000</Delay>
                      <CurrentTime>0</CurrentTime>
                      <IsCountingDown>false</IsCountingDown>
                      <Silent>true</Silent>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
                      <SubtypeName>SmallProgrammableBlock</SubtypeName>
                      <EntityId>141964866915873475</EntityId>
                      <Min x="1" y="7" z="9" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <ComponentContainer>
                        <Components>
                          <ComponentData>
                            <TypeId>MyModStorageComponent</TypeId>
                            <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                              <Storage>
                                <dictionary>
                                  <item>
                                    <Key>74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                                    <Value>[Artificial Horizon - General]
Text surface name tag=Horizon
;Time before predicted collision that the AH will
;warn you to pull up (-1 disables warning)
Collision warning time threshold (s)=5
Collision warning sound name tag=Horizon
Collision warning sound loop interval (s)=0.166
Optional reference name tag=Reference
Surface to Sealevel transition alt. (m)=1000
Show XYZ axes in space=true
Sun rotation axis={X:0 Y:-1 Z:0}

[Artificial Horizon - Colors]
Sky background=10, 30, 50, 255
Ground background=10, 10, 10, 255
Space background=0, 0, 0, 255
Prograde velocity=150, 150, 0, 255
Retrograde velocity=150, 0, 0, 255
Text=150, 150, 150, 255
Text box outline=150, 150, 150, 255
Text box background=10, 10, 10, 150
Horizon line=0, 0, 0, 255
Elevation lines=150, 150, 150, 255
Orientation indicator=150, 150, 150, 255
Space x-axis=100, 50, 0, 150
Space y-axis=0, 100, 0, 150
Space z-axis=0, 50, 100, 150
</Value>
                                  </item>
                                </dictionary>
                              </Storage>
                            </Component>
                          </ComponentData>
                        </Components>
                      </ComponentContainer>
                      <CustomName>Velocity Computer</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <Program>
#region In-game Script
/*
/ //// / Whip's Artificial Horizon Redux / //// /

HOW DO I USE THIS?

1. Place this script in a programmable block.
2. Place a ship controller.
3. Add "Horizon" to the name of text panels and text surfaces
    - Configure which surface the script is shown on in the
      Custom Data of the text surface (not needed for regular LCDs)
4. Enjoy!




=================================================
    DO NOT MODIFY VARIABLES IN THE SCRIPT!

 USE THE CUSTOM DATA OF THIS PROGRAMMABLE BLOCK!
=================================================


























HEY! DONT EVEN THINK ABOUT TOUCHING BELOW THIS LINE!

*/

const string VERSION = "1.5.0";
const string DATE = "05/01/2019";

#region Fields
List&lt;IMyShipController&gt; Controllers
{
    get
    {
        return _taggedControllers.Count &gt; 0 ? _taggedControllers : _allControllers;
    }
}

double _altitudeTransitionThreshold = 1000;
IMyShipController reference = null;
IMyShipController lastActiveShipController = null;
string _textSurfaceNameTag = "Horizon";
string _soundBlockNameTag = "Horizon";
string _referenceNameTag = "Reference";
string _lastSetupResult = "";
Vector3D _sunRotationAxis = new Vector3D(0, -1, 0);
Color _skyColor = new Color(10, 30, 50);
Color _groundColor = new Color(10, 10, 10);
Color _spaceBackgroundColor = new Color(0, 0, 0);
Color _progradeColor = new Color(150, 150, 0);
Color _retrogradeColor = new Color(150, 0, 0);
Color _textColor = new Color(150, 150, 150);
Color _textBoxColor = new Color(150, 150, 150);
Color _textBoxBackground = new Color(10, 10, 10, 150);
Color _horizonLineColor = new Color(0, 0, 0);
Color _elevationLineColor = new Color(150, 150, 150);
Color _orientationLineColor = new Color(150, 150, 150);
Color _altitudeWarningColor = Color.Red;
Color _xAxisColor = new Color(100, 50, 0, 150);
Color _yAxisColor = new Color(0, 100, 0, 150);
Color _zAxisColor = new Color(0, 50, 100, 150);
bool _showXYZAxis = true;
double _collisionSoundInterval = 0.166;
double _timeToCollisionThreshold = 5;

double _collisionSoundTimeSum = 141;
bool _lastCollisionWarningState = false;

#region Ini Keys
const string INI_SECTION_GENERAL = "Artificial Horizon - General";
const string INI_GENERAL_TEXT_NAME = "Text surface name tag";
const string INI_GENERAL_SOUND_NAME = "Collision warning sound name tag";
const string INI_GENERAL_SOUND_INTERVAL = "Collision warning sound loop interval (s)";
const string INI_GENERAL_COLLISION_THRESH = "Collision warning time threshold (s)";
const string INI_GENERAL_REF_NAME = "Optional reference name tag";
const string INI_GENERAL_ALT_TRANS = "Surface to Sealevel transition alt. (m)"; //TODO: Add comment
const string INI_GENERAL_SHOW_XYZ = "Show XYZ axes in space";
const string INI_GENERAL_SUN_ROTATION = "Sun rotation axis";

const string INI_SECTION_COLORS = "Artificial Horizon - Colors";
const string INI_COLORS_SKY = "Sky background";
const string INI_COLORS_GROUND = "Ground background";
const string INI_COLORS_SPACE = "Space background";
const string INI_COLORS_PROGRADE = "Prograde velocity";
const string INI_COLORS_RETROGRADE = "Retrograde velocity";
const string INI_COLORS_TEXT = "Text";
const string INI_COLORS_TEXT_BOX_OUTLINE = "Text box outline";
const string INI_COLORS_TEXT_BOX_BACKGROUND = "Text box background";
const string INI_COLORS_HORIZON_LINE = "Horizon line";
const string INI_COLORS_ELEVATION_LINE = "Elevation lines";
const string INI_COLORS_ORENTATION = "Orientation indicator";
const string INI_COLORS_X_AXIS = "Space x-axis";
const string INI_COLORS_Y_AXIS = "Space y-axis";
const string INI_COLORS_Z_AXIS = "Space z-axis";

const string INI_SECTION_TEXT_SURF = "Artificial Horizon - Text Surface Config";
const string INI_TEXT_SURF_TEMPLATE = "Show on screen {0}";
#endregion

const double TICK = 1.0 / 60.0;

readonly StringBuilder _customDataSB = new StringBuilder();
readonly List&lt;string&gt; _iniSections = new List&lt;string&gt;();
readonly List&lt;IMyShipController&gt; _allControllers = new List&lt;IMyShipController&gt;();
readonly List&lt;IMyShipController&gt; _taggedControllers = new List&lt;IMyShipController&gt;();
readonly List&lt;IMyTextSurface&gt; _textSurfaces = new List&lt;IMyTextSurface&gt;();
readonly List&lt;IMySoundBlock&gt; _soundBlocks = new List&lt;IMySoundBlock&gt;();
readonly MyIni _ini = new MyIni();
readonly MyIni _textSurfaceIni = new MyIni();
readonly ArtificialHorizon _artificialHorizon;
readonly Scheduler _scheduler;
readonly ScheduledAction _scheduledSetup;
readonly RuntimeTracker _runtimeTracker;
readonly RunningSymbol _runningSymbol = new RunningSymbol(new string[] { "", ".", "..", "...", "....", "...", "..", "." });
#endregion

#region Main methods
Program()
{
    Runtime.UpdateFrequency = UpdateFrequency.Update1;

    _runtimeTracker = new RuntimeTracker(this);

    _artificialHorizon = new ArtificialHorizon(
            _sunRotationAxis,
            _skyColor,
            _groundColor,
            _progradeColor,
            _retrogradeColor,
            _textColor,
            _textBoxColor,
            _textBoxBackground,
            _horizonLineColor,
            _elevationLineColor,
            _spaceBackgroundColor,
            _orientationLineColor,
            _altitudeWarningColor,
            _xAxisColor,
            _yAxisColor,
            _zAxisColor,
            _altitudeTransitionThreshold,
            _timeToCollisionThreshold,
            _showXYZAxis,
            this);

    Setup();

    _scheduledSetup = new ScheduledAction(Setup, 0.1);

    _scheduler = new Scheduler(this);

    // Scheduled actions
    _scheduler.AddScheduledAction(_scheduledSetup);
    _scheduler.AddScheduledAction(PrintDetailedInfo, 1);
    _scheduler.AddScheduledAction(PlaySounds, 6);

    // Queued actions
    _scheduler.AddQueuedAction(CalculateAHParams, TICK);                        // cycle 1
    float step = 1f / 9f;
    _scheduler.AddQueuedAction(() =&gt; UpdateScreens(0 * step, 1 * step), TICK);  // cycle 2
    _scheduler.AddQueuedAction(() =&gt; UpdateScreens(1 * step, 2 * step), TICK);  // cycle 3
    _scheduler.AddQueuedAction(() =&gt; UpdateScreens(2 * step, 3 * step), TICK);  // cycle 4
    _scheduler.AddQueuedAction(() =&gt; UpdateScreens(3 * step, 4 * step), TICK);  // cycle 5
    _scheduler.AddQueuedAction(() =&gt; UpdateScreens(4 * step, 5 * step), TICK);  // cycle 6
    _scheduler.AddQueuedAction(() =&gt; UpdateScreens(5 * step, 6 * step), TICK);  // cycle 7
    _scheduler.AddQueuedAction(() =&gt; UpdateScreens(6 * step, 7 * step), TICK);  // cycle 8
    _scheduler.AddQueuedAction(() =&gt; UpdateScreens(7 * step, 8 * step), TICK);  // cycle 9
    _scheduler.AddQueuedAction(() =&gt; UpdateScreens(8 * step, 9 * step), TICK);  // cycle 10
}

void Main(string arg)
{
    _runtimeTracker.AddRuntime();
    _scheduler.Update();
    _runtimeTracker.AddInstructions();
}

void CalculateAHParams()
{
    reference = GetControlledShipController(Controllers); // Primary, get active controller
    if (reference == null)
    {
        if (lastActiveShipController != null)
        {
            // Backup, use last active controller
            reference = lastActiveShipController;
        }
        else if (reference == null &amp;&amp; Controllers.Count != 0)
        {
            // Last case, resort to the first controller in the list
            reference = Controllers[0];
        }
        else
        {
            return;
        }
    }

    _artificialHorizon.CalculateParameters(reference, 6);
    lastActiveShipController = reference;
}

void PlaySounds()
{
    if (_soundBlocks.Count == 0)
        return;

    _collisionSoundTimeSum += 10 * TICK;

    if (_collisionSoundTimeSum &lt; _collisionSoundInterval &amp;&amp; _artificialHorizon.CollisionWarning == _lastCollisionWarningState)
        return;

    _collisionSoundTimeSum = 0;

    foreach (var block in _soundBlocks)
    {
        if (_artificialHorizon.CollisionWarning)
            block.Play();
        else
            block.Stop();
    }

    _lastCollisionWarningState = _artificialHorizon.CollisionWarning;
}

void UpdateScreens(float startProportion, float endProportion)
{
    int start = (int)(startProportion * _textSurfaces.Count);
    int end = (int)(endProportion * _textSurfaces.Count);
    for (int i = start; i &lt; end; ++i)
    {
        var textSurface = _textSurfaces[i];
        _artificialHorizon.Draw(textSurface);
    }
}

void PrintDetailedInfo()
{
    Echo($"WMI Artificial Horizon Redux{_runningSymbol.Iterate()}\n(Version {VERSION} - {DATE})\n\nCustomize variables in Custom Data!");
    Echo($"\nNext refresh in {Math.Max(_scheduledSetup.RunInterval - _scheduledSetup.TimeSinceLastRun, 0):N0} seconds");
    Echo($"{_lastSetupResult}");
    Echo($"Text surfaces: {_textSurfaces.Count}\n");
    Echo($"Reference seat:\n\"{(reference?.CustomName)}\"");
    Echo(_runtimeTracker.Write());
}
#endregion

#region Ini
void ParseIni()
{
    _ini.Clear();
    _ini.TryParse(Me.CustomData);

    _iniSections.Clear();
    _ini.GetSections(_iniSections);
    if (_iniSections.Count == 0)
    {
        _customDataSB.Clear();
        _customDataSB.Append(Me.CustomData);
        _customDataSB.Replace("---\n", "");

        _ini.EndContent = _customDataSB.ToString();
    }

    // General
    _textSurfaceNameTag = _ini.Get(INI_SECTION_GENERAL, INI_GENERAL_TEXT_NAME).ToString(_textSurfaceNameTag);
    _timeToCollisionThreshold = _ini.Get(INI_SECTION_GENERAL, INI_GENERAL_COLLISION_THRESH).ToDouble(_timeToCollisionThreshold);
    _soundBlockNameTag = _ini.Get(INI_SECTION_GENERAL, INI_GENERAL_SOUND_NAME).ToString(_soundBlockNameTag);
    _collisionSoundInterval = _ini.Get(INI_SECTION_GENERAL, INI_GENERAL_SOUND_INTERVAL).ToDouble(_collisionSoundInterval);
    _referenceNameTag = _ini.Get(INI_SECTION_GENERAL, INI_GENERAL_REF_NAME).ToString(_referenceNameTag);
    _altitudeTransitionThreshold = _ini.Get(INI_SECTION_GENERAL, INI_GENERAL_ALT_TRANS).ToDouble(_altitudeTransitionThreshold);
    _showXYZAxis = _ini.Get(INI_SECTION_GENERAL, INI_GENERAL_SHOW_XYZ).ToBoolean(_showXYZAxis);
    _sunRotationAxis = MyIniHelper.GetVector3D(INI_SECTION_GENERAL, INI_GENERAL_SUN_ROTATION, _ini, _sunRotationAxis);

    // Colors
    _skyColor = MyIniHelper.GetColor(INI_SECTION_COLORS, INI_COLORS_SKY, _ini, _skyColor);
    _groundColor = MyIniHelper.GetColor(INI_SECTION_COLORS, INI_COLORS_GROUND, _ini, _groundColor);
    _spaceBackgroundColor = MyIniHelper.GetColor(INI_SECTION_COLORS, INI_COLORS_SPACE, _ini, _spaceBackgroundColor);
    _progradeColor = MyIniHelper.GetColor(INI_SECTION_COLORS, INI_COLORS_PROGRADE, _ini, _progradeColor);
    _retrogradeColor = MyIniHelper.GetColor(INI_SECTION_COLORS, INI_COLORS_RETROGRADE, _ini, _retrogradeColor);
    _textColor = MyIniHelper.GetColor(INI_SECTION_COLORS, INI_COLORS_TEXT, _ini, _textColor);
    _textBoxColor = MyIniHelper.GetColor(INI_SECTION_COLORS, INI_COLORS_TEXT_BOX_OUTLINE, _ini, _textBoxColor);
    _textBoxBackground = MyIniHelper.GetColor(INI_SECTION_COLORS, INI_COLORS_TEXT_BOX_BACKGROUND, _ini, _textBoxBackground);
    _horizonLineColor = MyIniHelper.GetColor(INI_SECTION_COLORS, INI_COLORS_HORIZON_LINE, _ini, _horizonLineColor);
    _elevationLineColor = MyIniHelper.GetColor(INI_SECTION_COLORS, INI_COLORS_ELEVATION_LINE, _ini, _elevationLineColor);
    _orientationLineColor = MyIniHelper.GetColor(INI_SECTION_COLORS, INI_COLORS_ORENTATION, _ini, _orientationLineColor);
    _xAxisColor = MyIniHelper.GetColor(INI_SECTION_COLORS, INI_COLORS_X_AXIS, _ini, _xAxisColor);
    _yAxisColor = MyIniHelper.GetColor(INI_SECTION_COLORS, INI_COLORS_Y_AXIS, _ini, _yAxisColor);
    _zAxisColor = MyIniHelper.GetColor(INI_SECTION_COLORS, INI_COLORS_Z_AXIS, _ini, _zAxisColor);

    WriteIni();
}

void WriteIni()
{
    // General
    _ini.Set(INI_SECTION_GENERAL, INI_GENERAL_TEXT_NAME, _textSurfaceNameTag);
    _ini.Set(INI_SECTION_GENERAL, INI_GENERAL_COLLISION_THRESH, _timeToCollisionThreshold);
    _ini.Set(INI_SECTION_GENERAL, INI_GENERAL_SOUND_NAME, _soundBlockNameTag);
    _ini.Set(INI_SECTION_GENERAL, INI_GENERAL_SOUND_INTERVAL, _collisionSoundInterval);
    _ini.Set(INI_SECTION_GENERAL, INI_GENERAL_REF_NAME, _referenceNameTag);
    _ini.Set(INI_SECTION_GENERAL, INI_GENERAL_ALT_TRANS, _altitudeTransitionThreshold);
    _ini.Set(INI_SECTION_GENERAL, INI_GENERAL_SHOW_XYZ, _showXYZAxis);
    MyIniHelper.SetVector3D(INI_SECTION_GENERAL, INI_GENERAL_SUN_ROTATION, ref _sunRotationAxis, _ini);

    // Colors
    MyIniHelper.SetColor(INI_SECTION_COLORS, INI_COLORS_SKY, _skyColor, _ini);
    MyIniHelper.SetColor(INI_SECTION_COLORS, INI_COLORS_GROUND, _groundColor, _ini);
    MyIniHelper.SetColor(INI_SECTION_COLORS, INI_COLORS_SPACE, _spaceBackgroundColor, _ini);
    MyIniHelper.SetColor(INI_SECTION_COLORS, INI_COLORS_PROGRADE, _progradeColor, _ini);
    MyIniHelper.SetColor(INI_SECTION_COLORS, INI_COLORS_RETROGRADE, _retrogradeColor, _ini);
    MyIniHelper.SetColor(INI_SECTION_COLORS, INI_COLORS_TEXT, _textColor, _ini);
    MyIniHelper.SetColor(INI_SECTION_COLORS, INI_COLORS_TEXT_BOX_OUTLINE, _textBoxColor, _ini);
    MyIniHelper.SetColor(INI_SECTION_COLORS, INI_COLORS_TEXT_BOX_BACKGROUND, _textBoxBackground, _ini);
    MyIniHelper.SetColor(INI_SECTION_COLORS, INI_COLORS_HORIZON_LINE, _horizonLineColor, _ini);
    MyIniHelper.SetColor(INI_SECTION_COLORS, INI_COLORS_ELEVATION_LINE, _elevationLineColor, _ini);
    MyIniHelper.SetColor(INI_SECTION_COLORS, INI_COLORS_ORENTATION, _orientationLineColor, _ini);
    MyIniHelper.SetColor(INI_SECTION_COLORS, INI_COLORS_X_AXIS, _xAxisColor, _ini);
    MyIniHelper.SetColor(INI_SECTION_COLORS, INI_COLORS_Y_AXIS, _yAxisColor, _ini);
    MyIniHelper.SetColor(INI_SECTION_COLORS, INI_COLORS_Z_AXIS, _zAxisColor, _ini);

    _ini.SetComment(INI_SECTION_GENERAL, INI_GENERAL_COLLISION_THRESH, "Time before predicted collision that the AH will\nwarn you to pull up (-1 disables warning)");

    string output = _ini.ToString();
    if (!string.Equals(output, Me.CustomData))
        Me.CustomData = output;
}
#endregion

#region Setup
void Setup()
{
    ParseIni();
    Log.Clear();

    if (_artificialHorizon != null)
    {
        _artificialHorizon.UpdateFields(
                _sunRotationAxis,
                _skyColor,
                _groundColor,
                _progradeColor,
                _retrogradeColor,
                _textColor,
                _textBoxColor,
                _textBoxBackground,
                _horizonLineColor,
                _elevationLineColor,
                _spaceBackgroundColor,
                _orientationLineColor,
                _altitudeWarningColor,
                _xAxisColor,
                _yAxisColor,
                _zAxisColor,
                _altitudeTransitionThreshold,
                _timeToCollisionThreshold,
                _showXYZAxis);
    }

    _textSurfaces.Clear();
    _taggedControllers.Clear();
    _allControllers.Clear();
    _soundBlocks.Clear();
    GridTerminalSystem.GetBlocksOfType&lt;IMyTerminalBlock&gt;(null, PopulateLists);

    if (_textSurfaces.Count == 0)
        Log.Error($"No text panels or text surface providers with name tag '{_textSurfaceNameTag}' were found.");

    if (_allControllers.Count == 0)
        Log.Error($"No ship controllers were found.");
    else
    {
        if (_taggedControllers.Count == 0)
            Log.Info($"No ship controllers with name tag \"{_referenceNameTag}\" were found. Using all available ship controllers. (This is NOT an error!)");
        else
            Log.Info($"One or more ship controllers with name tag \"{_referenceNameTag}\" were found. Using these to orient the artificial horizon.");
    }

    if (_soundBlocks.Count == 0)
        Log.Info($"No optional sound blocks with name tag \"{_soundBlockNameTag}\" were found. Sounds will not be played when ground collision is imminent.");

    _lastSetupResult = Log.Write();
}

bool PopulateLists(IMyTerminalBlock block)
{
    if (!block.IsSameConstructAs(Me))
        return false;

    if (StringContains(block.CustomName, _textSurfaceNameTag))
    {
        AddTextSurfaces(block, _textSurfaces);
    }

    var controller = block as IMyShipController;
    if (controller != null)
    {
        _allControllers.Add(controller);
        if (StringContains(block.CustomName, _referenceNameTag))
            _taggedControllers.Add(controller);
        return false;
    }

    var sound = block as IMySoundBlock;
    if (sound != null &amp;&amp; StringContains(block.CustomName, _soundBlockNameTag))
    {
        _soundBlocks.Add(sound);
        if (!sound.IsSoundSelected)
        {
            Log.Warning($"Sound block named \"{sound.CustomName}\" does not have a sound selected.");
        }
    }

    return false;
}

void AddTextSurfaces(IMyTerminalBlock block, List&lt;IMyTextSurface&gt; textSurfaces)
{
    var textSurface = block as IMyTextSurface;
    if (textSurface != null)
    {
        textSurfaces.Add(textSurface);
        return;
    }

    var surfaceProvider = block as IMyTextSurfaceProvider;
    if (surfaceProvider == null)
        return;

    _textSurfaceIni.Clear();
    _textSurfaceIni.TryParse(block.CustomData);

    _iniSections.Clear();
    _textSurfaceIni.GetSections(_iniSections);
    if (_iniSections.Count == 0)
    {
        _customDataSB.Clear();
        _customDataSB.Append(block.CustomData);
        _customDataSB.Replace("---\n", "");

        _textSurfaceIni.EndContent = _customDataSB.ToString();
    }

    int surfaceCount = surfaceProvider.SurfaceCount;
    for (int i = 0; i &lt; surfaceCount; ++i)
    {
        string iniKey = string.Format(INI_TEXT_SURF_TEMPLATE, i);
        bool display = _textSurfaceIni.Get(INI_SECTION_TEXT_SURF, iniKey).ToBoolean(i == 0 &amp;&amp; !(block is IMyProgrammableBlock));
        if (display)
            textSurfaces.Add(surfaceProvider.GetSurface(i));

        _textSurfaceIni.Set(INI_SECTION_TEXT_SURF, iniKey, display);
    }

    string output = _textSurfaceIni.ToString();
    if (!string.Equals(output, block.CustomData))
        block.CustomData = output;
}
#endregion

#region General methods
IMyShipController GetControlledShipController(List&lt;IMyShipController&gt; SCs)
{
    foreach (IMyShipController thisController in SCs)
    {
        if (thisController.IsUnderControl &amp;&amp; thisController.CanControlShip)
            return thisController;
    }

    return null;
}

public static bool StringContains(string source, string toCheck, StringComparison comp = StringComparison.OrdinalIgnoreCase)
{
    return source?.IndexOf(toCheck, comp) &gt;= 0;
}
#endregion

#region Artificial horizon
class ArtificialHorizon
{
    #region Fields
    public bool CollisionWarning { get; private set; } = false;

    Color _skyColor;
    Color _groundColor;
    Color _progradeColor;
    Color _retrogradeColor;
    Color _textColor;
    Color _horizonLineColor;
    Color _elevationLineColor;
    Color _spaceBackgroundColor;
    Color _textBoxBorderColor;
    Color _textBoxBackgroundColor;
    Color _orientationColor;
    Color _altitudeWarningColor;
    Color _xAxisColor;
    Color _yAxisColor;
    Color _zAxisColor;
    double _bearing;
    double _surfaceAltitude;
    double _sealevelAltitude;
    double _altitudeTransitionThreshold;
    double _lastSurfaceAltitude = 0;
    double _collisionTimeThreshold;
    float _speed;
    float _pitch;
    float _roll;
    float _rollCos;
    float _rollSin;
    float _acceleration;
    float _collisionTimeProportion;
    bool _inGravity;
    bool _movingBackwards;
    bool _showXYZAxis = true;
    bool _showPullUp = false;
    bool _lastCollisionWarning = false;
    Vector3D _sunRotationAxis;
    Vector3D _gravity;
    Vector3D _velocity;
    Vector3D _lastVelocity;
    Vector3D _axisZCosVector;
    Vector2 _flattenedVelocity;
    Vector2 _rollOffset;
    Vector2 _pitchOffset;
    Vector2 _xAxisFlattened;
    Vector2 _yAxisFlattened;
    Vector2 _zAxisFlattened;
    Vector2 _xAxisDirn;
    Vector2 _yAxisDirn;
    Vector2 _zAxisDirn;
    Vector2 _xAxisSign;
    Vector2 _yAxisSign;
    Vector2 _zAxisSign;

    Program _program;

    double Altitude
    {
        get
        {
            return _surfaceAltitude &gt;= _altitudeTransitionThreshold ? _sealevelAltitude : _surfaceAltitude;
        }
    }

    string AltitudeLabel
    {
        get
        {
            return _surfaceAltitude &gt;= _altitudeTransitionThreshold ? "Sea level" : "Surface";
        }
    }

    const string PULL_UP_TEXT = "PULL UP";
    const float PULL_UP_TEXT_SIZE = 1.5f;
    const float STATUS_TEXT_SIZE = 1.3f;
    const float ELEVATION_TEXT_SIZE = 0.8f;
    const float ELEVATION_CONSTANT = 1f;
    const float HORIZON_THICKNESS = 5f;
    const float VELOCITY_INDICATOR_LINE_WIDTH = 5f;
    const float ONE_OVER_HALF_PI = 1f / MathHelper.PiOver2;
    const float AXIS_LINE_WIDTH = 8f;
    const float AXIS_TEXT_OFFSET = 24f;
    const float AXIS_LENGTH_SCALE = 0.6f;
    readonly string[] _axisIcon = new string[3];
    readonly byte[] _axisDrawOrder = new byte[3];
    readonly Vector2 RETROGRADE_CROSS_SIZE = new Vector2(32, 4);
    readonly Vector2 VELOCITY_INDICATOR_SIZE = new Vector2(64, 64);
    readonly Vector2 ELEVATION_LADDER_SIZE = new Vector2(175, 32);
    readonly Vector2 TEXT_BOX_SIZE = new Vector2(120, 45);
    readonly Vector2 AXIS_MARKER_SIZE = new Vector2(24, 48);
    readonly Vector2 PULL_UP_CROSS_SIZE = new Vector2(128, 128);
    readonly StringBuilder _pullUpStringBuilder = new StringBuilder();
    readonly Color _axisArrowBackColor = new Color(10, 10, 10);

    enum AxisEnum : byte { None = 0, X = 1, Y = 2, Z = 4 }
    const AxisEnum ALL_AXIS_ENUMS = AxisEnum.X | AxisEnum.Y | AxisEnum.Z;
    #endregion

    #region Ctor and updating fields
    public ArtificialHorizon(
            Vector3D sunRotationAxis,
            Color skyColor,
            Color groundColor,
            Color progradeColor,
            Color retrogradeColor,
            Color textColor,
            Color textBoxColor,
            Color textBackgroundColor,
            Color horizonLineColor,
            Color elevationLineColor,
            Color spaceBackgroundColor,
            Color orientationColor,
            Color altitudeWarningColor,
            Color xAxisColor,
            Color yAxisColor,
            Color zAxisColor,
            double altitudeTransitionThreshold,
            double collisionTimeThreshold,
            bool showXYZAxis,
            Program program)
    {
        UpdateFields(
                sunRotationAxis,
                skyColor,
                groundColor,
                progradeColor,
                retrogradeColor,
                textColor,
                textBoxColor,
                textBackgroundColor,
                horizonLineColor,
                elevationLineColor,
                spaceBackgroundColor,
                orientationColor,
                altitudeWarningColor,
                xAxisColor,
                yAxisColor,
                zAxisColor,
                altitudeTransitionThreshold,
                collisionTimeThreshold,
                showXYZAxis);
        _pullUpStringBuilder.Append(PULL_UP_TEXT);
        _program = program;
    }

    public void UpdateFields(
            Vector3D sunRotationAxis,
            Color skyColor,
            Color groundColor,
            Color progradeColor,
            Color retrogradeColor,
            Color textColor,
            Color textBoxColor,
            Color textBackgroundColor,
            Color horizonLineColor,
            Color elevationLineColor,
            Color spaceBackgroundColor,
            Color orientationColor,
            Color altitudeWarningColor,
            Color xAxisColor,
            Color yAxisColor,
            Color zAxisColor,
            double altitudeTransitionThreshold,
            double collisionTimeThreshold,
            bool showXYZAxis)
    {
        _sunRotationAxis = sunRotationAxis;
        _skyColor = skyColor;
        _groundColor = groundColor;
        _progradeColor = progradeColor;
        _retrogradeColor = retrogradeColor;
        _textColor = textColor;
        _textBoxBorderColor = textBoxColor;
        _textBoxBackgroundColor = textBackgroundColor;
        _horizonLineColor = horizonLineColor;
        _elevationLineColor = elevationLineColor;
        _spaceBackgroundColor = spaceBackgroundColor;
        _orientationColor = orientationColor;
        _altitudeWarningColor = altitudeWarningColor;
        _xAxisColor = xAxisColor;
        _yAxisColor = yAxisColor;
        _zAxisColor = zAxisColor;
        _altitudeTransitionThreshold = altitudeTransitionThreshold;
        _collisionTimeThreshold = collisionTimeThreshold;
        _showXYZAxis = showXYZAxis;
    }
    #endregion

    #region Cached calculations
    public void CalculateParameters(IMyShipController controller, double updatesPerSecond)
    {
        _velocity = controller.GetShipVelocities().LinearVelocity;
        _acceleration = (float)((_velocity - _lastVelocity) * updatesPerSecond).Length();
        _lastVelocity = _velocity;

        if (!Vector3D.IsZero(_velocity, 1e-2))
        {
            _speed = (float)_velocity.Normalize();
            Vector3D localVelocity = Vector3D.Rotate(_velocity, MatrixD.Transpose(controller.WorldMatrix));
            _flattenedVelocity.X = (float)Math.Asin(MathHelper.Clamp(localVelocity.X, -1, 1)) * ONE_OVER_HALF_PI;
            _flattenedVelocity.Y = (float)Math.Asin(MathHelper.Clamp(-localVelocity.Y, -1, 1)) * ONE_OVER_HALF_PI;
            _movingBackwards = localVelocity.Z &gt; 1e-3;
        }
        else
        {
            _speed = 0;
            _flattenedVelocity = Vector2.Zero;
            _movingBackwards = false;
        }

        _gravity = controller.GetNaturalGravity();
        _inGravity = !Vector3D.IsZero(_gravity);
        if (_inGravity)
        {
            CalculateArtificialHorizonParameters(controller, updatesPerSecond);
        }
        else
        {
            CalculateSpaceParameters(controller);
        }
    }

    void CalculateArtificialHorizonParameters(IMyShipController controller, double updatesPerSecond)
    {
        Vector3D up = -_gravity;
        Vector3D left = Vector3D.Cross(up, controller.WorldMatrix.Forward);
        Vector3D forward = Vector3D.Cross(left, up);

        var localUpVector = Vector3D.Rotate(up, MatrixD.Transpose(controller.WorldMatrix));
        var flattenedUpVector = new Vector3D(localUpVector.X, localUpVector.Y, 0);
        _roll = (float)VectorMath.AngleBetween(flattenedUpVector, Vector3D.Up) * Math.Sign(Vector3D.Dot(Vector3D.Right, flattenedUpVector));
        _pitch = (float)VectorMath.AngleBetween(forward, controller.WorldMatrix.Forward) * Math.Sign(Vector3D.Dot(up, controller.WorldMatrix.Forward));

        _rollCos = MyMath.FastCos(_roll);
        _rollSin = MyMath.FastSin(_roll);

        double alt;
        controller.TryGetPlanetElevation(MyPlanetElevation.Surface, out alt);
        _surfaceAltitude = alt;

        controller.TryGetPlanetElevation(MyPlanetElevation.Sealevel, out alt);
        _sealevelAltitude = alt;

        double terrainHeightDerivative = Math.Max((_lastSurfaceAltitude - _surfaceAltitude) * updatesPerSecond, 0);
        double timeTillGroundCollision = _surfaceAltitude / (terrainHeightDerivative);
        _collisionTimeProportion = (float)(timeTillGroundCollision / _collisionTimeThreshold);
        CollisionWarning = _speed &gt; 10 &amp;&amp; timeTillGroundCollision &lt;= _collisionTimeThreshold;
        if (_lastCollisionWarning != CollisionWarning)
            _showPullUp = true;
        else
            _showPullUp = !_showPullUp;

        _lastCollisionWarning = CollisionWarning;
        _lastSurfaceAltitude = _surfaceAltitude;

        Vector3D eastVec = Vector3D.Cross(_gravity, _sunRotationAxis);
        Vector3D northVec = Vector3D.Cross(eastVec, _gravity);
        Vector3D heading = VectorMath.Rejection(controller.WorldMatrix.Forward, _gravity);

        _bearing = MathHelper.ToDegrees(VectorMath.AngleBetween(heading, northVec));
        if (Vector3D.Dot(controller.WorldMatrix.Forward, eastVec) &lt; 0)
            _bearing = 360 - _bearing;
    }

    void CalculateSpaceParameters(IMyShipController controller)
    {
        // Flattening axes onto the screen surface
        MatrixD transposedMatrix = MatrixD.Transpose(controller.WorldMatrix);
        Vector3D xTrans = Vector3D.Rotate(Vector3D.UnitX, transposedMatrix);
        Vector3D yTrans = Vector3D.Rotate(Vector3D.UnitY, transposedMatrix);
        Vector3D zTrans = Vector3D.Rotate(Vector3D.UnitZ, transposedMatrix);

        _xAxisFlattened.X = (float)(xTrans.X) * AXIS_LENGTH_SCALE;
        _xAxisFlattened.Y = (float)(-xTrans.Y) * AXIS_LENGTH_SCALE;
        _yAxisFlattened.X = (float)(yTrans.X) * AXIS_LENGTH_SCALE;
        _yAxisFlattened.Y = (float)(-yTrans.Y) * AXIS_LENGTH_SCALE;
        _zAxisFlattened.X = (float)(zTrans.X) * AXIS_LENGTH_SCALE;
        _zAxisFlattened.Y = (float)(-zTrans.Y) * AXIS_LENGTH_SCALE;

        // Getting non-zero sign of vectors for positioning the axis label text
        _xAxisSign = Vector2.SignNonZero(_xAxisFlattened);
        _yAxisSign = Vector2.SignNonZero(_yAxisFlattened);
        _zAxisSign = Vector2.SignNonZero(_zAxisFlattened);

        // Get normalized axis directions for drawing arrow heads
        if (!Vector2.IsZero(ref _xAxisFlattened, MathHelper.EPSILON))
            _xAxisDirn = Vector2.Normalize(_xAxisFlattened);

        if (!Vector2.IsZero(ref _yAxisFlattened, MathHelper.EPSILON))
            _yAxisDirn = Vector2.Normalize(_yAxisFlattened);

        if (!Vector2.IsZero(ref _zAxisFlattened, MathHelper.EPSILON))
            _zAxisDirn = Vector2.Normalize(_zAxisFlattened);

        // Getting the icons for the axes based on if they are pointing at or away from the user
        _axisIcon[0] = GetAxisIcon(xTrans.Z);
        _axisIcon[1] = GetAxisIcon(yTrans.Z);
        _axisIcon[2] = GetAxisIcon(zTrans.Z);

        _axisZCosVector = new Vector3D(xTrans.Z, yTrans.Z, zTrans.Z);
        double max = _axisZCosVector.Max();
        double min = _axisZCosVector.Min();

        // Determining the order to draw the axes so that perspective looks correct.
        AxisEnum usedAxes = AxisEnum.None;
        if (max == _axisZCosVector.X)
        {
            _axisDrawOrder[2] = (byte)AxisEnum.X;
            usedAxes |= AxisEnum.X;
        }
        else if (max == _axisZCosVector.Y)
        {
            _axisDrawOrder[2] = (byte)AxisEnum.Y;
            usedAxes |= AxisEnum.Y;
        }
        else
        {
            _axisDrawOrder[2] = (byte)AxisEnum.Z;
            usedAxes |= AxisEnum.Z;
        }

        if (min == _axisZCosVector.X)
        {
            _axisDrawOrder[0] = (byte)AxisEnum.X;
            usedAxes |= AxisEnum.X;

        }
        else if (min == _axisZCosVector.Y)
        {
            _axisDrawOrder[0] = (byte)AxisEnum.Y;
            usedAxes |= AxisEnum.Y;
        }
        else
        {
            _axisDrawOrder[0] = (byte)AxisEnum.Z;
            usedAxes |= AxisEnum.Z;
        }

        _axisDrawOrder[1] = (byte)MathHelper.Clamp((byte)(ALL_AXIS_ENUMS &amp; ~usedAxes), 0, (byte)ALL_AXIS_ENUMS);
    }

    string GetAxisIcon(double z)
    {
        return z &lt; 0 ? "CircleHollow" : "Circle";
    }
    #endregion

    #region Draw functions
    public void Draw(IMyTextSurface surface)
    {
        surface.ContentType = ContentType.SCRIPT;
        surface.Script = "";
        surface.BackgroundAlpha = 0;

        Vector2 surfaceSize = surface.TextureSize;
        Vector2 screenCenter = surfaceSize * 0.5f;
        Vector2 avgViewportSize = surface.SurfaceSize - 12f;

        Vector2 scaleVec = (surfaceSize + avgViewportSize) * 0.5f / 512f;
        float scale = Math.Min(scaleVec.X, scaleVec.Y);
        float minSideLength = Math.Min(avgViewportSize.X, avgViewportSize.Y);
        Vector2 squareViewportSize = new Vector2(minSideLength, minSideLength);
        avgViewportSize = (avgViewportSize + squareViewportSize) * 0.5f;

        using (var frame = surface.DrawFrame())
        {
            if (_inGravity)
            {
                DrawArtificialHorizon(frame, screenCenter, scale, minSideLength);
                DrawTextBoxes(frame, screenCenter, avgViewportSize, scale, $"{_speed:n1}", $"{Altitude:0}", $"{_bearing:0}°");
                DrawAltitudeWarning(frame, screenCenter, avgViewportSize, scale, surface);
            }
            else
            {
                DrawSpace(frame, screenCenter, minSideLength * 0.5f, scale);
                DrawTextBoxes(frame, screenCenter, avgViewportSize, scale, $"{_speed:n1}", $"{_acceleration:n1}");
            }

            // Draw orientation indicator
            DrawLine(frame, new Vector2(0, screenCenter.Y), new Vector2(screenCenter.X - 64 * scale, screenCenter.Y), HORIZON_THICKNESS * scale, _orientationColor);
            DrawLine(frame, new Vector2(screenCenter.X + 64 * scale, screenCenter.Y), new Vector2(screenCenter.X * 2f, screenCenter.Y), HORIZON_THICKNESS * scale, _orientationColor);

            Vector2 scaledIconSize = VELOCITY_INDICATOR_SIZE * scale;
            MySprite centerSprite = new MySprite(SpriteType.TEXTURE, "AH_BoreSight", size: scaledIconSize * 1.2f, position: screenCenter + Vector2.UnitY * scaledIconSize * 0.5f, color: _orientationColor);
            centerSprite.RotationOrScale = -MathHelper.PiOver2;
            frame.Add(centerSprite);

            // Draw velocity indicator
            MySprite velocitySprite = new MySprite(SpriteType.TEXTURE, "AH_VelocityVector", size: scaledIconSize, color: !_movingBackwards ? _progradeColor : _retrogradeColor);
            float sign = _movingBackwards ? -1 : 1;
            velocitySprite.Position = screenCenter + (squareViewportSize * 0.5f * _flattenedVelocity * sign);
            frame.Add(velocitySprite);

            if (_movingBackwards)
            {
                Vector2 retrogradeCrossSize = RETROGRADE_CROSS_SIZE * scale;
                MySprite retrograteSprite = new MySprite(SpriteType.TEXTURE, "SquareSimple", size: retrogradeCrossSize, color: _retrogradeColor);
                retrograteSprite.Position = velocitySprite.Position;
                retrograteSprite.RotationOrScale = MathHelper.PiOver4;
                frame.Add(retrograteSprite);
                retrograteSprite.RotationOrScale += MathHelper.PiOver2;
                frame.Add(retrograteSprite);
            }
        }
    }

    void DrawTextBoxes(MySpriteDrawFrame frame, Vector2 screenCenter, Vector2 screenSize, float scale, string leftText, string rightText, string topText = "")
    {
        Vector2 boxSize = TEXT_BOX_SIZE * scale;
        float textSize = STATUS_TEXT_SIZE * scale;
        Vector2 leftBoxPos = screenCenter + new Vector2(-0.5f * (screenSize.X - boxSize.X), boxSize.Y * 0.5f);//+ new Vector2(screenSize.X * -0.40f, boxSize.Y * 0.5f);
        Vector2 rightBoxPos = screenCenter + new Vector2(0.5f * (screenSize.X - boxSize.X), boxSize.Y * 0.5f); //+ new Vector2(screenSize.X * 0.40f, boxSize.Y * 0.5f);
        string leftTitle = "SPEED";
        string rightTitle = _inGravity ? "ALT" : "ACCEL";

        DrawTextBox(frame, boxSize, leftBoxPos, _textColor, _textBoxBorderColor, _textBoxBackgroundColor, textSize, leftText, leftTitle);
        DrawTextBox(frame, boxSize, rightBoxPos, _textColor, _textBoxBorderColor, _textBoxBackgroundColor, textSize, rightText, rightTitle);

        if (_inGravity)
        {
            MySprite altMode = MySprite.CreateText(AltitudeLabel, "Debug", _textColor, STATUS_TEXT_SIZE * scale * 0.75f, TextAlignment.RIGHT);
            altMode.Position = screenCenter + new Vector2(screenSize.X * 0.5f, boxSize.Y * 1.0f);
            frame.Add(altMode);
        }

        if (!string.IsNullOrWhiteSpace(topText))
        {
            Vector2 topBoxPos = screenCenter + new Vector2(0, screenSize.Y * -0.40f);
            DrawTextBox(frame, boxSize, topBoxPos, _textColor, _textBoxBorderColor, _textBoxBackgroundColor, textSize, topText); //, drawBackground: false);
        }
    }

    void DrawTextBox(MySpriteDrawFrame frame, Vector2 size, Vector2 position, Color textColor, Color borderColor, Color backgroundColor, float textSize, string text, string title = "")
    {
        Vector2 textPos = position;
        textPos.Y -= size.Y * 0.5f;

        Vector2 titlePos = position;
        titlePos.Y -= size.Y * 1.5f;

        MySprite background = new MySprite(SpriteType.TEXTURE, "SquareSimple", color: backgroundColor, size: size);
        background.Position = position;
        frame.Add(background);

        MySprite perimeter = new MySprite(SpriteType.TEXTURE, "AH_TextBox", color: borderColor, size: size);
        perimeter.Position = position;

        MySprite textSprite = MySprite.CreateText(text, "Debug", textColor, scale: textSize);
        textSprite.Position = textPos;

        frame.Add(perimeter);
        frame.Add(textSprite);

        if (!string.IsNullOrWhiteSpace(title))
        {
            MySprite titleSprite = MySprite.CreateText(title, "Debug", textColor, scale: textSize);
            titleSprite.Position = titlePos;
            frame.Add(titleSprite);
        }
    }

    void DrawArtificialHorizon(MySpriteDrawFrame frame, Vector2 screenCenter, float scale, float minSideLength)
    {
        MySprite groundSprite = new MySprite(SpriteType.TEXTURE, "SquareSimple", color: _groundColor);
        frame.Add(groundSprite);

        Vector2 skySpriteSize = screenCenter * 6f;
        _rollOffset.Y = skySpriteSize.Y * 0.5f * (1 - _rollCos);
        _rollOffset.X = skySpriteSize.Y * 0.5f * (_rollSin);
        _pitchOffset.Y = _rollCos * minSideLength * 0.5f;
        _pitchOffset.X = -_rollSin * minSideLength * 0.5f;
        float pitchProportion = _pitch / MathHelper.PiOver2;

        MySprite skySprite = new MySprite(SpriteType.TEXTURE, "SquareSimple", color: _skyColor, size: skySpriteSize);
        skySprite.RotationOrScale = _roll;

        Vector2 skyMidPt = screenCenter + new Vector2(0, -skySpriteSize.Y * 0.5f); //surfaceSize.Y * new Vector2(0.5f, -1f);
        skySprite.Position = skyMidPt + _rollOffset + _pitchOffset * pitchProportion;
        frame.Add(skySprite);

        // Draw horizon line
        MySprite horizonLineSprite = new MySprite(SpriteType.TEXTURE, "SquareSimple", color: _horizonLineColor, size: new Vector2(skySpriteSize.X, HORIZON_THICKNESS * scale));
        horizonLineSprite.RotationOrScale = _roll;
        horizonLineSprite.Position = screenCenter + _pitchOffset * pitchProportion;
        frame.Add(horizonLineSprite);

        for (int i = -90; i &lt;= 90; i += 30)
        {
            if (i == 0)
                continue;
            DrawElevationLadder(frame, screenCenter, ELEVATION_LADDER_SIZE, pitchProportion, i, scale, _elevationLineColor, true);
        }
    }

    void DrawAltitudeWarning(MySpriteDrawFrame frame, Vector2 screenCenter, Vector2 screenSize, float scale, IMyTextSurface surface)
    {
        if (CollisionWarning)
        {
            if (_showPullUp)
            {
                float textSize = PULL_UP_TEXT_SIZE * scale;
                Vector2 textBoxSize = surface.MeasureStringInPixels(_pullUpStringBuilder, "Debug", textSize) + scale * 12f;
                Vector2 textPosition = screenCenter + new Vector2(0, screenSize.Y * 0.25f);
                DrawTextBox(frame, textBoxSize, textPosition, _altitudeWarningColor, _altitudeWarningColor, _textBoxBackgroundColor, textSize, PULL_UP_TEXT);
            }

            Vector2 warningCrossSize = PULL_UP_CROSS_SIZE * scale;
            Vector2 warningCrossPosition = new Vector2(-screenSize.X * 0.5f * _collisionTimeProportion, 0);
            MySprite warningCrossHalf = MySprite.CreateSprite("AH_BoreSight", screenCenter + warningCrossPosition, warningCrossSize);
            warningCrossHalf.Color = _altitudeWarningColor;
            warningCrossHalf.RotationOrScale = 0;

            frame.Add(warningCrossHalf);

            warningCrossHalf.RotationOrScale = MathHelper.Pi;
            warningCrossHalf.Position = screenCenter - warningCrossPosition;

            frame.Add(warningCrossHalf);
        }
    }

    void DrawElevationLadder(MySpriteDrawFrame frame, Vector2 midPoint, Vector2 size, float basePitchProportion, float elevationAngleDeg, float scale, Color color, bool drawText)
    {
        float pitchProportion = MathHelper.ToRadians(-elevationAngleDeg) / MathHelper.PiOver2;
        string textureName = pitchProportion &lt;= 0 ? "AH_GravityHudPositiveDegrees" : "AH_GravityHudNegativeDegrees";
        Vector2 scaledSize = size * scale;

        MySprite ladderSprite = new MySprite(SpriteType.TEXTURE, textureName, color: _elevationLineColor, size: scaledSize);
        ladderSprite.RotationOrScale = _roll + (pitchProportion &lt;= 0 ? MathHelper.Pi : 0);
        ladderSprite.Position = midPoint + (pitchProportion + basePitchProportion) * _pitchOffset;
        frame.Add(ladderSprite);

        if (!drawText)
            return;

        Vector2 textHorizontalOffset = new Vector2(_rollCos, _rollSin) * (scaledSize.X + 48f * scale) * 0.5f;
        Vector2 textVerticalOffset = Vector2.UnitY * -24f * scale * (pitchProportion &lt;= 0 ? 0 : 1);

        MySprite text = MySprite.CreateText($"{elevationAngleDeg}", "Debug", _elevationLineColor);
        text.RotationOrScale = ELEVATION_TEXT_SIZE * scale;
        text.Position = ladderSprite.Position + textHorizontalOffset + textVerticalOffset;
        frame.Add(text);

        text.Position = ladderSprite.Position - textHorizontalOffset + textVerticalOffset;
        frame.Add(text);
    }

    void DrawSpace(MySpriteDrawFrame frame, Vector2 screenCenter, float halfExtent, float scale)
    {
        MySprite background = new MySprite(SpriteType.TEXTURE, "SquareSimple", color: _spaceBackgroundColor);
        frame.Add(background);

        if (!_showXYZAxis)
            return;

        float textSize = scale * STATUS_TEXT_SIZE;
        float lineSize = scale * AXIS_LINE_WIDTH;
        float offset = scale * AXIS_TEXT_OFFSET;
        Vector2 markerSize = scale * AXIS_MARKER_SIZE;
        Vector2 xPos = screenCenter + _xAxisFlattened * halfExtent;
        Vector2 yPos = screenCenter + _yAxisFlattened * halfExtent;
        Vector2 zPos = screenCenter + _zAxisFlattened * halfExtent;

        MySprite xLine = DrawLine(screenCenter, xPos, lineSize, _xAxisColor);
        MySprite yLine = DrawLine(screenCenter, yPos, lineSize, _yAxisColor);
        MySprite zLine = DrawLine(screenCenter, zPos, lineSize, _zAxisColor);

        MySprite xLabel = MySprite.CreateText("X", "Debug", _xAxisColor, textSize, TextAlignment.CENTER);
        xLabel.Position = xPos + offset * _xAxisSign - Vector2.UnitY * markerSize.Y;

        MySprite yLabel = MySprite.CreateText("Y", "Debug", _yAxisColor, textSize, TextAlignment.CENTER);
        yLabel.Position = yPos + offset * _yAxisSign - Vector2.UnitY * markerSize.Y; ;

        MySprite zLabel = MySprite.CreateText("Z", "Debug", _zAxisColor, textSize, TextAlignment.CENTER);
        zLabel.Position = zPos + offset * _zAxisSign - Vector2.UnitY * markerSize.Y; ;

        foreach (var axis in _axisDrawOrder)
        {
            if (axis == (byte)AxisEnum.X)
            {
                DrawArrowHead(frame, xPos, AXIS_MARKER_SIZE * scale, _xAxisDirn, _axisZCosVector.X, _xAxisColor, _axisArrowBackColor);
                frame.Add(xLine);
                frame.Add(xLabel);
            }
            else if (axis == (byte)AxisEnum.Y)
            {
                DrawArrowHead(frame, yPos, AXIS_MARKER_SIZE * scale, _yAxisDirn, _axisZCosVector.Y, _yAxisColor, _axisArrowBackColor);
                frame.Add(yLine);
                frame.Add(yLabel);
            }
            else
            {
                DrawArrowHead(frame, zPos, AXIS_MARKER_SIZE * scale, _zAxisDirn, _axisZCosVector.Z, _zAxisColor, _axisArrowBackColor);
                frame.Add(zLine);
                frame.Add(zLabel);
            }
        }
    }

    MySprite DrawLine(Vector2 point1, Vector2 point2, float width, Color color)
    {
        Vector2 position = 0.5f * (point1 + point2);
        Vector2 diff = point1 - point2;
        float length = diff.Length();
        if (length &gt; 0)
            diff /= length;

        Vector2 size = new Vector2(length, width);
        float angle = (float)Math.Acos(Vector2.Dot(diff, Vector2.UnitX));
        angle *= Math.Sign(Vector2.Dot(diff, Vector2.UnitY));

        MySprite sprite = MySprite.CreateSprite("SquareSimple", position, size);
        sprite.RotationOrScale = angle;
        sprite.Color = color;
        return sprite;
    }

    void DrawLine(MySpriteDrawFrame frame, Vector2 point1, Vector2 point2, float width, Color color)
    {
        Vector2 position = 0.5f * (point1 + point2);
        Vector2 diff = point1 - point2;
        float length = diff.Length();
        if (length &gt; 0)
            diff /= length;

        Vector2 size = new Vector2(length, width);
        float angle = (float)Math.Acos(Vector2.Dot(diff, Vector2.UnitX));
        angle *= Math.Sign(Vector2.Dot(diff, Vector2.UnitY));

        MySprite sprite = MySprite.CreateSprite("SquareSimple", position, size);
        sprite.RotationOrScale = angle;
        sprite.Color = color;
        frame.Add(sprite);
    }

    void DrawArrowHead(MySpriteDrawFrame frame, Vector2 position, Vector2 arrowSize, Vector2 flattenedDirection, double depthSin, Color color, Color backColor)
    {
        if (Math.Abs(flattenedDirection.LengthSquared() - 1) &lt; MathHelper.EPSILON)
            flattenedDirection.Normalize();

        arrowSize.Y *= (float)Math.Sqrt(1 - depthSin * depthSin);
        Vector2 baseSize = Vector2.One * arrowSize.X;
        baseSize.Y *= (float)Math.Abs(depthSin);

        float angle = (float)Math.Acos(Vector2.Dot(flattenedDirection, -Vector2.UnitY));
        angle *= Math.Sign(Vector2.Dot(flattenedDirection, Vector2.UnitX));

        Vector2 trianglePosition = position + flattenedDirection * arrowSize.Y * 0.5f;

        MySprite circle = MySprite.CreateSprite("Circle", position, baseSize);
        circle.Color = depthSin &gt;= 0 ? color : backColor;
        circle.RotationOrScale = angle;

        MySprite triangle = MySprite.CreateSprite("Triangle", trianglePosition, arrowSize);
        triangle.Color = color;
        triangle.RotationOrScale = angle;

        frame.Add(triangle);
        frame.Add(circle);
    }
    #endregion
}
#endregion

#region Other classes
#region MyIni helper
public static class MyIniHelper
{
    /// &lt;summary&gt;
    /// Adds a Vector3D to a MyIni object
    /// &lt;/summary&gt;
    public static void SetVector3D(string sectionName, string vectorName, ref Vector3D vector, MyIni ini)
    {
        ini.Set(sectionName, vectorName, vector.ToString());
    }

    /// &lt;summary&gt;
    /// Parses a MyIni object for a Vector3D
    /// &lt;/summary&gt;
    public static Vector3D GetVector3D(string sectionName, string vectorName, MyIni ini, Vector3D? defaultVector = null)
    {
        var vector = Vector3D.Zero;
        if (Vector3D.TryParse(ini.Get(sectionName, vectorName).ToString(), out vector))
            return vector;
        else if (defaultVector.HasValue)
            return defaultVector.Value;
        return default(Vector3D);
    }

    /// &lt;summary&gt;
    /// Adds a Color to a MyIni object
    /// &lt;/summary&gt;
    public static void SetColor(string sectionName, string itemName, Color color, MyIni ini)
    {
        string colorString = string.Format("{0}, {1}, {2}, {3}", color.R, color.G, color.B, color.A);
        ini.Set(sectionName, itemName, colorString);
    }

    /// &lt;summary&gt;
    /// Parses a MyIni for a Color
    /// &lt;/summary&gt;
    public static Color GetColor(string sectionName, string itemName, MyIni ini, Color? defaultChar = null)
    {
        string rgbString = ini.Get(sectionName, itemName).ToString("null");
        string[] rgbSplit = rgbString.Split(',');

        int r = 0, g = 0, b = 0, a = 0;
        if (rgbSplit.Length != 4)
        {
            if (defaultChar.HasValue)
                return defaultChar.Value;
            else
                return Color.Transparent;
        }

        int.TryParse(rgbSplit[0].Trim(), out r);
        int.TryParse(rgbSplit[1].Trim(), out g);
        int.TryParse(rgbSplit[2].Trim(), out b);
        bool hasAlpha = int.TryParse(rgbSplit[3].Trim(), out a);
        if (!hasAlpha)
            a = 255;

        r = MathHelper.Clamp(r, 0, 255);
        g = MathHelper.Clamp(g, 0, 255);
        b = MathHelper.Clamp(b, 0, 255);
        a = MathHelper.Clamp(a, 0, 255);

        return new Color(r, g, b, a);
    }
}
#endregion

#region Vector math
public static class VectorMath
{
    /// &lt;summary&gt;
    ///  Normalizes a vector only if it is non-zero and non-unit
    /// &lt;/summary&gt;
    public static Vector3D SafeNormalize(Vector3D a)
    {
        if (Vector3D.IsZero(a))
            return Vector3D.Zero;

        if (Vector3D.IsUnit(ref a))
            return a;

        return Vector3D.Normalize(a);
    }

    /// &lt;summary&gt;
    /// Reflects vector a over vector b with an optional rejection factor
    /// &lt;/summary&gt;
    public static Vector3D Reflection(Vector3D a, Vector3D b, double rejectionFactor = 1) //reflect a over b
    {
        Vector3D project_a = Projection(a, b);
        Vector3D reject_a = a - project_a;
        return project_a - reject_a * rejectionFactor;
    }

    /// &lt;summary&gt;
    /// Rejects vector a on vector b
    /// &lt;/summary&gt;
    public static Vector3D Rejection(Vector3D a, Vector3D b) //reject a on b
    {
        if (Vector3D.IsZero(a) || Vector3D.IsZero(b))
            return Vector3D.Zero;

        return a - a.Dot(b) / b.LengthSquared() * b;
    }

    /// &lt;summary&gt;
    /// Projects vector a onto vector b
    /// &lt;/summary&gt;
    public static Vector3D Projection(Vector3D a, Vector3D b)
    {
        if (Vector3D.IsZero(a) || Vector3D.IsZero(b))
            return Vector3D.Zero;

        if (Vector3D.IsUnit(ref b))
            return a.Dot(b) * b;

        return a.Dot(b) / b.LengthSquared() * b;
    }

    /// &lt;summary&gt;
    /// Scalar projection of a onto b
    /// &lt;/summary&gt;
    public static double ScalarProjection(Vector3D a, Vector3D b)
    {
        if (Vector3D.IsZero(a) || Vector3D.IsZero(b))
            return 0;

        if (Vector3D.IsUnit(ref b))
            return a.Dot(b);

        return a.Dot(b) / b.Length();
    }

    /// &lt;summary&gt;
    /// Computes angle between 2 vectors
    /// &lt;/summary&gt;
    public static double AngleBetween(Vector3D a, Vector3D b) //returns radians
    {
        if (Vector3D.IsZero(a) || Vector3D.IsZero(b))
            return 0;
        else
            return Math.Acos(MathHelper.Clamp(a.Dot(b) / Math.Sqrt(a.LengthSquared() * b.LengthSquared()), -1, 1));
    }

    /// &lt;summary&gt;
    /// Computes cosine of the angle between 2 vectors
    /// &lt;/summary&gt;
    public static double CosBetween(Vector3D a, Vector3D b, bool useSmallestAngle = false) //returns radians
    {
        if (Vector3D.IsZero(a) || Vector3D.IsZero(b))
            return 0;
        else
            return MathHelper.Clamp(a.Dot(b) / Math.Sqrt(a.LengthSquared() * b.LengthSquared()), -1, 1);
    }

    /// &lt;summary&gt;
    /// Returns if the normalized dot product between two vectors is greater than the tolerance.
    /// This is helpful for determining if two vectors are "more parallel" than the tolerance.
    /// &lt;/summary&gt;
    public static bool IsDotProductWithinTolerance(Vector3D a, Vector3D b, double tolerance)
    {
        double dot = Vector3D.Dot(a, b);
        double num = a.LengthSquared() * b.LengthSquared() * tolerance * tolerance;
        return dot * dot &gt; num;
    }
}
#endregion

#region Scheduler
/// &lt;summary&gt;
/// Class for scheduling actions to occur at specific frequencies. Actions can be updated in parallel or in sequence (queued).
/// &lt;/summary&gt;
public class Scheduler
{
    readonly List&lt;ScheduledAction&gt; _scheduledActions = new List&lt;ScheduledAction&gt;();
    readonly List&lt;ScheduledAction&gt; _actionsToDispose = new List&lt;ScheduledAction&gt;();
    Queue&lt;ScheduledAction&gt; _queuedActions = new Queue&lt;ScheduledAction&gt;();
    const double runtimeToRealtime = (1.0 / 60.0) / 0.0166666;
    private readonly Program _program;
    private ScheduledAction _currentlyQueuedAction = null;

    /// &lt;summary&gt;
    /// Constructs a scheduler object with timing based on the runtime of the input program.
    /// &lt;/summary&gt;
    /// &lt;param name="program"&gt;&lt;/param&gt;
    public Scheduler(Program program)
    {
        _program = program;
    }

    /// &lt;summary&gt;
    /// Updates all ScheduledAcions in the schedule and the queue.
    /// &lt;/summary&gt;
    public void Update()
    {
        double deltaTime = Math.Max(0, _program.Runtime.TimeSinceLastRun.TotalSeconds * runtimeToRealtime);

        _actionsToDispose.Clear();
        foreach (ScheduledAction action in _scheduledActions)
        {
            action.Update(deltaTime);
            if (action.JustRan &amp;&amp; action.DisposeAfterRun)
            {
                _actionsToDispose.Add(action);
            }
        }

        // Remove all actions that we should dispose
        _scheduledActions.RemoveAll((x) =&gt; _actionsToDispose.Contains(x));

        if (_currentlyQueuedAction == null)
        {
            // If queue is not empty, populate current queued action
            if (_queuedActions.Count != 0)
                _currentlyQueuedAction = _queuedActions.Dequeue();
        }

        // If queued action is populated
        if (_currentlyQueuedAction != null)
        {
            _currentlyQueuedAction.Update(deltaTime);
            if (_currentlyQueuedAction.JustRan)
            {
                // If we should recycle, add it to the end of the queue
                if (!_currentlyQueuedAction.DisposeAfterRun)
                    _queuedActions.Enqueue(_currentlyQueuedAction);

                // Set the queued action to null for the next cycle
                _currentlyQueuedAction = null;
            }
        }
    }

    /// &lt;summary&gt;
    /// Adds an Action to the schedule. All actions are updated each update call.
    /// &lt;/summary&gt;
    /// &lt;param name="action"&gt;&lt;/param&gt;
    /// &lt;param name="updateFrequency"&gt;&lt;/param&gt;
    /// &lt;param name="disposeAfterRun"&gt;&lt;/param&gt;
    public void AddScheduledAction(Action action, double updateFrequency, bool disposeAfterRun = false)
    {
        ScheduledAction scheduledAction = new ScheduledAction(action, updateFrequency, disposeAfterRun);
        _scheduledActions.Add(scheduledAction);
    }

    /// &lt;summary&gt;
    /// Adds a ScheduledAction to the schedule. All actions are updated each update call.
    /// &lt;/summary&gt;
    /// &lt;param name="scheduledAction"&gt;&lt;/param&gt;
    public void AddScheduledAction(ScheduledAction scheduledAction)
    {
        _scheduledActions.Add(scheduledAction);
    }

    /// &lt;summary&gt;
    /// Adds an Action to the queue. Queue is FIFO.
    /// &lt;/summary&gt;
    /// &lt;param name="action"&gt;&lt;/param&gt;
    /// &lt;param name="updateInterval"&gt;&lt;/param&gt;
    /// &lt;param name="disposeAfterRun"&gt;&lt;/param&gt;
    public void AddQueuedAction(Action action, double updateInterval, bool disposeAfterRun = false)
    {
        if (updateInterval &lt;= 0)
        {
            updateInterval = 0.001; // avoids divide by zero
        }
        ScheduledAction scheduledAction = new ScheduledAction(action, 1.0 / updateInterval, disposeAfterRun);
        _queuedActions.Enqueue(scheduledAction);
    }

    /// &lt;summary&gt;
    /// Adds a ScheduledAction to the queue. Queue is FIFO.
    /// &lt;/summary&gt;
    /// &lt;param name="scheduledAction"&gt;&lt;/param&gt;
    public void AddQueuedAction(ScheduledAction scheduledAction)
    {
        _queuedActions.Enqueue(scheduledAction);
    }
}

public class ScheduledAction
{
    public bool JustRan { get; private set; } = false;
    public bool DisposeAfterRun { get; private set; } = false;
    public double TimeSinceLastRun { get; private set; } = 0;
    public readonly double RunInterval;

    private readonly double _runFrequency;
    private readonly Action _action;
    protected bool _justRun = false;

    /// &lt;summary&gt;
    /// Class for scheduling an action to occur at a specified frequency (in Hz).
    /// &lt;/summary&gt;
    /// &lt;param name="action"&gt;Action to run&lt;/param&gt;
    /// &lt;param name="runFrequency"&gt;How often to run in Hz&lt;/param&gt;
    public ScheduledAction(Action action, double runFrequency, bool removeAfterRun = false)
    {
        _action = action;
        _runFrequency = runFrequency;
        RunInterval = 1.0 / _runFrequency;
        DisposeAfterRun = removeAfterRun;
    }

    public virtual void Update(double deltaTime)
    {
        TimeSinceLastRun += deltaTime;

        if (TimeSinceLastRun &gt;= RunInterval)
        {
            _action.Invoke();
            TimeSinceLastRun = 0;

            JustRan = true;
        }
        else
        {
            JustRan = false;
        }
    }
}
#endregion

#region Runtime tracking
/// &lt;summary&gt;
/// Class that tracks runtime history.
/// &lt;/summary&gt;
public class RuntimeTracker
{
    public int Capacity { get; set; }
    public double Sensitivity { get; set; }
    public double MaxRuntime { get; private set; }
    public double MaxInstructions { get; private set; }
    public double AverageRuntime { get; private set; }
    public double AverageInstructions { get; private set; }

    private readonly Queue&lt;double&gt; _runtimes = new Queue&lt;double&gt;();
    private readonly Queue&lt;double&gt; _instructions = new Queue&lt;double&gt;();
    private readonly StringBuilder _sb = new StringBuilder();
    private readonly int _instructionLimit;
    private readonly Program _program;

    public RuntimeTracker(Program program, int capacity = 100, double sensitivity = 0.01)
    {
        _program = program;
        Capacity = capacity;
        Sensitivity = sensitivity;
        _instructionLimit = _program.Runtime.MaxInstructionCount;
    }

    public void AddRuntime()
    {
        double runtime = _program.Runtime.LastRunTimeMs;
        AverageRuntime = Sensitivity * (runtime - AverageRuntime) + AverageRuntime;

        _runtimes.Enqueue(runtime);
        if (_runtimes.Count == Capacity)
        {
            _runtimes.Dequeue();
        }

        MaxRuntime = _runtimes.Max();
    }

    public void AddInstructions()
    {
        double instructions = _program.Runtime.CurrentInstructionCount;
        AverageInstructions = Sensitivity * (instructions - AverageInstructions) + AverageInstructions;

        _instructions.Enqueue(instructions);
        if (_instructions.Count == Capacity)
        {
            _instructions.Dequeue();
        }

        MaxInstructions = _instructions.Max();
    }

    public string Write()
    {
        _sb.Clear();
        _sb.AppendLine("\n_____________________________\nGeneral Runtime Info\n");
        _sb.AppendLine($"Avg instructions: {AverageInstructions:n2}");
        _sb.AppendLine($"Max instructions: {MaxInstructions:n0}");
        _sb.AppendLine($"Avg complexity: {MaxInstructions / _instructionLimit:0.000}%");
        _sb.AppendLine($"Avg runtime: {AverageRuntime:n4} ms");
        _sb.AppendLine($"Max runtime: {MaxRuntime:n4} ms");
        return _sb.ToString();
    }
}
#endregion

#region Running symbol
public class RunningSymbol
{
    int _runningSymbolVariant = 0;
    int _runningSymbolCount = 0;
    int _increment = 1;
    string[] _runningSymbols = new string[] { "−", "\\", "|", "/" };

    public RunningSymbol() { }

    public RunningSymbol(int increment)
    {
        _increment = increment;
    }

    public RunningSymbol(string[] runningSymbols)
    {
        if (runningSymbols.Length != 0)
            _runningSymbols = runningSymbols;
    }

    public RunningSymbol(int increment, string[] runningSymbols)
    {
        _increment = increment;
        if (runningSymbols.Length != 0)
            _runningSymbols = runningSymbols;
    }

    public string Iterate(int ticks = 1)
    {
        if (_runningSymbolCount &gt;= _increment)
        {
            _runningSymbolCount = 0;
            _runningSymbolVariant++;
            _runningSymbolVariant = _runningSymbolVariant++ % _runningSymbols.Length;
        }
        _runningSymbolCount += ticks;

        return this.ToString();
    }

    public override string ToString()
    {
        return _runningSymbols[_runningSymbolVariant];
    }
}
#endregion

#region Script Logging
public static class Log
{
    static StringBuilder _builder = new StringBuilder();
    static List&lt;string&gt; _errorList = new List&lt;string&gt;();
    static List&lt;string&gt; _warningList = new List&lt;string&gt;();
    static List&lt;string&gt; _infoList = new List&lt;string&gt;();
    const int _logWidth = 530; //chars, conservative estimate

    public static void Clear()
    {
        _builder.Clear();
        _errorList.Clear();
        _warningList.Clear();
        _infoList.Clear();
    }

    public static void Error(string text)
    {
        _errorList.Add(text);
    }

    public static void Warning(string text)
    {
        _warningList.Add(text);
    }

    public static void Info(string text)
    {
        _infoList.Add(text);
    }

    public static string Write(bool preserveLog = false)
    {
        if (_errorList.Count != 0 &amp;&amp; _warningList.Count != 0 &amp;&amp; _infoList.Count != 0)
            WriteLine("");

        if (_errorList.Count != 0)
        {
            for (int i = 0; i &lt; _errorList.Count; i++)
            {
                WriteLine("");
                WriteElememt(i + 1, "ERROR", _errorList[i]);
                //if (i &lt; _errorList.Count - 1)
            }
        }

        if (_warningList.Count != 0)
        {
            for (int i = 0; i &lt; _warningList.Count; i++)
            {
                WriteLine("");
                WriteElememt(i + 1, "WARNING", _warningList[i]);
                //if (i &lt; _warningList.Count - 1)
            }
        }

        if (_infoList.Count != 0)
        {
            for (int i = 0; i &lt; _infoList.Count; i++)
            {
                WriteLine("");
                WriteElememt(i + 1, "Info", _infoList[i]);
                //if (i &lt; _infoList.Count - 1)
            }
        }

        string output = _builder.ToString();

        if (!preserveLog)
            Clear();

        return output;
    }

    private static void WriteElememt(int index, string header, string content)
    {
        WriteLine($"{header} {index}:");

        string wrappedContent = TextHelper.WrapText(content, 1, _logWidth);
        string[] wrappedSplit = wrappedContent.Split('\n');

        foreach (var line in wrappedSplit)
        {
            _builder.Append("  ").Append(line).Append('\n');
        }
    }

    private static void WriteLine(string text)
    {
        _builder.Append(text).Append('\n');
    }
}

// Whip's TextHelper Class v2
public class TextHelper
{
    static StringBuilder textSB = new StringBuilder();
    const float adjustedPixelWidth = (512f / 0.778378367f);
    const int monospaceCharWidth = 24 + 1; //accounting for spacer
    const int spaceWidth = 8;

    #region bigass dictionary
    static Dictionary&lt;char, int&gt; _charWidths = new Dictionary&lt;char, int&gt;()
{
{'.', 9},
{'!', 8},
{'?', 18},
{',', 9},
{':', 9},
{';', 9},
{'"', 10},
{'\'', 6},
{'+', 18},
{'-', 10},

{'(', 9},
{')', 9},
{'[', 9},
{']', 9},
{'{', 9},
{'}', 9},

{'\\', 12},
{'/', 14},
{'_', 15},
{'|', 6},

{'~', 18},
{'&lt;', 18},
{'&gt;', 18},
{'=', 18},

{'0', 19},
{'1', 9},
{'2', 19},
{'3', 17},
{'4', 19},
{'5', 19},
{'6', 19},
{'7', 16},
{'8', 19},
{'9', 19},

{'A', 21},
{'B', 21},
{'C', 19},
{'D', 21},
{'E', 18},
{'F', 17},
{'G', 20},
{'H', 20},
{'I', 8},
{'J', 16},
{'K', 17},
{'L', 15},
{'M', 26},
{'N', 21},
{'O', 21},
{'P', 20},
{'Q', 21},
{'R', 21},
{'S', 21},
{'T', 17},
{'U', 20},
{'V', 20},
{'W', 31},
{'X', 19},
{'Y', 20},
{'Z', 19},

{'a', 17},
{'b', 17},
{'c', 16},
{'d', 17},
{'e', 17},
{'f', 9},
{'g', 17},
{'h', 17},
{'i', 8},
{'j', 8},
{'k', 17},
{'l', 8},
{'m', 27},
{'n', 17},
{'o', 17},
{'p', 17},
{'q', 17},
{'r', 10},
{'s', 17},
{'t', 9},
{'u', 17},
{'v', 15},
{'w', 27},
{'x', 15},
{'y', 17},
{'z', 16}
};
    #endregion

    public static int GetWordWidth(string word)
    {
        int wordWidth = 0;
        foreach (char c in word)
        {
            int thisWidth = 0;
            bool contains = _charWidths.TryGetValue(c, out thisWidth);
            if (!contains)
                thisWidth = monospaceCharWidth; //conservative estimate

            wordWidth += (thisWidth + 1);
        }
        return wordWidth;
    }

    public static string WrapText(string text, float fontSize, float pixelWidth = adjustedPixelWidth)
    {
        textSB.Clear();
        var words = text.Split(' ');
        var screenWidth = (pixelWidth / fontSize);
        int currentLineWidth = 0;
        foreach (var word in words)
        {
            if (currentLineWidth == 0)
            {
                textSB.Append($"{word}");
                currentLineWidth += GetWordWidth(word);
                continue;
            }

            currentLineWidth += spaceWidth + GetWordWidth(word);
            if (currentLineWidth &gt; screenWidth) //new line
            {
                currentLineWidth = GetWordWidth(word);
                textSB.Append($"\n{word}");
            }
            else
            {
                textSB.Append($" {word}");
            }
        }

        return textSB.ToString();
    }
}
#endregion
#endregion

#endregion
</Program>
                      <Storage />
                      <TextPanels>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <SelectedScript />
                          <TextPadding>2</TextPadding>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <SelectedScript />
                          <TextPadding>2</TextPadding>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                      </TextPanels>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
                      <SubtypeName>TimerBlockSmall</SubtypeName>
                      <EntityId>111526638259365831</EntityId>
                      <Min x="-1" y="7" z="10" />
                      <BlockOrientation Forward="Forward" Up="Right" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Undock Timer</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <Toolbar>
                        <ToolbarType>Character</ToolbarType>
                        <SelectedSlot xsi:nil="true" />
                        <Slots>
                          <Slot>
                            <Index>0</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>Unlock</Action>
                              <BlockEntityId>98464156182294139</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>1</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                              <Action>Unlock</Action>
                              <GridEntityId>0</GridEntityId>
                              <BlockEntityId>111526638259365831</BlockEntityId>
                              <GroupName>Cyclone Landing Gear</GroupName>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>2</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>OnOff_On</Action>
                              <BlockEntityId>133869917708659174</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>3</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                              <Action>OnOff_On</Action>
                              <GridEntityId>0</GridEntityId>
                              <BlockEntityId>111526638259365831</BlockEntityId>
                              <GroupName>Cyclone Thrusters</GroupName>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>4</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                              <Action>OnOff_On</Action>
                              <GridEntityId>0</GridEntityId>
                              <BlockEntityId>111526638259365831</BlockEntityId>
                              <GroupName>Cyclone Lights</GroupName>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>5</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                              <Action>OnOff_On</Action>
                              <BlockEntityId>73099833011583464</BlockEntityId>
                            </Data>
                          </Slot>
                          <Slot>
                            <Index>6</Index>
                            <Item />
                            <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                              <Action>OnOff_On</Action>
                              <GridEntityId>0</GridEntityId>
                              <BlockEntityId>111526638259365831</BlockEntityId>
                              <GroupName>Cyclone Computers</GroupName>
                            </Data>
                          </Slot>
                        </Slots>
                        <SlotsGamepad />
                      </Toolbar>
                      <Delay>1000</Delay>
                      <CurrentTime>0</CurrentTime>
                      <IsCountingDown>false</IsCountingDown>
                      <Silent>true</Silent>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
                      <SubtypeName>SmallProgrammableBlock</SubtypeName>
                      <EntityId>111989329898677129</EntityId>
                      <Min x="-1" y="7" z="9" />
                      <BlockOrientation Forward="Backward" Up="Down" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Floorplan Computer</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <Program>//------------------------------------------------------------
// ADN - Floor Plan Script v9.1
//------------------------------------------------------------

string strDisplayPanelTag = "L_PANEL";
string strReportPanelTag = "L_REPORT";
string strStatusPanelTag = "L_STATUS";
string strMenuPanelTag = "L_MENU";
string strAlarmTag = "L_ALARM";

bool bUseMassCheckForRefresh = true;

bool bUseAlarmSystem = true;

static bool bOptimizedRender = true;

bool bExcludeHiddenBlocks = false;

string strExcludeAlertKeyword = "[NOALERT]";

string strAlertBlockTypes = "AirVent,SensorBlock,Door,AirtightHangarDoor,AirtightSlideDoor,LargeGatlingTurret,LargeMissileTurret,InteriorTurret";

//---------- Configurable Constants ----------

int HORIZONTAL_COUNT = 1;
int VERTICAL_COUNT = 1;

int REFRESH_INTERVAL = 60;

float INSTRUCTION_PERCENT_LIMIT = 0.01f;

const int DEF_PIXEL_SIZE = 1;

const float DEF_MISC_PANEL_FONT_SIZE = 0.6f;

const bool DEF_PAINT_DENSITY = true;
const bool DEF_PAINT_TERMINAL_BLOCKS = true;
const bool DEF_PAINT_ALERT_BLOCKS = true;

const bool DEF_BLINK_FOR_ALERT = false;
const bool DEF_USE_RELATIVE_DENSITY = false;
const bool DEF_INCLUDE_TERMINAL_DENSITY = true;
const bool DEF_SMOOTH_EDGES = false;

const bool DEF_PAINT_CROSS_FOR_ALERT = false;

const bool DEF_PAINT_LOCATION_MARKER = false;

const byte DEF_ALERT_MASK = AL_VENT | AL_SENSOR | AL_TURRET | AL_DOOR | AL_HACKED;

const float HIGH_DENSITY_THRESHOLD = 1.0f;
const float MID_DENSITY_THRESHOLD = 0.5f;
const float LOW_DENSITY_THRESHOLD = 0.25f;

const int TEXT_MAX_RESOLUTION_X = 178;
const int TEXT_MAX_RESOLUTION_Y = 178;

const int WIDE_LCD_MAX_RESOLUTION_X = 356;
const int WIDE_LCD_MAX_RESOLUTION_Y = 178;

const int BOX_AREA_DRAW_DENSITY_LIMIT = 4900;

//---------- Color Configuration ----------


static char chrBackground = Rgb(0, 0, 0);
static char chrStructure = Rgb(4, 4, 4);
static char chrDensity = Rgb(3, 3, 3);
static char chrLowDensity = Rgb(2, 2, 2);

static char chrDetectedEntity = Rgb(7, 0, 0);
static char chrHacked = Rgb(7, 0, 0);

static char chrMissingBlock = Rgb(7, 0, 0);
static char chrAlertAirVents = Rgb(5, 5, 0);
static char chrAlertTurrets = Rgb(7, 3, 0);
static char chrAlertDoors = Rgb(1, 1, 7);

static char chrTerminalBlockFunctional = Rgb(1, 6, 1);
static char chrTerminalBlockDamaged = Rgb(5, 5, 0);
static char chrTerminalBlockMissing = Rgb(7, 0, 0);

static char chrLocationMarkerEven = Rgb(1, 1, 7);
static char chrLocationMarkerOdd = Rgb(1, 6, 1);

const int TEXT_COLOR_R = 255;
const int TEXT_COLOR_G = 255;
const int TEXT_COLOR_B = 255;

//---------- Color Code Generator ----------

//Credits to Krypt
//http://steamcommunity.com/sharedfiles/filedetails/?id=787881521
static char Rgb(byte r, byte g, byte b)
{
return (char)(0xe100 + (r &lt;&lt; 6) + (g &lt;&lt; 3) + b);
}

//---------- Script Compound Parameters ----------

const byte SUB_X = 32, ADD_X = 16, SUB_Y = 8, ADD_Y = 4, SUB_Z = 2, ADD_Z = 1;

const byte AL_VENT = 1, AL_SENSOR = 2, AL_TURRET = 4, AL_DOOR = 8, AL_HACKED = 16;

Vector3I[] ADJACENT_VECTORS = { new Vector3I(-1, 0, 0), new Vector3I(1, 0, 0), new Vector3I(0, -1, 0), new Vector3I(0, 1, 0), new Vector3I(0, 0, -1), new Vector3I(0, 0, 1) };
static byte[] ADJACENT_MASKS = new byte[6];

HashSet&lt;string&gt; WATCH_BLK_TYPE = null;

static Dictionary&lt;string, int[]&gt; FLAG_CMD = null;
HashSet&lt;string&gt; GRID_CMD = null;

Dictionary&lt;string, int&gt; MENU_CMD = null;

int progressIconIndex = 0;
char[] progressIcons = new char[8];

char[] cleanChar = " _-:;&amp;".ToCharArray();
string[] triggerActions = new string[] { "TriggerNow", "PlaySound", "StartCountdown", "ShootOnce", "Close", "OnOff_On" };

const long fontMonospace = 1147350002L;

int instLimit = 45000;

//---------- Below Is Main Script Body ----------

List&lt;LayoutPanel&gt; lyts = new List&lt;LayoutPanel&gt;();

List&lt;IMyTextPanel&gt; rptPnls = new List&lt;IMyTextPanel&gt;();
List&lt;IMyTextPanel&gt; statPnls = new List&lt;IMyTextPanel&gt;();
List&lt;IMyTextPanel&gt; menuPnls = new List&lt;IMyTextPanel&gt;();

int pnStart, pnEnd, pnIndex;

List&lt;IMyRemoteControl&gt; remoteBlocks = new List&lt;IMyRemoteControl&gt;();
float lastBaseMass;

Dictionary&lt;Vector3I, byte&gt; structBlocks;
Stack&lt;Vector3I&gt; schRemain;
HashSet&lt;Vector3I&gt; schTested;

List&lt;KeyValuePair&lt;Vector3I, byte&gt;&gt; structDataList;

List&lt;IMyTerminalBlock&gt; termBlocks, tempBlocks;

List&lt;WatchField&gt; watchBlocks;

List&lt;IMyTerminalBlock&gt;[] priorityBlocks;
int priorityCount;

bool needSensorDetected;
List&lt;Vector3D&gt; sensorDetected = new List&lt;Vector3D&gt;();

List&lt;IMyTerminalBlock&gt; alarmBlocks = new List&lt;IMyTerminalBlock&gt;();
Dictionary&lt;string, int[]&gt; groupStats = new Dictionary&lt;string, int[]&gt;();

Vector3I gridMin, gridMax, totalMin, totalMax;

int dmgTermCnt, msTermCnt, msStructCnt, ventALCnt, sensALCnt, hackCnt, shootTurCnt, curMsStructCnt, curVentALCnt, curSensALCnt;

int lastRenderTicks, currentRenderTicks;
string errorMessage = "";
int prevSubMode = -2;

int curMnId, actMnCnt;

Menu selMnu;
Menu rtMnu;
bool refreshMenu;
int maxMnCntShown = 7;

int subCounter = 0;
int subMode = -1;
int mode = 0;
int clock = 0;
bool init = false;

Program()
{
Runtime.UpdateFrequency = UpdateFrequency.Update1;
}

void Main(string args, UpdateType updateSource)
{
clock++;

bool haveArgs;
if (args.Length &gt; 0)
{
args = args.Trim().ToUpper();
haveArgs = true;
}
else
{
haveArgs = false;
}

if (haveArgs &amp;&amp; menuPnls.Count &gt; 0)
{
if (args.Length &gt; 0)
{
haveArgs = ExecuteMenuFlow(ref args);
}
}

if (!init)
{
DisplayStatus();

if (subMode == -1)
{
StaticInit();

lastRenderTicks = clock;

subMode = 0;
return;
}

if (subMode == 0)
{
if (Me.CustomData.Length &gt; 0)
{
ProcessCustomConfiguration();
}

instLimit = (int)(INSTRUCTION_PERCENT_LIMIT * Runtime.MaxInstructionCount);

InitDisplayPanels();

InitMiscPanels(rptPnls, strReportPanelTag);
InitMiscPanels(statPnls, strStatusPanelTag);
InitMiscPanels(menuPnls, strMenuPanelTag);

if (bUseMassCheckForRefresh)
{
InitRemoteControl();
}

errorMessage = "";

if (lyts.Count == 0)
{
errorMessage += "[NO DISPLAY PANELS DETECTED]\nEnsure Panels With " + strDisplayPanelTag + " Tag Exists\n";
}

if (errorMessage.Length &gt; 0)
{
DisplayStatus();
}

if (menuPnls.Count &gt; 0)
{
selMnu = rtMnu;

curMnId = 0;
actMnCnt = 0;

ComputeActualMenuCount();
DisplayMenu();
}

structBlocks = new Dictionary&lt;Vector3I, byte&gt;();
schRemain = new Stack&lt;Vector3I&gt;();
schTested = new HashSet&lt;Vector3I&gt;();

structBlocks.Add(Me.Position, 0);
schRemain.Push(Me.Position);
schTested.Add(Me.Position);

subMode = 1;
return;
}
else if (subMode == 1)
{
if (InitStructureData(Me.CubeGrid, schRemain, structBlocks, schTested, instLimit))
{
schRemain = null;
schTested = null;

tempBlocks = null;

gridMin = Me.CubeGrid.Min;
gridMax = Me.CubeGrid.Max;

subMode = 2;
}
return;
}
else if (subMode == 2)
{
if (tempBlocks == null)
{
tempBlocks = new List&lt;IMyTerminalBlock&gt;();
GridTerminalSystem.GetBlocks(tempBlocks);

termBlocks = new List&lt;IMyTerminalBlock&gt;();
}

subCounter = FilterTerminalBlocks(Me.CubeGrid, tempBlocks, termBlocks, subCounter, instLimit);
if (subCounter &gt;= tempBlocks.Count)
{
tempBlocks = null;

subCounter = 0;
subMode = 3;
}
return;
}
else if (subMode == 3)
{
pnStart = 0;
pnEnd = lyts.Count - 1;

for (int i = pnStart; i &lt;= pnEnd; i++)
{
lyts[i].InitDisplayParameters();
lyts[i].InitScreenParameters();
lyts[i].ResetStructureBase();
}

CompileTotalGridSize();

structDataList = new List&lt;KeyValuePair&lt;Vector3I, byte&gt;&gt;(structBlocks);

subCounter = 0;
subMode = 4;

watchBlocks = new List&lt;WatchField&gt;();

return;
}
else if (subMode == 4)
{
subCounter = FilterWatchedBlocks(Me.CubeGrid, termBlocks, watchBlocks, subCounter, instLimit);
if (subCounter &gt;= termBlocks.Count)
{
bool bPaintDensity = false;
for (int i = pnStart; i &lt;= pnEnd; i++)
{
if (lyts[i].bPaintDensity)
{
bPaintDensity = true;
break;
}
}

subCounter = 0;
subMode = (bPaintDensity ? 5 : 7);
}
return;
}
else if (subMode == 5)
{
subCounter = ComputeStructureDensity(structDataList, subCounter, instLimit);
if (subCounter &gt;= structDataList.Count)
{
pnIndex = pnStart;
subCounter = 0;
subMode = 6;
}
return;
}
else if (subMode == 6)
{
bool completeDraw;
if (lyts[pnIndex].bPaintDensity &amp;&amp; lyts[pnIndex].scArea &lt;= BOX_AREA_DRAW_DENSITY_LIMIT)
{
subCounter = lyts[pnIndex].PaintStructureDensity(subCounter, instLimit);
completeDraw = (subCounter &gt;= lyts[pnIndex].axWhY * lyts[pnIndex].axWhX);
}
else
{
completeDraw = true;
}

if (completeDraw)
{
if (pnIndex &gt;= pnEnd)
{
subCounter = 0;
subMode = 7;
}
else
{
pnIndex++;
subCounter = 0;
}
}
return;
}
else if (subMode == 7)
{
subCounter = PaintStructureBase(structDataList, subCounter, instLimit);
if (subCounter &gt;= structDataList.Count)
{
subMode = 8;
}
return;
}
else if (subMode == 8)
{
for (int i = 0; i &lt; lyts.Count; i++)
{
if (lyts[i].bPaintLocationMarker &amp;&amp; lyts[i].scArea &lt;= BOX_AREA_DRAW_DENSITY_LIMIT)
{
lyts[i].PaintLocationMarker(chrLocationMarkerEven, chrLocationMarkerOdd);
}
}

subMode = 9;
return;
}

if (bUseAlarmSystem)
{
alarmBlocks.Clear();
GridTerminalSystem.SearchBlocksOfName(strAlarmTag, alarmBlocks);
}

lastBaseMass = 0f;

currentRenderTicks = clock;

subCounter = 0;
subMode = -1;
mode = 0;

init = true;
return;
}

if (haveArgs)
{
bool exitFlag = ProcessRunCommands(args);

if (refreshMenu)
{
refreshMenu = false;
DisplayMenu();
}

if (exitFlag)
{
return;
}
}

if (mode == 0)
{
if (clock % REFRESH_INTERVAL == 0)
{
pnIndex = 0;
subMode = 0;
mode = 1;
}
}
else if (mode == 1)
{
if (subMode == 0)
{
pnIndex = ResetRenderData(pnIndex, lyts.Count - 1, instLimit);
if (pnIndex &gt;= lyts.Count)
{
bool haveTerm = false;

for (int i = 0; i &lt; lyts.Count; i++)
{
if (lyts[i].bPaintTerminalBlocks)
{
lyts[i].priorityDrawn = new Dictionary&lt;Vector4I, int&gt;();

haveTerm = true;
}

lyts[i].drawnPositions = new HashSet&lt;Vector2I&gt;();
}

for (int i = 0; i &lt; priorityBlocks.Length; i++)
{
priorityBlocks[i].Clear();
}

shootTurCnt = 0;

if (haveTerm)
{
subCounter = 0;
subMode = 1;
}
else
{
subCounter = (GridChanged() ? 0 : structDataList.Count);
subMode = 3;
}
}
}
else if (subMode == 1)
{
subCounter = PaintGoodTerminalBlocks(termBlocks, priorityBlocks, subCounter, instLimit);
if (subCounter &gt;= termBlocks.Count)
{
dmgTermCnt = priorityBlocks[0].Count;
msTermCnt = priorityBlocks[1].Count;
hackCnt = priorityBlocks[2].Count;

priorityCount = dmgTermCnt + msTermCnt + hackCnt;

subCounter = 0;
subMode = 2;
}
}
else if (subMode == 2)
{
subCounter = PaintBadTerminalBlocks(priorityBlocks, subCounter, instLimit);
if (subCounter &gt;= priorityCount)
{
for (int i = 0; i &lt; lyts.Count; i++)
{
lyts[i].priorityDrawn = null;
}

msStructCnt = 0;

subCounter = (GridChanged() ? 0 : structDataList.Count);
subMode = 3;
}
}
else if (subMode == 3)
{
subCounter = PaintMissingStructure(structDataList, subCounter, instLimit);
if (subCounter &gt;= structDataList.Count)
{
for (int i = 0; i &lt; lyts.Count; i++)
{
if (lyts[i].bPaintAlertBlocks)
{
lyts[i].isBlinkFrame = (lyts[i].bBlinkForAlert ? !lyts[i].isBlinkFrame : true);
}

lyts[i].drawnPositions = null;
}

sensorDetected.Clear();

curMsStructCnt = msStructCnt;

ventALCnt = 0;
sensALCnt = 0;

subCounter = 0;
subMode = 4;
}
}
else if (subMode == 4)
{
subCounter = PaintWatchedBlocks(watchBlocks, subCounter, instLimit);
if (subCounter &gt;= watchBlocks.Count)
{
curVentALCnt = ventALCnt;
curSensALCnt = sensALCnt;

DisplayStatus();
pnIndex = 0;
subCounter = 0;
subMode = 5;
}
}
else if (subMode == 5)
{
pnIndex = Render(pnIndex, instLimit);
if (pnIndex &gt;= lyts.Count)
{
subCounter = 0;
subMode = 6;
}
}
else
{
if (bUseAlarmSystem)
{
ProcessAlarms();
}

DisplayReport();

lastRenderTicks = currentRenderTicks;
currentRenderTicks = clock;
subMode = -1;
mode = 0;
}
}
else if (mode == 3)
{
if (subMode == 0)
{
for (int i = 0; i &lt; lyts.Count; i++)
{
lyts[i].ShowLargeNumber(i + 1);
}
}
}
else if (mode == 4)
{
for (int i = 0; i &lt; lyts.Count; i++)
{
lyts[i].HideLargeNumber();
}
mode = 0;
}

DisplayStatus();
}

void DisplayStatus()
{
if (clock % 15 == 0 || prevSubMode != subMode)
{
prevSubMode = subMode;

StringBuilder sb = new StringBuilder();

if (clock % 15 == 0)
{
progressIconIndex = (progressIconIndex + 1) % 8;
}

if (init)
{
sb.Append("Status: Operational  ").Append(progressIcons[progressIconIndex]).Append("\n");
sb.Append("Refresh Rate: ").Append(Math.Round((currentRenderTicks - lastRenderTicks) * 16.66667f)).Append("ms\n");
sb.Append("Total Display Panels: ").Append(lyts.Count).Append("\n\n");
sb.Append("Total Armor Blocks: ").Append(structBlocks.Count).Append('\n');
sb.Append("Total Terminal Blocks: ").Append(termBlocks.Count).Append('\n');
sb.Append("Total Alert Blocks: ").Append(watchBlocks.Count).Append("\n\n");
sb.Append("Damaged Terminal Blocks: ").Append(dmgTermCnt).Append('\n');
sb.Append("Missing Terminal Blocks: ").Append(msTermCnt).Append('\n');
sb.Append("Missing Armor Blocks: ").Append(curMsStructCnt).Append('\n');
sb.Append("Hull Integrity: ").Append(Math.Round((structBlocks.Count - curMsStructCnt) * 100f / structBlocks.Count, 0) + "%").Append('\n');
sb.Append("Terminal Integrity: ").Append(Math.Round((termBlocks.Count - dmgTermCnt - msTermCnt) * 100f / termBlocks.Count, 0) + "%").Append('\n');
sb.Append("Air Vent Alerts: ").Append(curVentALCnt).Append('\n');
sb.Append("Sensor Alerts: ").Append(curSensALCnt).Append('\n');
sb.Append('\n').Append(errorMessage).Append('\n');
}
else
{
sb.Append("Status: Initialization  ").Append(progressIcons[progressIconIndex]).Append("\nStage: ");
switch (subMode)
{
case -1:
sb.Append("Initializing Static Values\n");
break;
case 0:
sb.Append("Searching For Display Panels\n");
break;
case 1:
sb.Append("Searching For Armor Blocks\n");
break;
case 2:
sb.Append("Searching For Terminal Blocks\n");
break;
case 3:
sb.Append("Initializing Display Panels\n");
break;
case 4:
sb.Append("Filtering Alert Blocks\n");
break;
case 5:
sb.Append("Computing Structure Density\n");
break;
case 6:
sb.Append("Painting Structure Density\n");
break;
case 7:
sb.Append("Painting Main Structure\n");
break;
case 8:
sb.Append("Painting Location Markers\n");
break;
case 9:
sb.Append("Initialization Completed\n");
break;
}
if (subMode &gt; 0)
{
sb.Append("Total Display Panels: ").Append(lyts.Count).Append("\n\n");
}
if (subMode &gt; 1)
{
sb.Append("Total Armor Blocks: ").Append(structBlocks.Count).Append('\n');
}
if (subMode &gt; 2)
{
sb.Append("Total Terminal Blocks: ").Append(termBlocks.Count).Append('\n');
}
if (subMode &gt; 4)
{
sb.Append("Total Alert Blocks: ").Append(watchBlocks.Count).Append('\n');
}
sb.Append('\n').Append(errorMessage).Append('\n');
}

for (int i = 0; i &lt; statPnls.Count; i++)
{
statPnls[i].WritePublicText(sb);
}
Echo(sb.ToString());
}
}

void ProcessAlarms()
{
for (int i = 0; i &lt; alarmBlocks.Count; i++)
{
IMyTerminalBlock blk = alarmBlocks[i];
if (blk.IsFunctional)
{
string param = blk.CustomName;
int startIndex = param.IndexOf(strAlarmTag, StringComparison.OrdinalIgnoreCase);
if (startIndex &gt; -1)
{
param = param.Substring(startIndex + strAlarmTag.Length).Trim();
}

bool andCond = (param.Length &gt; 0 &amp;&amp; param[0] == '&amp;');

int count = 0;
int value = 0;
string action = null;
string[] tokens = param.Split(cleanChar, StringSplitOptions.RemoveEmptyEntries);
switch (tokens.Length)
{
case 0:
count = 0;
break;
case 1:
count = 1;
break;
case 2:
count = 1;
Int32.TryParse(tokens[1], out value);
action = (value == 0 ? tokens[1] : null);
break;
default:
count = (tokens.Length / 2);
action = (tokens.Length % 2 == 0 ? null : tokens[tokens.Length - 1]);
break;
}

bool trigger = andCond;

for (int s = 0; s &lt; count; s++)
{
int index = s * 2;
string cmd = tokens[index].ToUpper();

index++;
if (index &gt;= tokens.Length || !Int32.TryParse(tokens[index], out value))
{
value = 0;
}

switch (cmd)
{
case "HULL":
trigger = (((structBlocks.Count - curMsStructCnt) * 100f / structBlocks.Count) &lt;= (value &lt;= 0 ? 50 : value));
break;
case "TERM":
trigger = (((termBlocks.Count - dmgTermCnt - msTermCnt) * 100f / termBlocks.Count) &lt;= (value &lt;= 0 ? 50 : value));
break;
case "VENT":
trigger = (curVentALCnt &gt;= (value &lt;= 0 ? 1 : value));
break;
case "SENSOR":
trigger = (curSensALCnt &gt;= (value &lt;= 0 ? 1 : value));
break;
case "HACK":
trigger = (hackCnt &gt;= (value &lt;= 0 ? 1 : value));
break;
case "TURRET":
trigger = (shootTurCnt &gt;= (value &lt;= 0 ? 1 : value));
break;
}

if (andCond != trigger)
{
break;
}
}

if (trigger)
{
if (action != null &amp;&amp; blk.HasAction(action = action.Replace('+', '_')))
{
blk.ApplyAction(action);
}
else
{
for (int x = 0; x &lt; triggerActions.Length; x++)
{
if (blk.HasAction(triggerActions[x]))
{
blk.ApplyAction(triggerActions[x]);
break;
}
}
}
}
}
}
}

void DisplayReport()
{
needSensorDetected = false;

for (int i = 0; i &lt; rptPnls.Count; i++)
{
IMyTextPanel panel = rptPnls[i];

string param = panel.GetPublicTitle().Trim();
if (param.Length == 0 || param.ToUpper().Equals("PUBLIC TITLE"))
{
param = "HULL,,TERM,,VENT,,SENSOR,,HACK,,TURRET";
panel.WritePublicTitle(param);
}

float value;
float fontSize = panel.GetValueFloat("FontSize");

StringBuilder sb = new StringBuilder();

string[] tokens = param.Split(',');
for (int x = 0; x &lt; tokens.Length; x++)
{
string cmd = tokens[x].Trim();

int[] stats;
string grp;
string label;
int dash = cmd.IndexOf("/");
if (dash &gt; -1)
{
grp = cmd.Substring(dash + 1).Trim();
cmd = cmd.Substring(0, dash).Trim().ToUpper();

dash = grp.IndexOf("/");
if (dash &gt; -1)
{
label = grp.Substring(dash + 1).Trim();
grp = grp.Substring(0, dash).Trim();
}
else
{
label = grp;
}
}
else
{
cmd = cmd.ToUpper();
label = grp = "";
}

switch (cmd)
{
case "HULL":
value = (structBlocks.Count - curMsStructCnt) * 100f / structBlocks.Count;
sb.Append("Hull Integrity: ").Append(curMsStructCnt &gt; -1 ? Math.Round(value, 0) + "%" : "-").Append('\n');
DrawProgressBar(sb, fontSize, value).Append('\n');
break;
case "TERM":
value = (termBlocks.Count - (dmgTermCnt * 0.5f) - msTermCnt) * 100f / termBlocks.Count;
sb.Append("Terminal Integrity: ").Append(Math.Round(value, 0) + "%").Append('\n');
DrawProgressBar(sb, fontSize, value).Append('\n');
break;
case "VENT":
sb.Append("Leaked Vents: ").Append(curVentALCnt).Append('\n');
break;
case "SENSOR":
sb.Append("Sensor Detection: ").Append(curSensALCnt).Append('\n');
break;
case "HACK":
sb.Append("Blocks Hacked: ").Append(hackCnt).Append('\n');
break;
case "TURRET":
sb.Append("Turrets Shooting: ").Append(shootTurCnt).Append('\n');
break;
case "SENSORGPS":
for (int s = 0; s &lt; sensorDetected.Count; s++)
{
sb.Append("GPS:S").Append(s + 1).Append(":").Append(VectorToString(sensorDetected[s], 2)).Append(":\n");
}
needSensorDetected = true;
break;
case "FUNC":
stats = RetrieveGroupStatistics(groupStats, grp);
sb.Append(label).Append(": ").Append(stats[1]).Append(" / ").Append(stats[0]).Append('\n');
break;
case "FUNCP":
stats = RetrieveGroupStatistics(groupStats, grp);
value = (stats[0] == 0 ? 0f : 100f * stats[1] / stats[0]);
sb.Append(label).Append(": ").Append(stats[1]).Append(" / ").Append(stats[0]).Append('\n');
DrawProgressBar(sb, fontSize, value).Append('\n');
break;
case "WORK":
stats = RetrieveGroupStatistics(groupStats, grp);
sb.Append(label).Append(": ").Append(stats[2]).Append(" / ").Append(stats[0]).Append('\n');
break;
case "WORKP":
stats = RetrieveGroupStatistics(groupStats, grp);
value = (stats[0] == 0 ? 0f : 100f * stats[2] / stats[0]);
sb.Append(label).Append(": ").Append(stats[2]).Append(" / ").Append(stats[0]).Append('\n');
DrawProgressBar(sb, fontSize, value).Append('\n');
break;
default:
sb.Append('\n');
break;
}
}

panel.WritePublicText(sb);
}
}

int[] RetrieveGroupStatistics(Dictionary&lt;string, int[]&gt; cacheStats, string grp)
{
if (cacheStats.ContainsKey(grp))
{
return cacheStats[grp];
}
else
{
int[] stats = new int[3];

List&lt;IMyTerminalBlock&gt; blks = new List&lt;IMyTerminalBlock&gt;();
GridTerminalSystem.SearchBlocksOfName(grp, blks);

for (int i = 0; i &lt; blks.Count; i++)
{
if (blks[i].IsFunctional)
{
stats[1] += 1;
}
if (blks[i].IsWorking)
{
stats[2] += 1;
}
}
stats[0] = blks.Count;

cacheStats[grp] = stats;
return stats;
}
}

StringBuilder DrawProgressBar(StringBuilder sb, float fontSize, float percent)
{
int total = (int)((1f / fontSize) * 72) - 2;
int filled = (int)Math.Round(percent / 100 * total);
sb.Append('[').Append('I', filled).Append('`', total - filled).Append(']');
return sb;
}

string VectorToString(Vector3D vector, int decimals)
{
return Math.Round(vector.GetDim(0), decimals) + ":" + Math.Round(vector.GetDim(1), decimals) + ":" + Math.Round(vector.GetDim(2), decimals);
}

bool GridChanged()
{
if (bUseMassCheckForRefresh)
{
foreach (var remote in remoteBlocks)
{
if (remote.IsWorking &amp;&amp; remote.CubeGrid == Me.CubeGrid)
{
float baseMass = remote.CalculateShipMass().BaseMass;
if (baseMass != lastBaseMass)
{
lastBaseMass = baseMass;
return true;
}
else
{
return (baseMass &lt;= 0.0001f);
}
}
}
}
return true;
}

int Render(int index, int instLimit)
{
while (index &lt; lyts.Count &amp;&amp; Runtime.CurrentInstructionCount &lt; instLimit)
{
lyts[index].Render();

index++;
}

return index;
}

int ResetRenderData(int index, int endIndex, int instLimit)
{
while (index &lt;= endIndex &amp;&amp; Runtime.CurrentInstructionCount &lt; instLimit)
{
lyts[index].ResetRenderData();

index++;
}

return index;
}

void RedrawStructure()
{
if (mode == 3 || mode == 4)
{
for (int i = 0; i &lt; lyts.Count; i++)
{
lyts[i].HideLargeNumber();
}
}

for (int i = pnStart; i &lt;= pnEnd; i++)
{
lyts[i].ResetGridWidth();
lyts[i].InitScreenParameters();
}

CompileTotalGridSize();

structDataList = new List&lt;KeyValuePair&lt;Vector3I, byte&gt;&gt;(structBlocks);

subCounter = 0;
subMode = 4;

watchBlocks = new List&lt;WatchField&gt;();

mode = 0;

init = false;
}

bool AdjustGridSize(ref int gridStart, ref int gridEnd, int gridMinimum, int gridMaximum, bool isStart, bool isPositive, bool isPan)
{
int tmpGridStart = gridStart;
int tmpGridEnd = gridEnd;

if (isStart)
{
tmpGridStart += (isPositive ? 1 : -1);
if (isPan)
{
tmpGridEnd += (isPositive ? 1 : -1);
}
}
else
{
tmpGridEnd += (isPositive ? 1 : -1);
if (isPan)
{
tmpGridStart += (isPositive ? 1 : -1);
}
}

if (tmpGridStart &gt; tmpGridEnd || tmpGridStart &lt; gridMinimum || tmpGridEnd &gt; gridMaximum)
{
return false;
}

gridStart = tmpGridStart;
gridEnd = tmpGridEnd;

return true;
}

/*----- Menu Processing Methods -----*/

bool ExecuteMenuFlow(ref string arguments)
{
if (MENU_CMD.ContainsKey(arguments))
{
string menuAction = null;

ComputeActualMenuCount();

int operation = MENU_CMD[arguments];
switch (operation)
{
case 1:
curMnId--;
break;
case 2:
curMnId++;
break;
case 3:
curMnId -= maxMnCntShown;
break;
case 4:
curMnId += maxMnCntShown;
break;
case 5:
if (selMnu.Parent != null)
{
selMnu = selMnu.Parent;
curMnId = 0;
ComputeActualMenuCount();
}
break;
case 6:
if (selMnu.ChildMenus != null &amp;&amp; selMnu.ChildMenus.Count &gt; 0)
{
List&lt;Menu&gt; menuItems = selMnu.ChildMenus;

int currentMarker = -1;
for (int i = 0; i &lt; menuItems.Count; i++)
{
int actualCount = (menuItems[i].RepeatList == null ? 1 : menuItems[i].RepeatList.Count);

if (currentMarker + actualCount &gt;= curMnId)
{
if (actualCount &gt; 1)
{
menuItems[i].CurrentSelection = curMnId - currentMarker - 1;
}
if (menuItems[i].Action != null)
{
menuAction = menuItems[i].GetAction();
}
if (menuItems[i].ChildMenus != null &amp;&amp; menuItems[i].ChildMenus.Count &gt; 0)
{
selMnu = menuItems[i];
curMnId = 0;
ComputeActualMenuCount();
}
break;
}
else
{
currentMarker += actualCount;
}
}
}

break;
}

if (curMnId &lt; 0)
{
curMnId = 0;
}
else if (curMnId &gt;= actMnCnt)
{
curMnId = actMnCnt - 1;
}

DisplayMenu();

if (menuAction == null)
{
refreshMenu = false;
return false;
}
else
{
arguments = menuAction.Trim().ToUpper();
refreshMenu = true;
return true;
}
}
else
{
return true;
}
}

void ComputeActualMenuCount()
{
actMnCnt = 0;

if (selMnu.ChildMenus != null &amp;&amp; selMnu.ChildMenus.Count &gt; 0)
{
List&lt;Menu&gt; menuItems = selMnu.ChildMenus;
for (int i = 0; i &lt; menuItems.Count; i++)
{
actMnCnt += (menuItems[i].RepeatList == null ? 1 : menuItems[i].RepeatList.Count);
}
}
}

void DisplayMenu()
{
StringBuilder sb = new StringBuilder();

sb.Append("------------------------------------------------------------\n");
sb.Append("Floor Plan Script Menu\n");
sb.Append("------------------------------------------------------------\n\n");

string breadCrumb = selMnu.GetTitle();
Menu curMnu = selMnu.Parent;
while (curMnu != null)
{
breadCrumb = curMnu.GetTitle() + " &gt; " + breadCrumb;
curMnu = curMnu.Parent;
}
sb.Append(breadCrumb).Append("\n\n");

if (selMnu.ChildMenus != null &amp;&amp; selMnu.ChildMenus.Count &gt; 0)
{
List&lt;Menu&gt; menuItems = selMnu.ChildMenus;

int mnStartIx = curMnId - (maxMnCntShown / 2);
int mnEndIx = curMnId + (maxMnCntShown / 2);

if (mnStartIx &lt; 0)
{
mnStartIx = 0;
mnEndIx = Math.Min(maxMnCntShown - 1, actMnCnt);
}
else if (mnEndIx &gt;= actMnCnt)
{
mnEndIx = actMnCnt - 1;
mnStartIx = Math.Max(mnEndIx - maxMnCntShown + 1, 0);
}

int curMark = -1;
for (int i = 0; i &lt; menuItems.Count; i++)
{
int actCnt = (menuItems[i].RepeatList == null ? 1 : menuItems[i].RepeatList.Count);

if (curMark + actCnt &gt;= mnStartIx)
{
if (actCnt == 1)
{
bool isCurrent = (curMnId == (curMark + 1));
sb.Append(isCurrent ? "&gt; [&gt; " : "&gt; ").Append(menuItems[i].GetName()).Append(isCurrent ? " &lt;]\n" : "\n");

curMark++;
}
else
{
int mkStart = mnStartIx - curMark - 1;
if (mkStart &lt; 0)
{
mkStart = 0;
}
int mkEnd = mkStart + (mnEndIx - mnStartIx);
if (mkEnd &gt;= actCnt)
{
mkEnd = actCnt - 1;
}
int tempSelection = menuItems[i].CurrentSelection;
for (int j = mkStart; j &lt;= mkEnd; j++)
{
bool isCurrent = (curMnId == (curMark + j + 1));
menuItems[i].CurrentSelection = j;
sb.Append(isCurrent ? "&gt; [&gt; " : "&gt; ").Append(menuItems[i].GetName()).Append(isCurrent ? " &lt;]\n" : "\n");
}
menuItems[i].CurrentSelection = tempSelection;

curMark += mkEnd - mkStart + 1;
}
}
else
{
curMark += actCnt;
}

if (curMark &gt;= mnEndIx)
{
break;
}
}
}

for (int i = 0; i &lt; menuPnls.Count; i++)
{
menuPnls[i].WritePublicText(sb);
}
}

/*----- Parameter Processing Methods -----*/

void ProcessCustomConfiguration()
{
CustomConfiguration cfg = new CustomConfiguration(Me);
cfg.Load();

cfg.Get("strDisplayPanelTag", ref strDisplayPanelTag);
cfg.Get("strReportPanelTag", ref strReportPanelTag);
cfg.Get("strStatusPanelTag", ref strStatusPanelTag);
cfg.Get("strMenuPanelTag", ref strMenuPanelTag);
cfg.Get("strAlarmTag", ref strAlarmTag);
cfg.Get("bUseMassCheckForRefresh", ref bUseMassCheckForRefresh);
cfg.Get("bUseAlarmSystem", ref bUseAlarmSystem);
cfg.Get("bOptimizedRender", ref bOptimizedRender);
cfg.Get("bExcludeHiddenBlocks", ref bExcludeHiddenBlocks);
cfg.Get("strExcludeAlertKeyword", ref strExcludeAlertKeyword);
cfg.Get("strAlertBlockTypes", ref strAlertBlockTypes);
cfg.Get("HORIZONTAL_COUNT", ref HORIZONTAL_COUNT);
cfg.Get("VERTICAL_COUNT", ref VERTICAL_COUNT);
cfg.Get("REFRESH_INTERVAL", ref REFRESH_INTERVAL);

cfg.Get("INSTRUCTION_PERCENT_LIMIT", ref INSTRUCTION_PERCENT_LIMIT);
INSTRUCTION_PERCENT_LIMIT = Math.Max(Math.Min(INSTRUCTION_PERCENT_LIMIT, 1f), 0.01f);

}

bool ProcessRunCommands(string cmd)
{
string[] tokens = cmd.Split(':');
if (tokens.Length &gt; 1)
{
cmd = tokens[0].Trim();

int value;
if (Int32.TryParse(tokens[1], out value) &amp;&amp; value &gt;= 0 &amp;&amp; value &lt;= lyts.Count)
{
pnStart = pnEnd = Math.Max(value - 1, 0);
}
else
{
pnStart = pnEnd = 0;
}
}
else
{
pnStart = 0;
pnEnd = lyts.Count - 1;
}

if (cmd.Equals("REDRAW"))
{
for (int i = pnStart; i &lt;= pnEnd; i++)
{
if (lyts[i].DisplayParametersChanged() &amp;&amp; lyts[i].ProcessDisplayParameters())
{
lyts[i].ResetStructureBase();
}
}
RedrawStructure();
return true;
}
else if (cmd.Equals("RELOAD"))
{
InitDisplayPanels();

InitMiscPanels(rptPnls, strReportPanelTag);
InitMiscPanels(statPnls, strStatusPanelTag);
InitMiscPanels(menuPnls, strMenuPanelTag);

groupStats.Clear();

subCounter = 0;
subMode = 3;
mode = 0;

init = false;
return true;
}
else if (cmd.Equals("RESET"))
{
subCounter = 0;
subMode = 0;
mode = 0;

init = false;
return true;
}
else if (FLAG_CMD.ContainsKey(cmd))
{
int[] opt = FLAG_CMD[cmd];
bool needRedraw = (opt[0] &lt;= 3);

for (int i = pnStart; i &lt;= pnEnd; i++)
{
LayoutPanel p = lyts[i];

switch (opt[0])
{
case 0:
p.bPaintDensity = (opt[1] == 2 ? !p.bPaintDensity : (opt[1] == 0));
break;
case 1:
p.bUseRelativeDensity = (opt[1] == 2 ? !p.bUseRelativeDensity : (opt[1] == 0));
break;
case 2:
p.bIncludeTerminalDensity = (opt[1] == 2 ? !p.bIncludeTerminalDensity : (opt[1] == 0));
break;
case 3:
p.bSmoothEdges = (opt[1] == 2 ? !p.bSmoothEdges : (opt[1] == 0));
break;
case 4:
p.bPaintLocationMarker = (opt[1] == 2 ? !p.bPaintLocationMarker : (opt[1] == 0));
break;
case 5:
p.bPaintTerminalBlocks = (opt[1] == 2 ? !p.bPaintTerminalBlocks : (opt[1] == 0));
break;
case 6:
p.bPaintAlertBlocks = (opt[1] == 2 ? !p.bPaintAlertBlocks : (opt[1] == 0));
break;
case 7:
p.bBlinkForAlert = (opt[1] == 2 ? !p.bBlinkForAlert : (opt[1] == 0));
break;
case 8:
p.bPaintCrossForAlert = (opt[1] == 2 ? !p.bPaintCrossForAlert : (opt[1] == 0));
break;
}

if (needRedraw)
{
p.WriteAndReset();
}
else
{
p.WriteDisplayParameters();
}
}

if (needRedraw)
{
RedrawStructure();
return true;
}
else
{
lastBaseMass = 0f;

mode = (mode == 3 ? 4 : 0);
}
}
else if (cmd.Equals("DEFAULT_VIEW"))
{
for (int i = pnStart; i &lt;= pnEnd; i++)
{
CustomConfiguration.ParseCustomData(lyts[i].Panel, lyts[i].config);
lyts[i].ProcessDisplayParameters(lyts[i].config.GetValueOrDefault("DEFAULTVIEW", ""));

lyts[i].WriteAndReset();
}
RedrawStructure();
return true;
}
else if (cmd.Equals("REMEMBER_VIEW"))
{
for (int i = pnStart; i &lt;= pnEnd; i++)
{
lyts[i].config["DEFAULTVIEW"] = lyts[i].Panel.GetPublicTitle();
CustomConfiguration.WriteCustomData(lyts[i].Panel, lyts[i].config);
}
}
else if (cmd.Equals("ZOOM_IN") || cmd.Equals("ZOOM_OUT") || cmd.Equals("ZOOM_IN_FAST") || cmd.Equals("ZOOM_OUT_FAST"))
{
int startX, endX, minX, maxX, startY, endY, minY, maxY;

bool haveChanges = false;

for (int i = pnStart; i &lt;= pnEnd; i++)
{
GetLayoutStartEndMinMax(lyts[i], lyts[i].grAxXDir, out startX, out endX, out minX, out maxX);
GetLayoutStartEndMinMax(lyts[i], lyts[i].grAxYDir, out startY, out endY, out minY, out maxY);

bool needRedraw;

if (cmd.EndsWith("FAST"))
{
int newStartX, newStartY, newEndX, newEndY;

if (cmd.Equals("ZOOM_IN_FAST"))
{
newStartX = startX + ((endX - startX + 1) / 4);
newStartY = startY + ((endY - startY + 1) / 4);
newEndX = endX - ((endX - startX + 1) / 4);
newEndY = endY - ((endY - startY + 1) / 4);
}
else
{
newStartX = Math.Max(startX - Math.Max((endX - startX + 1) / 2, 1), minX);
newStartY = Math.Max(startY - Math.Max((endY - startY + 1) / 2, 1), minY);
newEndX = Math.Min(endX + Math.Max((endX - startX + 1) / 2, 1), maxX);
newEndY = Math.Min(endY + Math.Max((endY - startY + 1) / 2, 1), maxY);
}

if (newStartX &lt;= newEndX &amp;&amp; newStartY &lt;= newEndY &amp;&amp; (newStartX != startX || newStartY != startY || newEndX != endX || newEndY != endY))
{
needRedraw = true;

startX = newStartX;
endX = newEndX;
startY = newStartY;
endY = newEndY;
}
else
{
needRedraw = false;
}
}
else if (cmd.Equals("ZOOM_IN"))
{
startX++;
endX--;
startY++;
endY--;

needRedraw = (startX &lt;= endX &amp;&amp; startY &lt;= endY);
}
else
{
startX--;
endX++;
startY--;
endY++;

needRedraw = (startX &gt;= minX &amp;&amp; endX &lt;= maxX &amp;&amp; startY &gt;= minY &amp;&amp; endY &lt;= maxY);
}

if (needRedraw)
{
haveChanges = true;

SetLayoutStartEnd(lyts[i], lyts[i].grAxXDir, startX, endX);
SetLayoutStartEnd(lyts[i], lyts[i].grAxYDir, startY, endY);

lyts[i].WriteAndReset();
}
}

if (haveChanges)
{
RedrawStructure();
return true;
}
}
else if (cmd.Equals("ZOOM_RESET"))
{
for (int i = pnStart; i &lt;= pnEnd; i++)
{
lyts[i].grStX = gridMin.X;
lyts[i].grEndX = gridMax.X;
lyts[i].grStY = gridMin.Y;
lyts[i].grEndY = gridMax.Y;
lyts[i].grStZ = gridMin.Z;
lyts[i].grEndZ = gridMax.Z;

lyts[i].WriteAndReset();
}
RedrawStructure();
return true;
}
else if (cmd.Equals("FLIP_LEFT"))
{
for (int i = pnStart; i &lt;= pnEnd; i++)
{
do
{
lyts[i].grAxX += 2;
if (lyts[i].grAxX &gt; 5)
{
lyts[i].grAxX = (lyts[i].grAxX == 6 ? 1 : 0);
}
}
while ((lyts[i].grAxY / 2) == (lyts[i].grAxX / 2));

lyts[i].WriteAndReset();
}
RedrawStructure();
return true;
}
else if (cmd.Equals("FLIP_RIGHT"))
{
for (int i = pnStart; i &lt;= pnEnd; i++)
{
do
{
lyts[i].grAxX -= 2;
if (lyts[i].grAxX &lt; 0)
{
lyts[i].grAxX = (lyts[i].grAxX == -2 ? 5 : 4);
}
}
while ((lyts[i].grAxY / 2) == (lyts[i].grAxX / 2));

lyts[i].WriteAndReset();
}
RedrawStructure();
return true;
}
else if (cmd.Equals("FLIP_UP"))
{
for (int i = pnStart; i &lt;= pnEnd; i++)
{
do
{
lyts[i].grAxY += 2;
if (lyts[i].grAxY &gt; 5)
{
lyts[i].grAxY = (lyts[i].grAxY == 6 ? 1 : 0);
}
}
while ((lyts[i].grAxY / 2) == (lyts[i].grAxX / 2));

lyts[i].WriteAndReset();
}
RedrawStructure();
return true;
}
else if (cmd.Equals("FLIP_DOWN"))
{
for (int i = pnStart; i &lt;= pnEnd; i++)
{
do
{
lyts[i].grAxY -= 2;
if (lyts[i].grAxY &lt; 0)
{
lyts[i].grAxY = (lyts[i].grAxY == -2 ? 5 : 4);
}
}
while ((lyts[i].grAxY / 2) == (lyts[i].grAxX / 2));

lyts[i].WriteAndReset();
}
RedrawStructure();
return true;
}
else if (cmd.Equals("SPIN_CW"))
{
for (int i = pnStart; i &lt;= pnEnd; i++)
{
int tmpGridAxisY = lyts[i].grAxY;
lyts[i].grAxY = lyts[i].grAxX;
lyts[i].grAxX = (tmpGridAxisY % 2 == 0 ? tmpGridAxisY + 1 : tmpGridAxisY - 1);

lyts[i].WriteAndReset();
}
RedrawStructure();
return true;
}
else if (cmd.Equals("SPIN_CCW"))
{
for (int i = pnStart; i &lt;= pnEnd; i++)
{
int tmpGridAxisX = lyts[i].grAxX;
lyts[i].grAxX = lyts[i].grAxY;
lyts[i].grAxY = (tmpGridAxisX % 2 == 0 ? tmpGridAxisX + 1 : tmpGridAxisX - 1);

lyts[i].WriteAndReset();
}
RedrawStructure();
return true;
}
else if (cmd.Equals("SHRINK_SLICE") || cmd.Equals("EXPAND_SLICE"))
{
bool shrink = cmd.Equals("SHRINK_SLICE");

bool haveChanges = false;

for (int i = pnStart; i &lt;= pnEnd; i++)
{
int startZ;
int endZ;
int minZ;
int maxZ;

GetLayoutStartEndMinMax(lyts[i], lyts[i].grAxZDir, out startZ, out endZ, out minZ, out maxZ);

startZ += (shrink ? 1 : -1);
endZ += (shrink ? -1 : 1);

if (startZ &gt;= minZ &amp;&amp; endZ &lt;= maxZ &amp;&amp; startZ &lt;= endZ)
{
haveChanges = true;

SetLayoutStartEnd(lyts[i], lyts[i].grAxZDir, startZ, endZ);

lyts[i].WriteAndReset();
}
}

if (haveChanges)
{
RedrawStructure();
return true;
}
}
else if (cmd.Equals("INC_HDENSITY") || cmd.Equals("DEC_HDENSITY") || cmd.Equals("INC_MDENSITY") || cmd.Equals("DEC_MDENSITY") || cmd.Equals("INC_LDENSITY") || cmd.Equals("DEC_LDENSITY"))
{
string[] cmdTokens = cmd.Split('_');

bool isInc = cmdTokens[0].Equals("INC");
int denseType = (cmdTokens[1].Equals("HDENSITY") ? 0 : (cmdTokens[1].Equals("MDENSITY") ? 1 : 2));

bool haveChanges = false;

for (int i = pnStart; i &lt;= pnEnd; i++)
{
float newValue = (denseType == 0 ? lyts[i].highDensityThreshold : (denseType == 1 ? lyts[i].midDensityThreshold : lyts[i].lowDensityThreshold)) + (isInc ? -0.05f : 0.05f);
newValue = Math.Min(1f, Math.Max(0f, newValue));

bool needRedraw = false;

switch (denseType)
{
case 0:
if (lyts[i].highDensityThreshold != newValue)
{
lyts[i].highDensityThreshold = newValue;
needRedraw = true;
}
break;
case 1:
if (lyts[i].midDensityThreshold != newValue)
{
lyts[i].midDensityThreshold = newValue;
needRedraw = true;
}
break;
case 2:
if (lyts[i].lowDensityThreshold != newValue)
{
lyts[i].lowDensityThreshold = newValue;
needRedraw = true;
}
break;
}

if (needRedraw)
{
haveChanges = true;
lyts[i].WriteAndReset();
}
}

if (haveChanges)
{
RedrawStructure();
return true;
}
}
else if (GRID_CMD.Contains(cmd))
{
bool isStart;
bool isPos;
bool isPan;

bool haveChanges = false;

string[] token = cmd.Split('_');
Base6Directions.Axis axDir;

isPan = token[0].Equals("PAN");

if (isPan)
{
isPos = ("RIGHT,DOWN,BACKWARD".Contains(token[1]));
}
else
{
isPos = token[0].Equals("PLUS");
}

for (int i = pnStart; i &lt;= pnEnd; i++)
{
switch (token[1])
{
case "LEFT":
isStart = !lyts[i].grFlipX;
isPos = (lyts[i].grFlipX ? !isPos : isPos);
axDir = lyts[i].grAxXDir;
break;
case "RIGHT":
isStart = lyts[i].grFlipX;
isPos = (lyts[i].grFlipX ? !isPos : isPos);
axDir = lyts[i].grAxXDir;
break;
case "UP":
isStart = !lyts[i].grFlipY;
isPos = (lyts[i].grFlipY ? !isPos : isPos);
axDir = lyts[i].grAxYDir;
break;
case "DOWN":
isStart = lyts[i].grFlipY;
isPos = (lyts[i].grFlipY ? !isPos : isPos);
axDir = lyts[i].grAxYDir;
break;
case "FORWARD":
isStart = !lyts[i].grFlipZ;
isPos = (lyts[i].grFlipZ ? !isPos : isPos);
axDir = lyts[i].grAxZDir;
break;
case "BACKWARD":
isStart = lyts[i].grFlipZ;
isPos = (lyts[i].grFlipZ ? !isPos : isPos);
axDir = lyts[i].grAxZDir;
break;
default:
isStart = isPos = false;
axDir = 0;
break;
}

bool needRedraw = false;

switch (axDir)
{
case Base6Directions.Axis.LeftRight:
needRedraw = AdjustGridSize(ref lyts[i].grStX, ref lyts[i].grEndX, gridMin.X, gridMax.X, isStart, isPos, isPan);
break;
case Base6Directions.Axis.UpDown:
needRedraw = AdjustGridSize(ref lyts[i].grStY, ref lyts[i].grEndY, gridMin.Y, gridMax.Y, isStart, isPos, isPan);
break;
case Base6Directions.Axis.ForwardBackward:
needRedraw = AdjustGridSize(ref lyts[i].grStZ, ref lyts[i].grEndZ, gridMin.Z, gridMax.Z, isStart, isPos, isPan);
break;
}

if (needRedraw)
{
haveChanges = true;
lyts[i].WriteAndReset();
}
}

if (haveChanges)
{
RedrawStructure();
return true;
}
}
else if (cmd.Equals("LIGHTEN"))
{
for (int i = pnStart; i &lt;= pnEnd; i++)
{
lyts[i].LightenDisplay();
}
}
else if (cmd.Equals("DARKEN"))
{
for (int i = pnStart; i &lt;= pnEnd; i++)
{
lyts[i].DarkenDisplay();
}
}
else if (cmd.Equals("TOGGLE_IMAGE"))
{
for (int i = pnStart; i &lt;= pnEnd; i++)
{
lyts[i].ToggleImageDisplay();
}
}
else if (cmd.Equals("SHOW_HIDE_NUMBER"))
{
subMode = 0;
mode = (mode == 3 ? 4 : 3);
}
else if (cmd.StartsWith("TOGGLE_AL_"))
{
for (int i = pnStart; i &lt;= pnEnd; i++)
{
byte mask = 0;
switch (cmd.Substring(10))
{
case "VENT":
mask = AL_VENT;
break;
case "SENSOR":
mask = AL_SENSOR;
break;
case "TURRET":
mask = AL_TURRET;
break;
case "DOOR":
mask = AL_DOOR;
break;
case "HACKED":
mask = AL_HACKED;
break;
}

if (mask &gt; 0)
{
if ((lyts[i].alertMask &amp; mask) &gt; 0)
{
lyts[i].alertMask &amp;= (byte)~mask;
}
else
{
lyts[i].alertMask |= mask;
}
lyts[i].WriteDisplayParameters();
}
}

lastBaseMass = 0f;

mode = (mode == 3 ? 4 : 0);
}

return false;
}

void GetLayoutStartEndMinMax(LayoutPanel layout, Base6Directions.Axis axis, out int start, out int end, out int min, out int max)
{
if (axis == Base6Directions.Axis.LeftRight)
{
start = layout.grStX;
end = layout.grEndX;
min = gridMin.X;
max = gridMax.X;
}
else if (axis == Base6Directions.Axis.UpDown)
{
start = layout.grStY;
end = layout.grEndY;
min = gridMin.Y;
max = gridMax.Y;
}
else
{
start = layout.grStZ;
end = layout.grEndZ;
min = gridMin.Z;
max = gridMax.Z;
}
}

void SetLayoutStartEnd(LayoutPanel layout, Base6Directions.Axis axis, int start, int end)
{
if (axis == Base6Directions.Axis.LeftRight)
{
layout.grStX = start;
layout.grEndX = end;
}
else if (axis == Base6Directions.Axis.UpDown)
{
layout.grStY = start;
layout.grEndY = end;
}
else
{
layout.grStZ = start;
layout.grEndZ = end;
}
}

string GetLayoutParameterValue(string key)
{
string[] tokens = key.Split(':');
if (tokens.Length &gt; 1)
{
key = tokens[0].Trim();

int value;
if (Int32.TryParse(tokens[1], out value) &amp;&amp; value &gt; 0 &amp;&amp; value &lt;= lyts.Count)
{
return lyts[value - 1].GetParameterDescription(key);
}
}
return "";
}

/*----- Initialization Methods -----*/

void StaticInit()
{
if (strExcludeAlertKeyword != null)
{
strExcludeAlertKeyword = (strExcludeAlertKeyword.Length == 0 ? null : strExcludeAlertKeyword.ToUpper());
}

progressIcons[0] = '\u2014';
progressIcons[1] = '\\';
progressIcons[2] = '|';
progressIcons[3] = '/';
progressIcons[4] = '\u2014';
progressIcons[5] = '\\';
progressIcons[6] = '|';
progressIcons[7] = '/';

ADJACENT_MASKS[0] = SUB_X;
ADJACENT_MASKS[1] = ADD_X;
ADJACENT_MASKS[2] = SUB_Y;
ADJACENT_MASKS[3] = ADD_Y;
ADJACENT_MASKS[4] = SUB_Z;
ADJACENT_MASKS[5] = ADD_Z;

WATCH_BLK_TYPE = new HashSet&lt;string&gt;(strAlertBlockTypes.Split(','));

string[] flags = new string[] { "DENSE", "RELDENSE", "TERMDENSE", "SMOOTH", "MARKER", "TERM", "ALERT", "BLINK", "CROSS" };
FLAG_CMD = new Dictionary&lt;string, int[]&gt;();
for (int i = 0; i &lt; flags.Length; i++)
{
FLAG_CMD.Add(flags[i], new int[] { i, 0 });
FLAG_CMD.Add("NO_" + flags[i], new int[] { i, 1 });
FLAG_CMD.Add("TOGGLE_" + flags[i], new int[] { i, 2 });
}

GRID_CMD = new HashSet&lt;string&gt;(new string[] { "PLUS_LEFT", "MINUS_LEFT", "PLUS_RIGHT", "MINUS_RIGHT", "PLUS_UP", "MINUS_UP", "PLUS_DOWN", "MINUS_DOWN", "PLUS_FORWARD", "MINUS_FORWARD", "PLUS_BACKWARD", "MINUS_BACKWARD", "PAN_LEFT", "PAN_RIGHT", "PAN_UP", "PAN_DOWN", "PAN_FORWARD", "PAN_BACKWARD" });

MENU_CMD = new Dictionary&lt;string, int&gt;();
MENU_CMD.Add("UP", 1);
MENU_CMD.Add("U", 1);
MENU_CMD.Add("DOWN", 2);
MENU_CMD.Add("D", 2);
MENU_CMD.Add("LEFT", 3);
MENU_CMD.Add("L", 3);
MENU_CMD.Add("RIGHT", 4);
MENU_CMD.Add("R", 4);
MENU_CMD.Add("BACK", 5);
MENU_CMD.Add("B", 5);
MENU_CMD.Add("ENTER", 6);
MENU_CMD.Add("E", 6);

priorityBlocks = new List&lt;IMyTerminalBlock&gt;[3];
for (int i = 0; i &lt; priorityBlocks.Length; i++)
{
priorityBlocks[i] = new List&lt;IMyTerminalBlock&gt;();
}

InitMenu();
}

void InitMenu()
{
Func&lt;string, string&gt; funcVK = GetLayoutParameterValue;

Menu mnCL = new Menu(funcVK);
mnCL.Name = "Lighten Display";
mnCL.Action = "LIGHTEN:{pindex}";
mnCL.ValueKey = "BRIGHTNESS:{pindex}";
mnCL.NameReplaceLevel = 4;
mnCL.ActionReplaceLevel = 4;

Menu mnCD = new Menu(funcVK);
mnCD.Name = "Darken Display";
mnCD.Action = "DARKEN:{pindex}";
mnCD.ValueKey = "BRIGHTNESS:{pindex}";
mnCD.NameReplaceLevel = 4;
mnCD.ActionReplaceLevel = 4;

Menu mnCTI = new Menu(funcVK);
mnCTI.Name = "Toggle Image";
mnCTI.Action = "TOGGLE_IMAGE:{pindex}";
mnCTI.ValueKey = "IMAGE:{pindex}";
mnCTI.NameReplaceLevel = 4;
mnCTI.ActionReplaceLevel = 4;

Menu mnCTAC = new Menu(funcVK);
mnCTAC.Name = "Toggle Cross For Alert";
mnCTAC.Action = "TOGGLE_CROSS:{pindex}";
mnCTAC.ValueKey = "CROSS:{pindex}";
mnCTAC.NameReplaceLevel = 4;
mnCTAC.ActionReplaceLevel = 4;

Menu mnCTLM = new Menu(funcVK);
mnCTLM.Name = "Toggle Location Marker";
mnCTLM.Action = "TOGGLE_MARKER:{pindex}";
mnCTLM.ValueKey = "MARKER:{pindex}";
mnCTLM.NameReplaceLevel = 4;
mnCTLM.ActionReplaceLevel = 4;

Menu mnCA = new Menu();
mnCA.Title = "Panel {index}";
mnCA.Name = "Panel {index} - {name}";
mnCA.RepeatList = lyts;
mnCA.NameReplaceLevel = 3;
mnCA.AddMenu(mnCL);
mnCA.AddMenu(mnCD);
mnCA.AddMenu(mnCTI);
mnCA.AddMenu(mnCTAC);
mnCA.AddMenu(mnCTLM);

Menu mnCPA = new Menu();
mnCPA.Name = "All Panels";
mnCPA.CurrentSelection = -99;
Menu mnCLC = mnCL.CopyMenu();
Menu mnCDC = mnCD.CopyMenu();
Menu mnCTIC = mnCTI.CopyMenu();
Menu mnCTACC = mnCTAC.CopyMenu();
Menu mnCTLMC = mnCTLM.CopyMenu();
mnCLC.Action = mnCLC.Action.Replace(":{pindex}", "");
mnCLC.ValueKey = "";
mnCDC.Action = mnCDC.Action.Replace(":{pindex}", "");
mnCDC.ValueKey = "";
mnCTIC.Action = mnCTIC.Action.Replace(":{pindex}", "");
mnCTIC.ValueKey = "";
mnCTACC.Action = mnCTACC.Action.Replace(":{pindex}", "");
mnCTACC.ValueKey = "";
mnCTLMC.Action = mnCTLMC.Action.Replace(":{pindex}", "");
mnCTLMC.ValueKey = "";
mnCPA.AddMenu(mnCLC);
mnCPA.AddMenu(mnCDC);
mnCPA.AddMenu(mnCTIC);
mnCPA.AddMenu(mnCTACC);
mnCPA.AddMenu(mnCTLMC);

Menu mnCosmetics = new Menu();
mnCosmetics.Name = "Panel Cosmetics";
mnCosmetics.AddMenu(mnCPA);
mnCosmetics.AddMenu(mnCA);

string[] menuNamesArray = new string[] { "Toggle Density", "Toggle Relative Density", "Toggle Smooth Edges", "Toggle Terminal Blocks", "Toggle Alert Blocks", "Toggle Vent Alerts", "Toggle Sensor Alerts", "Toggle Turret Alerts", "Toggle Door Alerts", "Toggle Hacked Alerts", "Toggle Alert Blinking", "Default View", "Remember View", "Zoom In", "Zoom Out", "Zoom In Fast", "Zoom Out Fast", "Zoom Reset", "Flip Left", "Flip Right", "Flip Up", "Flip Down", "Spin Clockwise", "Spin Counter Clockwise", "Shrink Slice", "Expand Slice", "Increase High Density", "Decrease High Density", "Increase Medium Density", "Decrease Medium Density", "Increase Low Density", "Decrease Low Density", "Pan Left", "Pan Right", "Pan Up", "Pan Down", "Pan Forward", "Pan Backward", "Plus Left", "Minus Left", "Plus Right", "Minus Right", "Plus Up", "Minus Up", "Plus Down", "Minus Down", "Plus Forward", "Minus Forward", "Plus Backward", "Minus Backward" };
string[] menuActionsArray = new string[] { "TOGGLE_DENSE", "TOGGLE_RELDENSE", "TOGGLE_SMOOTH", "TOGGLE_TERM", "TOGGLE_ALERT", "TOGGLE_AL_VENT", "TOGGLE_AL_SENSOR", "TOGGLE_AL_TURRET", "TOGGLE_AL_DOOR", "TOGGLE_AL_HACKED", "TOGGLE_BLINK", "DEFAULT_VIEW", "REMEMBER_VIEW", "ZOOM_IN", "ZOOM_OUT", "ZOOM_IN_FAST", "ZOOM_OUT_FAST", "ZOOM_RESET", "FLIP_LEFT", "FLIP_RIGHT", "FLIP_UP", "FLIP_DOWN", "SPIN_CW", "SPIN_CCW", "SHRINK_SLICE", "EXPAND_SLICE", "INC_HDENSITY", "DEC_HDENSITY", "INC_MDENSITY", "DEC_MDENSITY", "INC_LDENSITY", "DEC_LDENSITY", "PAN_LEFT", "PAN_RIGHT", "PAN_UP", "PAN_DOWN", "PAN_FORWARD", "PAN_BACKWARD", "PLUS_LEFT", "MINUS_LEFT", "PLUS_RIGHT", "MINUS_RIGHT", "PLUS_UP", "MINUS_UP", "PLUS_DOWN", "MINUS_DOWN", "PLUS_FORWARD", "MINUS_FORWARD", "PLUS_BACKWARD", "MINUS_BACKWARD" };
string[] menuActionsValueKey = new string[] { "DENSE", "RELDENSE", "SMOOTH", "TERM", "ALERT", "AL_VENT", "AL_SENSOR", "AL_TURRET", "AL_DOOR", "AL_HACKED", "BLINK", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" };

Menu mnAA = new Menu();
mnAA.Title = "Panel {index}";
mnAA.Name = "Panel {index} - {name}";
mnAA.RepeatList = lyts;
mnAA.NameReplaceLevel = 3;

Menu mnAPA = new Menu();
mnAPA.Name = "All Panels";
mnAPA.CurrentSelection = -99;

for (int i = 0; i &lt; menuNamesArray.Length; i++)
{
Menu mnNext = new Menu(funcVK);
mnNext.Name = menuNamesArray[i];
mnNext.Action = menuActionsArray[i] + ":{pindex}";
mnNext.ValueKey = menuActionsValueKey[i] + (menuActionsValueKey[i].Length &gt; 0 ? ":{pindex}" : "");
mnNext.NameReplaceLevel = 4;
mnNext.ActionReplaceLevel = 4;
mnAA.AddMenu(mnNext);
Menu mnNextCopy = mnNext.CopyMenu();
mnNextCopy.Action = mnNextCopy.Action.Replace(":{pindex}", "");
mnNextCopy.ValueKey = "";
mnAPA.AddMenu(mnNextCopy);
}

Menu mnActions = new Menu();
mnActions.Name = "Panel Actions";
mnActions.AddMenu(mnAPA);
mnActions.AddMenu(mnAA);

Menu mnTogNum = new Menu();
mnTogNum.Name = "Show/Hide Panel Number";
mnTogNum.Action = "SHOW_HIDE_NUMBER";

Menu mnRedraw = new Menu();
mnRedraw.Name = "Redraw All Panels";
mnRedraw.Action = "REDRAW";

Menu mnReload = new Menu();
mnReload.Name = "Reload Panels";
mnReload.Action = "RELOAD";

Menu mnAreYouSure = new Menu();
mnAreYouSure.Name = "Are You Sure?";

Menu mnBlank = new Menu();
mnBlank.Name = "-";

Menu mnResetConfirm = new Menu();
mnResetConfirm.Name = "Yes";
mnResetConfirm.Action = "RESET";

Menu mnReset = new Menu();
mnReset.Name = "Reset System";
mnReset.AddMenu(mnAreYouSure);
mnReset.AddMenu(mnBlank);
mnReset.AddMenu(mnResetConfirm);

rtMnu = new Menu();
rtMnu.Name = "Home";
rtMnu.AddMenu(mnCosmetics);
rtMnu.AddMenu(mnActions);
rtMnu.AddMenu(mnTogNum);
rtMnu.AddMenu(mnRedraw);
rtMnu.AddMenu(mnReload);
rtMnu.AddMenu(mnReset);

selMnu = rtMnu;

curMnId = 0;
actMnCnt = 0;
}

void InitMiscPanels(List&lt;IMyTextPanel&gt; panels, string tagName)
{
List&lt;IMyTerminalBlock&gt; blks = new List&lt;IMyTerminalBlock&gt;();
GridTerminalSystem.SearchBlocksOfName(tagName, blks);
panels.Clear();
for (int i = 0; i &lt; blks.Count; i++)
{
IMyTextPanel panel = blks[i] as IMyTextPanel;
if (panel != null)
{
panel.ShowPublicTextOnScreen();
panels.Add(panel);

panel.SetValue("FontSize", DEF_MISC_PANEL_FONT_SIZE);
}
}
}

void InitDisplayPanels()
{
List&lt;IMyTerminalBlock&gt; displayPanels = new List&lt;IMyTerminalBlock&gt;();
GridTerminalSystem.SearchBlocksOfName(strDisplayPanelTag, displayPanels);

lyts.Clear();
for (int i = 0; i &lt; displayPanels.Count; i++)
{
IMyTextPanel panel = displayPanels[i] as IMyTextPanel;
if (panel != null)
{
LayoutPanel layout = new LayoutPanel(GridTerminalSystem, Runtime, Me);

layout.Panel = panel;
layout.PanelHorizontalCount = HORIZONTAL_COUNT;
layout.PanelVerticalCount = VERTICAL_COUNT;

layout.InitDisplayPanels();

lyts.Add(layout);
}
}
}

void InitRemoteControl()
{
remoteBlocks.Clear();
GridTerminalSystem.GetBlocksOfType(remoteBlocks, b =&gt; { return b.CubeGrid == Me.CubeGrid; });
}

bool InitStructureData(IMyCubeGrid cubeGrid, Stack&lt;Vector3I&gt; remainingCubes, Dictionary&lt;Vector3I, byte&gt; foundCubes, HashSet&lt;Vector3I&gt; testedCubes, int instLimit)
{
bool exists;
byte adjacent;
Vector3I nextCube;

while (remainingCubes.Count &gt; 0 &amp;&amp; Runtime.CurrentInstructionCount &lt; instLimit)
{
Vector3I currentCube = remainingCubes.Pop();
adjacent = 0;

for (int i = 0; i &lt; 6; i++)
{
nextCube = currentCube + ADJACENT_VECTORS[i];
if (testedCubes.Contains(nextCube))
{
if (foundCubes.ContainsKey(nextCube))
{
adjacent |= ADJACENT_MASKS[i];
}
}
else
{
testedCubes.Add(nextCube);
exists = cubeGrid.CubeExists(nextCube);
if (exists)
{
remainingCubes.Push(nextCube);
foundCubes.Add(nextCube, 0);
adjacent |= ADJACENT_MASKS[i];
}
}
}

foundCubes[currentCube] = adjacent;
}

return (remainingCubes.Count == 0);
}

/*----- Grid Computation Methods -----*/

int ComputeStructureDensity(List&lt;KeyValuePair&lt;Vector3I, byte&gt;&gt; blkList, int index, int instLimit)
{
while (index &lt; blkList.Count &amp;&amp; Runtime.CurrentInstructionCount &lt; instLimit)
{
KeyValuePair&lt;Vector3I, byte&gt; blk = blkList[index];

IMySlimBlock slimBlock = Me.CubeGrid.GetCubeBlock(blk.Key);
bool isArmorBlock = (slimBlock == null || slimBlock.FatBlock == null);

for (int i = pnStart; i &lt;= pnEnd; i++)
{
if (lyts[i].bPaintDensity)
{
lyts[i].ComputeStructureDensity(blk, isArmorBlock);
}
}

index++;
}

return index;
}

void CompileTotalGridSize()
{
totalMin = gridMax;
totalMax = gridMin;

for (int i = 0; i &lt; lyts.Count; i++)
{
totalMin.X = Math.Min(totalMin.X, lyts[i].grMin.X);
totalMin.Y = Math.Min(totalMin.Y, lyts[i].grMin.Y);
totalMin.Z = Math.Min(totalMin.Z, lyts[i].grMin.Z);
totalMax.X = Math.Max(totalMax.X, lyts[i].grMax.X);
totalMax.Y = Math.Max(totalMax.Y, lyts[i].grMax.Y);
totalMax.Z = Math.Max(totalMax.Z, lyts[i].grMax.Z);
}
}

int FilterTerminalBlocks(IMyCubeGrid cubeGrid, List&lt;IMyTerminalBlock&gt; blkList, List&lt;IMyTerminalBlock&gt; filteredList, int index, int instLimit)
{
while (index &lt; blkList.Count &amp;&amp; Runtime.CurrentInstructionCount &lt; instLimit)
{
IMyTerminalBlock blk = blkList[index];
if (blk.CubeGrid == cubeGrid)
{
if (!bExcludeHiddenBlocks || blk.ShowInTerminal)
{
filteredList.Add(blk);
}
}

index++;
}

return index;
}

int FilterWatchedBlocks(IMyCubeGrid grid, List&lt;IMyTerminalBlock&gt; blkList, List&lt;WatchField&gt; watchedList, int index, int instLimit)
{
while (index &lt; blkList.Count &amp;&amp; Runtime.CurrentInstructionCount &lt; instLimit)
{
IMyTerminalBlock blk = blkList[index];

if (Vector3I.BoxContains(totalMin, totalMax, blk.Position) &amp;&amp; blk.CubeGrid == grid)
{
if (WATCH_BLK_TYPE.Contains(blk.BlockDefinition.TypeIdString.Replace("MyObjectBuilder_", "")))
{
if (strExcludeAlertKeyword == null || !blk.CustomName.ToUpper().Contains(strExcludeAlertKeyword))
{
watchedList.Add(new WatchField(blk));
}
}
}

index++;
}

return index;
}

/*----- Paint Methods -----*/

int PaintStructureBase(List&lt;KeyValuePair&lt;Vector3I, byte&gt;&gt; blkList, int index, int instLimit)
{
while (index &lt; blkList.Count &amp;&amp; Runtime.CurrentInstructionCount &lt; instLimit)
{
KeyValuePair&lt;Vector3I, byte&gt; blk = blkList[index];

for (int i = pnStart; i &lt;= pnEnd; i++)
{
lyts[i].PaintStructureBase(blk);
}

index++;
}

return index;
}

int PaintMissingStructure(List&lt;KeyValuePair&lt;Vector3I, byte&gt;&gt; blkList, int index, int instLimit)
{
while (index &lt; blkList.Count &amp;&amp; Runtime.CurrentInstructionCount &lt; instLimit)
{
KeyValuePair&lt;Vector3I, byte&gt; blk = blkList[index];

if (!Me.CubeGrid.CubeExists(blk.Key))
{
for (int i = 0; i &lt; lyts.Count; i++)
{
lyts[i].PaintMissingStructure(blk);
}

msStructCnt++;
}

index++;
}

return index;
}

int PaintGoodTerminalBlocks(List&lt;IMyTerminalBlock&gt; blkList, List&lt;IMyTerminalBlock&gt;[] badBlocks, int index, int instLimit)
{
while (index &lt; blkList.Count &amp;&amp; Runtime.CurrentInstructionCount &lt; instLimit)
{
IMyTerminalBlock blk = blkList[index];

int drawLevel;

if (blk.CubeGrid == Me.CubeGrid)
{
if (blk.IsFunctional)
{
drawLevel = 1;
}
else if (Me.CubeGrid.CubeExists(blk.Position))
{
IMySlimBlock slimBlock = Me.CubeGrid.GetCubeBlock(blk.Position);
if (slimBlock != null &amp;&amp; slimBlock.FatBlock != blk)
{
IMyTerminalBlock replaceBlock = slimBlock.FatBlock as IMyTerminalBlock;
if (replaceBlock != null &amp;&amp; replaceBlock.Min == blk.Min &amp;&amp; replaceBlock.Max == blk.Max)
{
blkList[index] = replaceBlock;
blk = replaceBlock;
}

drawLevel = 3;
}
else
{
drawLevel = 2;
}
}
else
{
drawLevel = 3;
}
}
else
{
IMyTerminalBlock replaceBlock = null;
if (Me.CubeGrid.CubeExists(blk.Position))
{
IMySlimBlock slimBlock = Me.CubeGrid.GetCubeBlock(blk.Position);
if (slimBlock != null)
{
replaceBlock = slimBlock.FatBlock as IMyTerminalBlock;
if (replaceBlock != null &amp;&amp; replaceBlock.Min == blk.Min &amp;&amp; replaceBlock.Max == blk.Max)
{
blkList[index] = replaceBlock;
blk = replaceBlock;
}
}
}

if (replaceBlock == null)
{
drawLevel = 3;
}
else if (replaceBlock.IsFunctional)
{
drawLevel = 1;
}
else
{
drawLevel = 2;
}
}

if (drawLevel &lt; 3 &amp;&amp; blk.IsBeingHacked)
{
drawLevel = 4;
}

if (drawLevel == 1)
{
for (int i = 0; i &lt; lyts.Count; i++)
{
if (lyts[i].bPaintTerminalBlocks)
{
lyts[i].PaintTerminalBlocks(blk, drawLevel, chrTerminalBlockFunctional, false);
}
}
}
else
{
badBlocks[drawLevel - 2].Add(blk);
}

index++;
}

return index;
}

int PaintBadTerminalBlocks(List&lt;IMyTerminalBlock&gt;[] badBlocks, int index, int instLimit)
{
while (index &lt; priorityCount &amp;&amp; Runtime.CurrentInstructionCount &lt; instLimit)
{
IMyTerminalBlock blk;
char chrPaint;
int drawLevel;

if (index &lt; dmgTermCnt)
{
blk = priorityBlocks[0][index];
chrPaint = chrTerminalBlockDamaged;
drawLevel = 2;
}
else if (index &lt; msTermCnt + dmgTermCnt)
{
blk = priorityBlocks[1][index - dmgTermCnt];
chrPaint = chrTerminalBlockMissing;
drawLevel = 3;
}
else
{
blk = priorityBlocks[2][index - msStructCnt - dmgTermCnt];
chrPaint = chrHacked;
drawLevel = 4;
}

for (int i = 0; i &lt; lyts.Count; i++)
{
if (lyts[i].bPaintTerminalBlocks)
{
if (drawLevel != 4 || (lyts[i].alertMask &amp; AL_HACKED) &gt; 0)
{
lyts[i].PaintTerminalBlocks(blk, drawLevel, chrPaint, (drawLevel == 4));
}
}
}

index++;
}

return index;
}

int PaintWatchedBlocks(List&lt;WatchField&gt; blkList, int index, int instLimit)
{
IMyAirVent airVent;
IMySensorBlock sensor;
IMyLargeTurretBase turret;
IMyDoor door;

while (index &lt; blkList.Count &amp;&amp; Runtime.CurrentInstructionCount &lt; instLimit)
{
IMyTerminalBlock blk = blkList[index].Block;

if (blk.CubeGrid != Me.CubeGrid || !blk.IsFunctional)
{
if (Me.CubeGrid.CubeExists(blk.Position))
{
IMySlimBlock slimBlock = Me.CubeGrid.GetCubeBlock(blk.Position);
if (slimBlock != null &amp;&amp; slimBlock.FatBlock != blk)
{
IMyTerminalBlock replaceBlock = slimBlock.FatBlock as IMyTerminalBlock;
if (replaceBlock != null &amp;&amp; replaceBlock.Min == blk.Min &amp;&amp; replaceBlock.Max == blk.Max)
{
blkList[index] = new WatchField(replaceBlock);
blk = replaceBlock;
}
}
}
}

byte mask = 0;
char chrPaint = chrStructure;

if ((airVent = blk as IMyAirVent) != null)
{
if (airVent.IsFunctional &amp;&amp; (airVent.Status != VentStatus.Pressurized))
{
mask = AL_VENT;
chrPaint = chrAlertAirVents;

ventALCnt++;
}
}
else if ((sensor = blk as IMySensorBlock) != null)
{
if (sensor.LastDetectedEntity.EntityId != 0)
{
Vector3D pos = sensor.LastDetectedEntity.Position;
Vector3I detectedPosition = Me.CubeGrid.WorldToGridInteger(pos);

if (needSensorDetected)
{
sensorDetected.Add(pos);
}

for (int i = 0; i &lt; lyts.Count; i++)
{
if (lyts[i].bPaintAlertBlocks &amp;&amp; lyts[i].isBlinkFrame &amp;&amp; lyts[i].scArea &lt;= BOX_AREA_DRAW_DENSITY_LIMIT &amp;&amp; ((lyts[i].alertMask &amp; AL_SENSOR) &gt; 0))
{
lyts[i].PaintWatchedBlocks(blk, detectedPosition, chrDetectedEntity);
}
}

sensALCnt++;
}
}
else if ((turret = blk as IMyLargeTurretBase) != null)
{
if (turret.IsFunctional)
{
if (turret.HasTarget)
{
mask = AL_TURRET;
chrPaint = chrAlertTurrets;

shootTurCnt++;
}
}
}
else if ((door = blk as IMyDoor) != null)
{
if (door.IsFunctional &amp;&amp; (door.Status != DoorStatus.Closed))
{
mask = AL_DOOR;
chrPaint = chrAlertDoors;
}
}

if (mask &gt; 0)
{
for (int i = 0; i &lt; lyts.Count; i++)
{
if (lyts[i].bPaintAlertBlocks &amp;&amp; lyts[i].isBlinkFrame &amp;&amp; lyts[i].scArea &lt;= BOX_AREA_DRAW_DENSITY_LIMIT &amp;&amp; ((lyts[i].alertMask &amp; mask) &gt; 0))
{
lyts[i].PaintWatchedBlocks(blk, null, chrPaint);
}
}
}

index++;
}

return index;
}

/*----- Definitions -----*/

public class WatchField
{
public WatchField(IMyTerminalBlock blk)
{
Block = blk;
}
public IMyTerminalBlock Block;
public float[] Value;
}

public class Menu
{
public string Title { get; set; }
public string Name { get; set; }
public string Action { get; set; }

public Func&lt;string, string&gt; FuncValueLookup { get; set; }
public string ValueKey { get; set; }

public Menu Parent { get; set; }
public List&lt;Menu&gt; ChildMenus { get; set; }

public System.Collections.IList RepeatList { get; set; }
public int NameReplaceLevel { get; set; }
public int ActionReplaceLevel { get; set; }

public int CurrentSelection { get; set; }

public Menu() { }
public Menu(Func&lt;string, string&gt; funcValueKeyLookup)
{
FuncValueLookup = funcValueKeyLookup;
}

public Menu CopyMenu()
{
Menu newMenu = new Menu();

newMenu.Title = Title;
newMenu.Name = Name;
newMenu.Action = Action;
newMenu.Parent = Parent;
newMenu.ChildMenus = ChildMenus;
newMenu.RepeatList = RepeatList;
newMenu.NameReplaceLevel = NameReplaceLevel;
newMenu.ActionReplaceLevel = ActionReplaceLevel;
newMenu.CurrentSelection = CurrentSelection;
newMenu.FuncValueLookup = FuncValueLookup;

return newMenu;
}

public void AddMenu(Menu childMenu)
{
if (ChildMenus == null)
{
ChildMenus = new List&lt;Menu&gt;();
}

childMenu.Parent = this;
ChildMenus.Add(childMenu);
}

public string GetName()
{
if (Name == null)
{
return "";
}
else if (NameReplaceLevel &lt;= 0)
{
if (FuncValueLookup != null &amp;&amp; ValueKey != null &amp;&amp; ValueKey.Length &gt; 0)
{
return Name + "   ( " + FuncValueLookup(ValueKey) + " )";
}
else
{
return Name;
}
}
else
{
string mnName = Name;

string mnValue = null;
if (FuncValueLookup != null &amp;&amp; ValueKey != null &amp;&amp; ValueKey.Length &gt; 0)
{
mnValue = ValueKey;
}

if ((NameReplaceLevel &amp; 1) &gt; 0)
{
mnName = mnName.Replace("{index}", (CurrentSelection + 1).ToString());
if (mnValue != null)
{
mnValue = mnValue.Replace("{index}", (CurrentSelection + 1).ToString());
}
}
if ((NameReplaceLevel &amp; 2) &gt; 0)
{
if (RepeatList == null || RepeatList.Count == 0)
{
mnName = mnName.Replace("{name}", "");
if (mnValue != null)
{
mnValue = mnValue.Replace("{name}", "");
}
}
else
{
int index = Math.Max(Math.Min(CurrentSelection, RepeatList.Count - 1), 0);
mnName = mnName.Replace("{name}", RepeatList[index].ToString());
if (mnValue != null)
{
mnValue = mnValue.Replace("{name}", RepeatList[index].ToString());
}
}
}
if ((NameReplaceLevel &amp; 4) &gt; 0)
{
mnName = mnName.Replace("{pindex}", (Parent == null ? "" : (Parent.CurrentSelection + 1).ToString()));
if (mnValue != null)
{
mnValue = mnValue.Replace("{pindex}", (Parent == null ? "" : (Parent.CurrentSelection + 1).ToString()));
}
}

if (mnValue != null)
{
mnName += "   ( " + FuncValueLookup(mnValue) + " )";
}

return mnName;
}
}

public string GetAction()
{
if (Action == null)
{
return "";
}
else if (ActionReplaceLevel &lt;= 0)
{
return Action;
}
else
{
string mnAction = Action;
if (mnAction == null)
{
return null;
}

if ((ActionReplaceLevel &amp; 1) &gt; 0)
{
mnAction = mnAction.Replace("{index}", (CurrentSelection + 1).ToString());
}
if ((ActionReplaceLevel &amp; 2) &gt; 0)
{
if (RepeatList == null || RepeatList.Count == 0)
{
mnAction = mnAction.Replace("{name}", "");
}
else
{
int index = Math.Max(Math.Min(CurrentSelection, RepeatList.Count - 1), 0);
mnAction = mnAction.Replace("{name}", RepeatList[index].ToString());
}
}
if ((ActionReplaceLevel &amp; 4) &gt; 0)
{
mnAction = mnAction.Replace("{pindex}", (Parent == null ? "" : (Parent.CurrentSelection + 1).ToString()));
}

return mnAction;
}
}

public string GetTitle()
{
if (Title == null)
{
return GetName();
}
else if (NameReplaceLevel &lt;= 0)
{
return Title;
}
else
{
string mnTitle = Title;

if ((NameReplaceLevel &amp; 1) &gt; 0)
{
mnTitle = mnTitle.Replace("{index}", (CurrentSelection + 1).ToString());
}
if ((NameReplaceLevel &amp; 2) &gt; 0)
{
if (RepeatList == null || RepeatList.Count == 0)
{
mnTitle = mnTitle.Replace("{name}", "");
}
else
{
int index = Math.Max(Math.Min(CurrentSelection, RepeatList.Count - 1), 0);
mnTitle = mnTitle.Replace("{name}", RepeatList[index].ToString());
}
}
if ((NameReplaceLevel &amp; 4) &gt; 0)
{
mnTitle = mnTitle.Replace("{pindex}", (Parent == null ? "" : (Parent.CurrentSelection + 1).ToString()));
}

return mnTitle;
}
}
}

public class LayoutPanel
{
public IMyGridTerminalSystem GridTerminalSystem { get; set; }
public IMyGridProgramRuntimeInfo Runtime { get; set; }
public IMyTerminalBlock ReferenceBlock { get; set; }
public IMyCubeGrid CubeGrid { get; set; }

public int PanelHorizontalCount { get; set; }
public int PanelVerticalCount { get; set; }

public bool bPaintDensity = DEF_PAINT_DENSITY;
public bool bPaintTerminalBlocks = DEF_PAINT_TERMINAL_BLOCKS;
public bool bPaintAlertBlocks = DEF_PAINT_ALERT_BLOCKS;

public bool bBlinkForAlert = DEF_BLINK_FOR_ALERT;
public bool bUseRelativeDensity = DEF_USE_RELATIVE_DENSITY;
public bool bIncludeTerminalDensity = DEF_INCLUDE_TERMINAL_DENSITY;
public bool bSmoothEdges = DEF_SMOOTH_EDGES;

public bool bPaintCrossForAlert = DEF_PAINT_CROSS_FOR_ALERT;

public bool bPaintLocationMarker = DEF_PAINT_LOCATION_MARKER;

public byte alertMask = DEF_ALERT_MASK;

public int pixelSize = DEF_PIXEL_SIZE;

public float highDensityThreshold = HIGH_DENSITY_THRESHOLD;
public float midDensityThreshold = MID_DENSITY_THRESHOLD;
public float lowDensityThreshold = LOW_DENSITY_THRESHOLD;

public IMyTextPanel Panel { get; set; }
public IMyTextPanel[][] Panels { get; set; }
public bool multiplePanels;

public int grAxX, grAxY, grStX, grEndX, grStY, grEndY, grStZ, grEndZ, grWhX, grWhY, grWhZ;

public int axWhX, axWhY, axWhZ;

public byte drawLeftMask, drawRightMask, drawTopMask, drawBottomMask;

public Base6Directions.Axis grAxXDir, grAxYDir, grAxZDir;
public bool grFlipX, grFlipY, grFlipZ;
public Vector3I grMin, grMax;
public int grOffsetX, grOffsetY;

public char[][] structBase;
public Vector4I[][] structDensity;
public int scWhX, scWhY, scOffX, scOffY, scSzX, scSzY, scArea;
public float boxAspect;

public HashSet&lt;Vector2I&gt; drawnPositions;
public Dictionary&lt;Vector4I, int&gt; priorityDrawn;

public char[][] renderData;

public bool isBlinkFrame;

public string prevDisplayParam;

public Dictionary&lt;string, string&gt; config;

public LayoutPanel(IMyGridTerminalSystem gridTerminalSystem, IMyGridProgramRuntimeInfo runtime, IMyTerminalBlock referenceBlock)
{
GridTerminalSystem = gridTerminalSystem;
Runtime = runtime;
ReferenceBlock = referenceBlock;
CubeGrid = referenceBlock.CubeGrid;

prevDisplayParam = "";

config = new Dictionary&lt;string, string&gt;();
}

public override string ToString()
{
return (Panel == null ? "" : Panel.CustomName);
}

/*----- Rendering Methods -----*/

public void Render()
{
if (multiplePanels)
{
int singleWidthX = renderData[0].Length / PanelHorizontalCount;
int singleWidthY = renderData.Length / PanelVerticalCount;

for (int y = 0; y &lt; PanelVerticalCount; y++)
{
for (int x = 0; x &lt; PanelHorizontalCount; x++)
{
int startY = y * singleWidthY;
int endY = startY + singleWidthY;
int startX = x * singleWidthX;

StringBuilder sb = new StringBuilder((singleWidthX * singleWidthY) + 1);

if (bOptimizedRender)
{
if (startY &lt; scOffY)
{
for (int i = startY; i &lt; scOffY; i++)
{
sb.Append('\n');
}

startY = scOffY;
}

if (endY &gt; renderData.Length - scOffY)
{
endY = renderData.Length - scOffY;
}

int drawWidthX;
if (startX + singleWidthX &gt; renderData[0].Length - scOffX)
{
drawWidthX = Math.Max(renderData[0].Length - scOffX - startX, 0);
}
else
{
drawWidthX = singleWidthX;
}

for (int i = startY; i &lt; endY; i++)
{
sb.Append(renderData[i], startX, drawWidthX).Append('\n');
}
}
else
{
for (int i = startY; i &lt; endY; i++)
{
sb.Append(renderData[i], startX, singleWidthX).Append('\n');
}
}

Panels[y][x].WritePublicText(sb);
}
}
}
else
{
StringBuilder sb = new StringBuilder((renderData[0].Length * renderData.Length) + 1);

if (bOptimizedRender)
{
for (int i = 0; i &lt; scOffY; i++)
{
sb.Append('\n');
}

for (int i = scOffY; i &lt; renderData.Length - scOffY; i++)
{
sb.Append(renderData[i], 0, renderData[0].Length - scOffX).Append('\n');
}
}
else
{
for (int i = 0; i &lt; renderData.Length; i++)
{
sb.Append(renderData[i]).Append('\n');
}
}

Panel.WritePublicText(sb);
}
}

/*----- Initialization Methods -----*/

public void InitDisplayPanel()
{
Panel.SetValue("FontSize", 0.1f * pixelSize);
Panel.SetValue("FontColor", new Color(TEXT_COLOR_R, TEXT_COLOR_G, TEXT_COLOR_B));
Panel.SetValue("Font", fontMonospace);

Panel.ShowTextureOnScreen();
Panel.ShowPublicTextOnScreen();

Vector3I left, down;
GetTileVectors(out left, out down);
if (left.Length() != down.Length())
{
scWhX = WIDE_LCD_MAX_RESOLUTION_X / pixelSize;
scWhY = WIDE_LCD_MAX_RESOLUTION_Y / pixelSize;
}
else
{
scWhX = TEXT_MAX_RESOLUTION_X / pixelSize;
scWhY = TEXT_MAX_RESOLUTION_Y / pixelSize;
}

multiplePanels = false;
}

public void InitDisplayPanels()
{
if (PanelHorizontalCount == 1 &amp;&amp; PanelVerticalCount == 1)
{
Panels = null;
InitDisplayPanel();

return;
}

Vector3I pnLeft, pnDown;
GetTileVectors(out pnLeft, out pnDown);

bool truncatePanels = false;
int maxArea = 0;
int mkX = 0;
int mkY = 0;

Panels = new IMyTextPanel[PanelVerticalCount][];
for (int y = 0; y &lt; PanelVerticalCount; y++)
{
Panels[y] = new IMyTextPanel[PanelHorizontalCount];
for (int x = 0; x &lt; PanelHorizontalCount; x++)
{
IMySlimBlock slimBlock = CubeGrid.GetCubeBlock(Panel.Position + (x * pnLeft) + (y * pnDown));

IMyTextPanel panel = (slimBlock == null ? null : slimBlock.FatBlock as IMyTextPanel);
if (panel == null)
{
if (x == 0)
{
PanelVerticalCount = y;
}
truncatePanels = true;
break;
}

int area = (x + 1) * (y + 1);
if (area &gt; maxArea)
{
maxArea = area;
mkX = x;
mkY = y;
}

Panels[y][x] = panel;

Panels[y][x].SetValue("FontSize", 0.1f * pixelSize);
Panels[y][x].SetValue("FontColor", new Color(TEXT_COLOR_R, TEXT_COLOR_G, TEXT_COLOR_B));
Panels[y][x].SetValue("Font", fontMonospace);

Panels[y][x].ShowTextureOnScreen();
Panels[y][x].ShowPublicTextOnScreen();
}
}

if (truncatePanels)
{
PanelHorizontalCount = mkX + 1;
PanelVerticalCount = mkY + 1;

if (PanelHorizontalCount == 1 &amp;&amp; PanelVerticalCount == 1)
{
Panels = null;
InitDisplayPanel();

return;
}

IMyTextPanel[][] remainingPanels = new IMyTextPanel[PanelVerticalCount][];
for (int y = 0; y &lt; PanelVerticalCount; y++)
{
remainingPanels[y] = new IMyTextPanel[PanelHorizontalCount];
for (int x = 0; x &lt; PanelHorizontalCount; x++)
{
remainingPanels[y][x] = Panels[y][x];
}
}
Panels = remainingPanels;
}

if (pnLeft.Length() != pnDown.Length())
{
scWhX = WIDE_LCD_MAX_RESOLUTION_X / pixelSize * PanelHorizontalCount;
scWhY = WIDE_LCD_MAX_RESOLUTION_Y / pixelSize * PanelVerticalCount;
}
else
{
scWhX = TEXT_MAX_RESOLUTION_X / pixelSize * PanelHorizontalCount;
scWhY = TEXT_MAX_RESOLUTION_Y / pixelSize * PanelVerticalCount;
}

multiplePanels = true;
}

public void GetTileVectors(out Vector3I pnLeft, out Vector3I pnDown)
{
pnLeft = -Base6Directions.GetIntVector(Panel.Orientation.Left);
pnDown = -Base6Directions.GetIntVector(Panel.Orientation.Up);

Vector3I pnSize = Panel.Max - Panel.Min + new Vector3I(1, 1, 1);
pnLeft = new Vector3I(pnLeft.X * pnSize.X, pnLeft.Y * pnSize.Y, pnLeft.Z * pnSize.Z);
pnDown = new Vector3I(pnDown.X * pnSize.X, pnDown.Y * pnSize.Y, pnDown.Z * pnSize.Z);
}

public void UpdatePixelSize()
{
if (Panel.Min != Panel.Max)
{
scWhX = WIDE_LCD_MAX_RESOLUTION_X / pixelSize * PanelHorizontalCount;
scWhY = WIDE_LCD_MAX_RESOLUTION_Y / pixelSize * PanelVerticalCount;
}
else
{
scWhX = TEXT_MAX_RESOLUTION_X / pixelSize * PanelHorizontalCount;
scWhY = TEXT_MAX_RESOLUTION_Y / pixelSize * PanelVerticalCount;
}

if (PanelHorizontalCount == 1 &amp;&amp; PanelVerticalCount == 1)
{
Panel.SetValue("FontSize", 0.1f * pixelSize);
}
else
{
for (int y = 0; y &lt; PanelVerticalCount; y++)
{
for (int x = 0; x &lt; PanelHorizontalCount; x++)
{
Panels[y][x].SetValue("FontSize", 0.1f * pixelSize);
}
}
}
}

public bool DisplayParametersChanged()
{
return !Panel.GetPublicTitle().Equals(prevDisplayParam);
}

public void InitDisplayParameters()
{
grAxX = -1;
grAxY = -3;
grStX = CubeGrid.Min.X;
grEndX = CubeGrid.Max.X;
grStY = CubeGrid.Min.Y;
grEndY = CubeGrid.Max.Y;
grStZ = CubeGrid.Min.Z;
grEndZ = CubeGrid.Max.Z;
grWhX = grEndX - grStX + 1;
grWhY = grEndY - grStY + 1;
grWhZ = grEndZ - grStZ + 1;

ProcessDisplayParameters();

if (grAxX == -1 || grAxY == -3)
{
InitDefaultAxisView();
}

if (prevDisplayParam.Length == 0 || prevDisplayParam.Trim().ToUpper().Equals("PUBLIC TITLE"))
{
WriteDisplayParameters();
}
}

public void InitScreenParameters()
{
GetAxisVariables(grAxX, out axWhX, out grAxXDir);
GetAxisVariables(grAxY, out axWhY, out grAxYDir);

grFlipX = (grAxX % 2 != 0);
grFlipY = (grAxY % 2 != 0);

int axisZ = (3 - (grAxX / 2) - (grAxY / 2)) * 2;
GetAxisVariables(axisZ, out axWhZ, out grAxZDir);

Base6Directions.Direction directionZ = Base6Directions.GetCross(GetAxisDirection(grAxXDir, grFlipX), GetAxisDirection(grAxYDir, grFlipY));
grFlipZ = (directionZ == Base6Directions.Direction.Right || directionZ == Base6Directions.Direction.Down || directionZ == Base6Directions.Direction.Backward);

if (scWhX - axWhX - 1 &lt; 0)
{
TruncateAxisX(axWhX - scWhX + 1);
}

if (scWhY - axWhY - 1 &lt; 0)
{
TruncateAxisY(axWhY - scWhY + 1);
}

scSzX = (scWhX - axWhX - 1) / axWhX;
scSzY = (scWhY - axWhY - 1) / axWhY;

int maxScreenBlockSize = Math.Min(scSzX, scSzY);
scSzX = maxScreenBlockSize;
scSzY = maxScreenBlockSize;

boxAspect = (scSzX == scSzY ? 1f : (float)(scSzY + 1) / (scSzX + 1));

scArea = scSzX * scSzY;

scOffX = (scWhX - (scSzX * axWhX) - axWhX - 1) / 2;
scOffY = (scWhY - (scSzY * axWhY) - axWhY - 1) / 2;

structDensity = new Vector4I[axWhY][];
for (int i = 0; i &lt; axWhY; i++)
{
structDensity[i] = new Vector4I[axWhX];
}

grMin = new Vector3I(grStX, grStY, grStZ);
grMax = new Vector3I(grEndX, grEndY, grEndZ);

grOffsetX = (grFlipX ? grMax.AxisValue(grAxXDir) : grMin.AxisValue(grAxXDir));
grOffsetY = (grFlipY ? grMax.AxisValue(grAxYDir) : grMin.AxisValue(grAxYDir));

drawLeftMask = ADJACENT_MASKS[grAxX];
drawRightMask = ADJACENT_MASKS[((grAxX / 2) * 2) + 1 - (grAxX % 2)];
drawTopMask = ADJACENT_MASKS[grAxY];
drawBottomMask = ADJACENT_MASKS[((grAxY / 2) * 2) + 1 - (grAxY % 2)];
}

public void InitDefaultAxisView()
{
IMyTerminalBlock cockpit = null;
IMyTerminalBlock mainCockpit = null;
IMyTerminalBlock remote = null;

List&lt;IMyTerminalBlock&gt; blks = new List&lt;IMyTerminalBlock&gt;();
GridTerminalSystem.GetBlocksOfType&lt;IMyCockpit&gt;(blks);
for (int i = 0; i &lt; blks.Count; i++)
{
if (IsValidCockpit(blks[i]))
{
cockpit = blks[i];
if (cockpit.GetValueBool("MainCockpit"))
{
mainCockpit = cockpit;
break;
}
}
}
if (mainCockpit == null)
{
blks = new List&lt;IMyTerminalBlock&gt;();
GridTerminalSystem.GetBlocksOfType&lt;IMyRemoteControl&gt;(blks);
for (int i = 0; i &lt; blks.Count; i++)
{
if (blks[i].CubeGrid == CubeGrid)
{
remote = blks[i];
if (remote.GetValueBool("MainCockpit"))
{
mainCockpit = remote;
break;
}
}
}
}
if (mainCockpit == null)
{
mainCockpit = (cockpit == null ? remote : cockpit);
}

string panelName = Panel.CustomName.ToUpper();
MatrixD matrix = (mainCockpit == null ? CubeGrid.WorldMatrix : mainCockpit.WorldMatrix);
Vector3D vecX, vecY;
Base6Directions.Direction dirX, dirY;
if (panelName.Contains("SIDE"))
{
vecX = matrix.Backward;
vecY = matrix.Down;
}
else if (panelName.Contains("FRONT"))
{
vecX = matrix.Left;
vecY = matrix.Down;
}
else
{
vecX = matrix.Backward;
vecY = matrix.Left;
}
dirX = CubeGrid.WorldMatrix.GetClosestDirection(vecX);
dirY = CubeGrid.WorldMatrix.GetClosestDirection(vecY);

grAxX = GetGridAxis(dirX);
grAxY = GetGridAxis(dirY);
}

public bool IsValidCockpit(IMyTerminalBlock blk)
{
if (blk.CubeGrid == CubeGrid)
{
string subTypeId = blk.BlockDefinition.SubtypeId;
return (subTypeId == null || !subTypeId.Contains("Passenger"));
}
return false;
}

public int GetGridAxis(Base6Directions.Direction dir)
{
switch (dir)
{
case Base6Directions.Direction.Forward:
return 5;
case Base6Directions.Direction.Backward:
return 4;
case Base6Directions.Direction.Left:
return 1;
case Base6Directions.Direction.Right:
return 0;
case Base6Directions.Direction.Up:
return 3;
default:
return 2;
}
}

public void GetAxisVariables(int axis, out int width, out Base6Directions.Axis dir)
{
switch (axis)
{
case 0:
case 1:
width = grWhX;
dir = Base6Directions.Axis.LeftRight;
return;
case 2:
case 3:
width = grWhY;
dir = Base6Directions.Axis.UpDown;
return;
case 4:
case 5:
width = grWhZ;
dir = Base6Directions.Axis.ForwardBackward;
return;
}

width = grWhX;
dir = Base6Directions.Axis.LeftRight;
}

Base6Directions.Direction GetAxisDirection(Base6Directions.Axis axis, bool isReverse)
{
switch (axis)
{
case Base6Directions.Axis.LeftRight:
return (isReverse ? Base6Directions.Direction.Left : Base6Directions.Direction.Right);
case Base6Directions.Axis.UpDown:
return (isReverse ? Base6Directions.Direction.Up : Base6Directions.Direction.Down);
case Base6Directions.Axis.ForwardBackward:
return (isReverse ? Base6Directions.Direction.Forward : Base6Directions.Direction.Backward);
default:
return (isReverse ? Base6Directions.Direction.Left : Base6Directions.Direction.Right);
}
}

public void TruncateAxisX(int amount)
{
axWhX -= amount;
TruncateAxis(grAxX, axWhX, amount);
}

public void TruncateAxisY(int amount)
{
axWhY -= amount;
TruncateAxis(grAxY, axWhY, amount);
}

public void TruncateAxis(int axis, int width, int amount)
{
bool reverse = (axis % 2 != 0);
switch (axis)
{
case 0:
case 1:
grWhX = width;
if (reverse)
{
grStX += amount;
}
else
{
grEndX -= amount;
}
break;
case 2:
case 3:
grWhY = width;
if (reverse)
{
grStY += amount;
}
else
{
grEndY -= amount;
}
break;
case 4:
case 5:
grWhZ = width;
if (reverse)
{
grStZ += amount;
}
else
{
grEndZ -= amount;
}
break;
}
}

/*----- Reset Methods -----*/

public void ResetGridWidth()
{
grWhX = grEndX - grStX + 1;
grWhY = grEndY - grStY + 1;
grWhZ = grEndZ - grStZ + 1;
}

public void ResetStructureBase()
{
structBase = new char[scWhY][];
for (int i = 0; i &lt; scWhY; i++)
{
structBase[i] = new char[scWhX];
structBase[i] = new string(chrBackground, scWhX).ToCharArray();
}
}

public void ResetRenderData()
{
renderData = new char[structBase.Length][];
for (int i = 0; i &lt; scWhY; i++)
{
renderData[i] = new char[structBase[i].Length];
Array.Copy(structBase[i], renderData[i], structBase[i].Length);
}
}

/*----- Parameter Processing Methods -----*/

public bool ProcessDisplayParameters(string paramLine = null)
{
paramLine = (paramLine == null ? Panel.GetPublicTitle().Trim().ToUpper() : paramLine);
prevDisplayParam = paramLine;

string[] keyValues = paramLine.Split(',');

int tmGrAxX = grAxX;
int tmGrAxY = grAxY;
int tmGrStX = grStX;
int tmGrEndX = grEndX;
int tmGrStY = grStY;
int tmGrEndY = grEndY;
int tmGrStZ = grStZ;
int tmGrEndZ = grEndZ;

bool pixelSizeChanged = false;

for (int i = 0; i &lt; keyValues.Length; i++)
{
string[] tk = keyValues[i].Trim().Split(':');
if (tk.Length &gt; 0)
{
int val;
string cmd = tk[0].Trim();
bool two = (tk.Length &gt;= 2);
if (cmd.Equals("A_X") &amp;&amp; two)
{
val = ParseAxisToken(tk[1]);
if (val &gt; -1)
{
tmGrAxX = Math.Min(5, Math.Max(0, val));
}
}
else if (cmd.Equals("A_Y") &amp;&amp; two)
{
val = ParseAxisToken(tk[1]);
if (val &gt; -1)
{
tmGrAxY = Math.Min(5, Math.Max(0, val));
}
}
else if (cmd.Equals("X") &amp;&amp; two)
{
if (Int32.TryParse(tk[1], out val))
{
tmGrStX = tmGrEndX = val;
}
}
else if (cmd.Equals("X1") &amp;&amp; two)
{
if (Int32.TryParse(tk[1], out val))
{
tmGrStX = val;
}
}
else if (cmd.Equals("X2") &amp;&amp; two)
{
if (Int32.TryParse(tk[1], out val))
{
tmGrEndX = val;
}
}
else if (cmd.Equals("Y") &amp;&amp; two)
{
if (Int32.TryParse(tk[1], out val))
{
tmGrStY = tmGrEndY = val;
}
}
else if (cmd.Equals("Y1") &amp;&amp; two)
{
if (Int32.TryParse(tk[1], out val))
{
tmGrStY = val;
}
}
else if (cmd.Equals("Y2") &amp;&amp; two)
{
if (Int32.TryParse(tk[1], out val))
{
tmGrEndY = val;
}
}
else if (cmd.Equals("Z") &amp;&amp; two)
{
if (Int32.TryParse(tk[1], out val))
{
tmGrStZ = tmGrEndZ = val;
}
}
else if (cmd.Equals("Z1") &amp;&amp; two)
{
if (Int32.TryParse(tk[1], out val))
{
tmGrStZ = val;
}
}
else if (cmd.Equals("Z2") &amp;&amp; two)
{
if (Int32.TryParse(tk[1], out val))
{
tmGrEndZ = val;
}
}
else if (FLAG_CMD.ContainsKey(cmd))
{
int[] opt = FLAG_CMD[cmd];
bool yes = (opt[1] == 0);
switch (opt[0])
{
case 0:
bPaintDensity = yes;
break;
case 1:
bUseRelativeDensity = yes;
break;
case 2:
bIncludeTerminalDensity = yes;
break;
case 3:
bSmoothEdges = yes;
break;
case 4:
bPaintLocationMarker = yes;
break;
case 5:
bPaintTerminalBlocks = yes;
break;
case 6:
bPaintAlertBlocks = yes;
break;
case 7:
bBlinkForAlert = yes;
break;
case 8:
bPaintCrossForAlert = yes;
break;
}
}
else if (cmd.Equals("AL_MASK"))
{
byte bvalue;
if (byte.TryParse(tk[1], out bvalue))
{
alertMask = bvalue;
}
}
else if (cmd.Equals("THR_HDENSE"))
{
float fvalue;
if (float.TryParse(tk[1], out fvalue))
{
highDensityThreshold = Math.Min(1f, Math.Max(0f, (float)Math.Round(fvalue, 2)));
}
}
else if (cmd.Equals("THR_MDENSE"))
{
float fvalue;
if (float.TryParse(tk[1], out fvalue))
{
midDensityThreshold = Math.Min(1f, Math.Max(0f, (float)Math.Round(fvalue, 2)));
}
}
else if (cmd.Equals("THR_LDENSE"))
{
float fvalue;
if (float.TryParse(tk[1], out fvalue))
{
lowDensityThreshold = Math.Min(1f, Math.Max(0f, (float)Math.Round(fvalue, 2)));
}
}
else if (cmd.Equals("PIXEL"))
{
int prevPixelSize = pixelSize;
if (Int32.TryParse(tk[1], out val))
{
pixelSize = Math.Min(10, Math.Max(1, val));
}
pixelSizeChanged = (prevPixelSize != pixelSize);
}
}
}

if ((tmGrAxX / 2) == (tmGrAxY / 2))
{
return false;
}

if (tmGrEndX &lt; tmGrStX)
{
int tmp = tmGrStX;
tmGrStX = tmGrEndX;
tmGrEndX = tmp;
}

if (tmGrEndY &lt; tmGrStY)
{
int tmp = tmGrStY;
tmGrStY = tmGrEndY;
tmGrEndY = tmp;
}

if (tmGrEndZ &lt; tmGrStZ)
{
int tmp = tmGrStZ;
tmGrStZ = tmGrEndZ;
tmGrEndZ = tmp;
}

tmGrStX = Math.Min(Math.Max(tmGrStX, CubeGrid.Min.X), CubeGrid.Max.X);
tmGrEndX = Math.Min(Math.Max(tmGrEndX, CubeGrid.Min.X), CubeGrid.Max.X);

tmGrStY = Math.Min(Math.Max(tmGrStY, CubeGrid.Min.Y), CubeGrid.Max.Y);
tmGrEndY = Math.Min(Math.Max(tmGrEndY, CubeGrid.Min.Y), CubeGrid.Max.Y);

tmGrStZ = Math.Min(Math.Max(tmGrStZ, CubeGrid.Min.Z), CubeGrid.Max.Z);
tmGrEndZ = Math.Min(Math.Max(tmGrEndZ, CubeGrid.Min.Z), CubeGrid.Max.Z);

if (pixelSizeChanged)
{
UpdatePixelSize();
}

if (tmGrAxX != grAxX || tmGrAxY != grAxY || tmGrStX != grStX || tmGrEndX != grEndX || tmGrStY != grStY || tmGrEndY != grEndY || tmGrStZ != grStZ || tmGrEndZ != grEndZ || pixelSizeChanged)
{
grAxX = tmGrAxX;
grAxY = tmGrAxY;
grStX = tmGrStX;
grEndX = tmGrEndX;
grStY = tmGrStY;
grEndY = tmGrEndY;
grStZ = tmGrStZ;
grEndZ = tmGrEndZ;
grWhX = grEndX - grStX + 1;
grWhY = grEndY - grStY + 1;
grWhZ = grEndZ - grStZ + 1;

return true;
}
else
{
return false;
}
}

public int ParseAxisToken(string token)
{
switch (token)
{
case "X":
case "+X":
return 0;
case "-X":
return 1;
case "Y":
case "+Y":
return 2;
case "-Y":
return 3;
case "Z":
case "+Z":
return 4;
case "-Z":
return 5;
default:
return -1;
}
}

public string RetrieveAxisParameter(int gridAxis)
{
switch (gridAxis)
{
case 0:
return "X";
case 1:
return "-X";
case 2:
return "Y";
case 3:
return "-Y";
case 4:
return "Z";
case 5:
return "-Z";
default:
return "";
}
}

public void WriteDisplayParameters()
{
StringBuilder sb = new StringBuilder();
sb.Append("A_X:").Append(RetrieveAxisParameter(grAxX)).Append(',');
sb.Append("A_Y:").Append(RetrieveAxisParameter(grAxY)).Append(',');
sb.Append("X1:").Append(grStX).Append(',');
sb.Append("X2:").Append(grEndX).Append(',');
sb.Append("Y1:").Append(grStY).Append(',');
sb.Append("Y2:").Append(grEndY).Append(',');
sb.Append("Z1:").Append(grStZ).Append(',');
sb.Append("Z2:").Append(grEndZ).Append(',');
sb.Append(bSmoothEdges ? "SMOOTH" : "NO_SMOOTH").Append(',');
sb.Append(bUseRelativeDensity ? "RELDENSE" : "NO_RELDENSE").Append(',');
sb.Append(bIncludeTerminalDensity ? "TERMDENSE" : "NO_TERMDENSE").Append(',');
sb.Append(bPaintDensity ? "DENSE" : "NO_DENSE").Append(',');
sb.Append(bPaintTerminalBlocks ? "TERM" : "NO_TERM").Append(',');
sb.Append(bBlinkForAlert ? "BLINK" : "NO_BLINK").Append(',');
sb.Append(bPaintAlertBlocks ? "ALERT" : "NO_ALERT").Append(',');
sb.Append(bPaintCrossForAlert ? "CROSS" : "NO_CROSS").Append(',');
sb.Append(bPaintLocationMarker ? "MARKER" : "NO_MARKER").Append(',');
sb.Append("AL_MASK:").Append(alertMask).Append(',');
sb.Append("THR_HDENSE:").Append(Math.Round(highDensityThreshold, 2)).Append(',');
sb.Append("THR_MDENSE:").Append(Math.Round(midDensityThreshold, 2)).Append(',');
sb.Append("THR_LDENSE:").Append(Math.Round(lowDensityThreshold, 2)).Append(',');
sb.Append("PIXEL:").Append(pixelSize);

Panel.WritePublicTitle(sb.ToString());
prevDisplayParam = Panel.GetPublicTitle();
}

/*----- Misc Methods -----*/

public string GetParameterDescription(string key)
{
switch (key)
{
case "DENSE":
return (bPaintDensity ? "On" : "Off");
case "RELDENSE":
return (bUseRelativeDensity ? "On" : "Off");
case "SMOOTH":
return (bSmoothEdges ? "On" : "Off");
case "TERM":
return (bPaintTerminalBlocks ? "On" : "Off");
case "ALERT":
return (bPaintAlertBlocks ? "On" : "Off");
case "AL_VENT":
return ((alertMask &amp; AL_VENT) &gt; 0 ? "On" : "Off");
case "AL_SENSOR":
return ((alertMask &amp; AL_SENSOR) &gt; 0 ? "On" : "Off");
case "AL_TURRET":
return ((alertMask &amp; AL_TURRET) &gt; 0 ? "On" : "Off");
case "AL_DOOR":
return ((alertMask &amp; AL_DOOR) &gt; 0 ? "On" : "Off");
case "AL_HACKED":
return ((alertMask &amp; AL_HACKED) &gt; 0 ? "On" : "Off");
case "BLINK":
return (bBlinkForAlert ? "On" : "Off");
case "BRIGHTNESS":
return Math.Round(Panel.GetValueColor("FontColor").R / 2.55f, 0) + "%";
case "IMAGE":
return (!Panel.ShowText ? "On" : "Off");
case "CROSS":
return (bPaintCrossForAlert ? "On" : "Off");
case "MARKER":
return (bPaintLocationMarker ? "On" : "Off");
default:
return "";
}
}

public void WriteAndReset()
{
WriteDisplayParameters();
ResetStructureBase();
}

public void RefreshReferenceGrid()
{
CubeGrid = ReferenceBlock.CubeGrid;
}

public void LightenDisplay()
{
Color color = Panel.GetValueColor("FontColor");
int value = Math.Min(color.R + 10, 255);

if (multiplePanels)
{
for (int y = 0; y &lt; PanelVerticalCount; y++)
{
for (int x = 0; x &lt; PanelHorizontalCount; x++)
{
Panels[y][x].SetValue("FontColor", new Color(value, value, value));
}
}
}
else
{
Panel.SetValue("FontColor", new Color(value, value, value));
}
}

public void DarkenDisplay()
{
Color color = Panel.GetValueColor("FontColor");
int value = Math.Max(color.R - 10, 0);

if (multiplePanels)
{
for (int y = 0; y &lt; PanelVerticalCount; y++)
{
for (int x = 0; x &lt; PanelHorizontalCount; x++)
{
Panels[y][x].SetValue("FontColor", new Color(value, value, value));
}
}
}
else
{
Panel.SetValue("FontColor", new Color(value, value, value));
}
}

public void ToggleImageDisplay()
{
if (multiplePanels)
{
for (int y = 0; y &lt; PanelVerticalCount; y++)
{
for (int x = 0; x &lt; PanelHorizontalCount; x++)
{
if (Panels[y][x].ShowText)
{
Panels[y][x].ShowTextureOnScreen();
}
else
{
Panels[y][x].ShowPublicTextOnScreen();
}
}
}
}
else
{
if (Panel.ShowText)
{
Panel.ShowTextureOnScreen();
}
else
{
Panel.ShowPublicTextOnScreen();
}
}
}

public void ShowLargeNumber(int number)
{
if (multiplePanels)
{
for (int y = 0; y &lt; PanelVerticalCount; y++)
{
for (int x = 0; x &lt; PanelHorizontalCount; x++)
{
Panels[y][x].SetValue("FontSize", 10f);
Panels[y][x].WritePublicText(number.ToString());
}
}
}
else
{
Panel.SetValue("FontSize", 10f);
Panel.WritePublicText(number.ToString());
}
}

public void HideLargeNumber()
{
if (multiplePanels)
{
for (int y = 0; y &lt; PanelVerticalCount; y++)
{
for (int x = 0; x &lt; PanelHorizontalCount; x++)
{
Panels[y][x].SetValue("FontSize", 0.1f * pixelSize);
Panels[y][x].WritePublicText("");
}
}
}
else
{
Panel.SetValue("FontSize", 0.1f * pixelSize);
Panel.WritePublicText("");
}
}

/*----- Computation Methods -----*/

public void ComputeStructureDensity(KeyValuePair&lt;Vector3I, byte&gt; blk, bool isArmorBlock)
{
Vector3I pos = blk.Key;

if (Vector3I.BoxContains(grMin, grMax, pos) &amp;&amp; (bIncludeTerminalDensity || isArmorBlock))
{
int scPX, scPY;
GetScreenPositions(ref pos, out scPX, out scPY);

int depthPosZ = pos.AxisValue(grAxZDir);
Vector4I density = structDensity[scPY][scPX];
if (density.Z == 0)
{
structDensity[scPY][scPX] = new Vector4I(depthPosZ, depthPosZ, 1, 0);
}
else
{
structDensity[scPY][scPX] = new Vector4I(Math.Min(density.X, depthPosZ), Math.Max(density.Y, depthPosZ), density.Z + 1, density.W);
}

if (bSmoothEdges)
{
density = structDensity[scPY][scPX];
structDensity[scPY][scPX] = new Vector4I(density.X, density.Y, density.Z, (byte)density.W | blk.Value);
}
}
}

/*----- Paint Methods -----*/

public void PaintStructureBase(KeyValuePair&lt;Vector3I, byte&gt; blk)
{
Vector3I pos = blk.Key;

if (Vector3I.BoxContains(grMin, grMax, pos))
{
int scPX, scPY;
GetScreenPositions(ref pos, out scPX, out scPY);

bool dwL = ((blk.Value &amp; drawLeftMask) == 0);
bool dwR = ((blk.Value &amp; drawRightMask) == 0);
bool dwT = ((blk.Value &amp; drawTopMask) == 0);
bool dwB = ((blk.Value &amp; drawBottomMask) == 0);

if (bSmoothEdges)
{
if (dwL &amp;&amp; dwT &amp;&amp; !dwR &amp;&amp; !dwB)
{
dwL = dwT = false;
PaintBackSlash(structBase, scPX, scPY, chrStructure);
}
else if (!dwL &amp;&amp; dwT &amp;&amp; dwR &amp;&amp; !dwB)
{
dwT = dwR = false;
PaintForwardSlash(structBase, scPX, scPY, chrStructure);
}
else if (!dwL &amp;&amp; !dwT &amp;&amp; dwR &amp;&amp; dwB)
{
dwR = dwB = false;
PaintBackSlash(structBase, scPX, scPY, chrStructure);
}
else if (dwL &amp;&amp; !dwT &amp;&amp; !dwR &amp;&amp; dwB)
{
dwB = dwL = false;
PaintForwardSlash(structBase, scPX, scPY, chrStructure);
}
}

int mkX = 0;
int mkY = 0;
int mkX1 = 0;
int mkY1 = 0;

if (dwL || dwR || dwT)
{
mkY = scOffY + (scPY * (scSzY + 1));
}
if (dwB)
{
mkY1 = scOffY + ((scPY + 1) * (scSzY + 1));
}
if (dwL || dwT || dwB)
{
mkX = scOffX + (scPX * (scSzX + 1));
}
if (dwR)
{
mkX1 = scOffX + ((scPX + 1) * (scSzX + 1));
}

if (dwL)
{
for (int y = 0; y &lt;= scSzY + 1; y++)
{
structBase[mkY + y][mkX] = chrStructure;
}
}
if (dwR)
{
for (int y = 0; y &lt;= scSzY + 1; y++)
{
structBase[mkY + y][mkX1] = chrStructure;
}
}
if (dwT)
{
for (int x = 0; x &lt;= scSzX + 1; x++)
{
structBase[mkY][mkX + x] = chrStructure;
}
}
if (dwB)
{
for (int x = 0; x &lt;= scSzX + 1; x++)
{
structBase[mkY1][mkX + x] = chrStructure;
}
}
}
}

public int PaintStructureDensity(int index, int instLimit)
{
int totalIndex = axWhY * axWhX;

while (index &lt; totalIndex &amp;&amp; Runtime.CurrentInstructionCount &lt; instLimit)
{
int scPX = index % axWhX;
int scPY = index / axWhX;

Vector4I density = structDensity[scPY][scPX];
if (density.Z &gt; 0)
{
char chrPaint;
int densityMax = (bUseRelativeDensity ? density.Y - density.X + 1 : axWhZ);
if (density.Z &gt;= Math.Ceiling(densityMax * highDensityThreshold))
{
chrPaint = chrStructure;
}
else if (density.Z &gt;= Math.Ceiling(densityMax * midDensityThreshold))
{
chrPaint = chrDensity;
}
else if (density.Z &gt;= Math.Ceiling(densityMax * lowDensityThreshold))
{
chrPaint = chrLowDensity;
}
else
{
index++;
continue;
}

if (bSmoothEdges)
{
bool dwL = ((density.W &amp; drawLeftMask) == 0);
bool dwR = ((density.W &amp; drawRightMask) == 0);
bool dwT = ((density.W &amp; drawTopMask) == 0);
bool dwB = ((density.W &amp; drawBottomMask) == 0);

if (dwL &amp;&amp; dwT &amp;&amp; !dwR &amp;&amp; !dwB)
{
PaintSolidBackBottomTriangle(structBase, scPX, scPY, chrPaint);
}
else if (!dwL &amp;&amp; dwT &amp;&amp; dwR &amp;&amp; !dwB)
{
PaintSolidForwardBottomTriangle(structBase, scPX, scPY, chrPaint);
}
else if (!dwL &amp;&amp; !dwT &amp;&amp; dwR &amp;&amp; dwB)
{
PaintSolidBackTopTriangle(structBase, scPX, scPY, chrPaint);
}
else if (dwL &amp;&amp; !dwT &amp;&amp; !dwR &amp;&amp; dwB)
{
PaintSolidForwardTopTriangle(structBase, scPX, scPY, chrPaint);
}
else
{
PaintSolidBox(structBase, scPX, scPY, chrPaint);
}
}
else
{
PaintSolidBox(structBase, scPX, scPY, chrPaint);
}
}

index++;
}

return index;
}

public void PaintLocationMarker(char chrPaintEven, char chrPaintOdd)
{
int scPX = (grFlipX ? grOffsetX - Panel.Position.AxisValue(grAxXDir) : Panel.Position.AxisValue(grAxXDir) - grOffsetX);
int scPY = (grFlipY ? grOffsetY - Panel.Position.AxisValue(grAxYDir) : Panel.Position.AxisValue(grAxYDir) - grOffsetY);

if (scPX &gt;= 0 &amp;&amp; scPX &lt; axWhX &amp;&amp; scPY &gt;= 0 &amp;&amp; scPY &lt; axWhY)
{
PaintLocationMarker(structBase, scPX, scPY, chrPaintEven, chrPaintOdd);
}
}

public void PaintMissingStructure(KeyValuePair&lt;Vector3I, byte&gt; blk)
{
Vector3I pos = blk.Key;

if (Vector3I.BoxContains(grMin, grMax, pos))
{
int scPX, scPY;
GetScreenPositions(ref pos, out scPX, out scPY);

if (bSmoothEdges)
{
bool dwL = ((blk.Value &amp; drawLeftMask) == 0);
bool dwR = ((blk.Value &amp; drawRightMask) == 0);
bool dwT = ((blk.Value &amp; drawTopMask) == 0);
bool dwB = ((blk.Value &amp; drawBottomMask) == 0);

int mkY = scOffY + (scPY * (scSzY + 1));
int mkY1 = scOffY + ((scPY + 1) * (scSzY + 1));
int mkX = scOffX + (scPX * (scSzX + 1));
int mkX1 = scOffX + ((scPX + 1) * (scSzX + 1));

if (dwL &amp;&amp; dwT &amp;&amp; !dwR &amp;&amp; !dwB)
{
PaintBackSlash(renderData, scPX, scPY, chrMissingBlock);
for (int y = 0; y &lt;= scSzY + 1; y++)
{
renderData[mkY + y][mkX1] = chrMissingBlock;
}
for (int x = 0; x &lt;= scSzX + 1; x++)
{
renderData[mkY1][mkX + x] = chrMissingBlock;
}
}
else if (!dwL &amp;&amp; dwT &amp;&amp; dwR &amp;&amp; !dwB)
{
PaintForwardSlash(renderData, scPX, scPY, chrMissingBlock);
for (int x = 0; x &lt;= scSzX + 1; x++)
{
renderData[mkY1][mkX + x] = chrMissingBlock;
}
for (int y = 0; y &lt;= scSzY + 1; y++)
{
renderData[mkY + y][mkX] = chrMissingBlock;
}
}
else if (!dwL &amp;&amp; !dwT &amp;&amp; dwR &amp;&amp; dwB)
{
PaintBackSlash(renderData, scPX, scPY, chrMissingBlock);
for (int y = 0; y &lt;= scSzY + 1; y++)
{
renderData[mkY + y][mkX] = chrMissingBlock;
}
for (int x = 0; x &lt;= scSzX + 1; x++)
{
renderData[mkY][mkX + x] = chrMissingBlock;
}
}
else if (dwL &amp;&amp; !dwT &amp;&amp; !dwR &amp;&amp; dwB)
{
PaintForwardSlash(renderData, scPX, scPY, chrMissingBlock);
for (int x = 0; x &lt;= scSzX + 1; x++)
{
renderData[mkY][mkX + x] = chrMissingBlock;
}
for (int y = 0; y &lt;= scSzY + 1; y++)
{
renderData[mkY + y][mkX1] = chrMissingBlock;
}
}
else
{
Vector2I screenPosition = new Vector2I(scPX, scPY);
if (!drawnPositions.Contains(screenPosition))
{
PaintHollowBox(renderData, scPX, scPY, chrMissingBlock);
drawnPositions.Add(screenPosition);
}
}
}
else
{
Vector2I screenPosition = new Vector2I(scPX, scPY);
if (!drawnPositions.Contains(screenPosition))
{
PaintHollowBox(renderData, scPX, scPY, chrMissingBlock);
drawnPositions.Add(screenPosition);
}
}
}
}

public void PaintTerminalBlocks(IMyTerminalBlock blk, int drawLevel, char chrPaint, bool cross)
{
Vector3I pos = blk.Position;

if (Vector3I.BoxContains(grMin, grMax, pos))
{
Vector3I min = blk.Min;
Vector3I max = blk.Max;

if (min == max)
{
int scPX, scPY;
GetScreenPositions(ref pos, out scPX, out scPY);

Vector4I boundary = new Vector4I(scPX, scPY, scPX, scPY);

int takenPriority = priorityDrawn.GetValueOrDefault&lt;Vector4I, int&gt;(boundary, 0);

if (drawLevel &gt; takenPriority)
{
if (cross)
{
PaintCrossBox(renderData, scPX, scPY, scPX, scPY, chrPaint);
}
else
{
PaintHollowBox(renderData, scPX, scPY, chrPaint);
}
priorityDrawn[boundary] = drawLevel;
}
}
else
{
int scPX1, scPY1, scPX2, scPY2;
GetScreenPositions(ref min, ref max, out scPX1, out scPY1, out scPX2, out scPY2);

Vector4I boundary = new Vector4I(scPX1, scPY1, scPX2, scPY2);

int takenPriority = priorityDrawn.GetValueOrDefault&lt;Vector4I, int&gt;(boundary, 0);

if (drawLevel &gt; takenPriority)
{
if (cross)
{
PaintCrossBox(renderData, scPX1, scPY1, scPX2, scPY2, chrPaint);
}
else
{
PaintHollowBox(renderData, scPX1, scPY1, scPX2, scPY2, chrPaint);
}
priorityDrawn[boundary] = drawLevel;
}
}
}
}

public void PaintWatchedBlocks(IMyTerminalBlock blk, Vector3I? detectedPosition, char chrPaint)
{
Vector3I pos = blk.Position;

if (Vector3I.BoxContains(grMin, grMax, pos))
{
if (detectedPosition != null)
{
pos = detectedPosition.Value;

int scPX, scPY;
GetScreenPositions(ref pos, out scPX, out scPY);

if (scPX &gt;= 0 &amp;&amp; scPX &lt; axWhX &amp;&amp; scPY &gt;= 0 &amp;&amp; scPY &lt; axWhY)
{
if (bPaintCrossForAlert)
{
PaintCrossBox(renderData, scPX, scPY, scPX, scPY, chrPaint);
}
else
{
PaintSolidBox(renderData, scPX, scPY, chrPaint);
}
}
}
else
{
Vector3I min = blk.Min;
Vector3I max = blk.Max;

if (min == max)
{
int scPX, scPY;
GetScreenPositions(ref pos, out scPX, out scPY);

if (bPaintCrossForAlert)
{
PaintCrossBox(renderData, scPX, scPY, scPX, scPY, chrPaint);
}
else
{
PaintSolidBox(renderData, scPX, scPY, chrPaint);
}
}
else
{
int scPX1, scPY1, scPX2, scPY2;
GetScreenPositions(ref min, ref max, out scPX1, out scPY1, out scPX2, out scPY2);

if (bPaintCrossForAlert)
{
PaintCrossBox(renderData, scPX1, scPY1, scPX2, scPY2, chrPaint);
}
else
{
PaintSolidBox(renderData, scPX1, scPY1, scPX2, scPY2, chrPaint);
}
}
}
}
}

public void GetScreenPositions(ref Vector3I position, out int scPX, out int scPY)
{
scPX = (grFlipX ? grOffsetX - position.AxisValue(grAxXDir) : position.AxisValue(grAxXDir) - grOffsetX);
scPY = (grFlipY ? grOffsetY - position.AxisValue(grAxYDir) : position.AxisValue(grAxYDir) - grOffsetY);
}

public void GetScreenPositions(ref Vector3I min, ref Vector3I max, out int scPX1, out int scPY1, out int scPX2, out int scPY2)
{
scPX1 = (grFlipX ? grOffsetX - min.AxisValue(grAxXDir) : min.AxisValue(grAxXDir) - grOffsetX);
scPY1 = (grFlipY ? grOffsetY - min.AxisValue(grAxYDir) : min.AxisValue(grAxYDir) - grOffsetY);
scPX2 = (grFlipX ? grOffsetX - max.AxisValue(grAxXDir) : max.AxisValue(grAxXDir) - grOffsetX);
scPY2 = (grFlipY ? grOffsetY - max.AxisValue(grAxYDir) : max.AxisValue(grAxYDir) - grOffsetY);

if (scPX1 &gt; scPX2)
{
int tmPX1 = scPX1;
scPX1 = scPX2;
scPX2 = tmPX1;
}

if (scPY1 &gt; scPY2)
{
int tmPY1 = scPY1;
scPY1 = scPY2;
scPY2 = tmPY1;
}

scPX1 = Math.Max(scPX1, 0);
scPY1 = Math.Max(scPY1, 0);
scPX2 = Math.Min(scPX2, axWhX - 1);
scPY2 = Math.Min(scPY2, axWhY - 1);
}

/*----- Shape Drawing Methods -----*/

public void PaintForwardSlash(char[][] map, int pX, int pY, char code)
{
int mkX = scOffX + (pX * (scSzX + 1));
int mkY = scOffY + (pY * (scSzY + 1));

for (int x = 0; x &lt;= scSzX + 1; x++)
{
int y = (scSzX == scSzY ? x : (int)Math.Round(x * boxAspect));
map[mkY + y][mkX + x] = code;
}
}

public void PaintBackSlash(char[][] map, int pX, int pY, char code)
{
int mkX = scOffX + (pX * (scSzX + 1));
int mkY = scOffY + (pY * (scSzY + 1));

for (int x = 0; x &lt;= scSzX + 1; x++)
{
int y = scSzY + 1 - (scSzX == scSzY ? x : (int)Math.Round(x * boxAspect));
map[mkY + y][mkX + x] = code;
}
}

public void PaintSolidForwardTopTriangle(char[][] map, int pX, int pY, char code)
{
int mkX = scOffX + (pX * (scSzX + 1));
int mkY = scOffY + (pY * (scSzY + 1));

for (int x = 0; x &lt;= scSzX + 1; x++)
{
int k = (scSzX == scSzY ? x : (int)Math.Round(x * boxAspect));
for (int y = 0; y &lt;= k; y++)
{
map[mkY + y][mkX + x] = code;
}
}
}

public void PaintSolidForwardBottomTriangle(char[][] map, int pX, int pY, char code)
{
int mkX = scOffX + (pX * (scSzX + 1));
int mkY = scOffY + (pY * (scSzY + 1));

for (int x = 0; x &lt;= scSzX + 1; x++)
{
int k = (scSzX == scSzY ? x : (int)Math.Round(x * boxAspect));
for (int y = k; y &lt;= scSzY + 1; y++)
{
map[mkY + y][mkX + x] = code;
}
}
}

public void PaintSolidBackTopTriangle(char[][] map, int pX, int pY, char code)
{
int mkX = scOffX + (pX * (scSzX + 1));
int mkY = scOffY + (pY * (scSzY + 1));

for (int x = 0; x &lt;= scSzX + 1; x++)
{
int k = scSzY + 1 - (scSzX == scSzY ? x : (int)Math.Round(x * boxAspect));
for (int y = 0; y &lt;= k; y++)
{
map[mkY + y][mkX + x] = code;
}
}
}

public void PaintSolidBackBottomTriangle(char[][] map, int pX, int pY, char code)
{
int mkX = scOffX + (pX * (scSzX + 1));
int mkY = scOffY + (pY * (scSzY + 1));

for (int x = 0; x &lt;= scSzX + 1; x++)
{
int k = scSzY + 1 - (scSzX == scSzY ? x : (int)Math.Round(x * boxAspect));
for (int y = k; y &lt;= scSzY + 1; y++)
{
map[mkY + y][mkX + x] = code;
}
}
}

public void PaintSolidBox(char[][] map, int pX, int pY, char code)
{
int mkX = scOffX + (pX * (scSzX + 1));
int mkY = scOffY + (pY * (scSzY + 1));

for (int x = 0; x &lt;= scSzX + 1; x++)
{
for (int y = 0; y &lt;= scSzY + 1; y++)
{
map[mkY + y][mkX + x] = code;
}
}
}

public void PaintSolidBox(char[][] map, int pX1, int pY1, int pX2, int pY2, char code)
{
int mkX = scOffX + (pX1 * (scSzX + 1));
int mkY = scOffY + (pY1 * (scSzY + 1));

int maxX = (pX2 - pX1 + 1) * (scSzX + 1);
int maxY = (pY2 - pY1 + 1) * (scSzY + 1);

for (int x = 0; x &lt;= maxX; x++)
{
for (int y = 0; y &lt;= maxY; y++)
{
map[mkY + y][mkX + x] = code;
}
}
}

public void PaintCrossBox(char[][] map, int pX1, int pY1, int pX2, int pY2, char code)
{
int mkX = scOffX + (pX1 * (scSzX + 1));
int mkY = scOffY + (pY1 * (scSzY + 1));

int maxX = (pX2 - pX1 + 1) * (scSzX + 1);
int maxY = (pY2 - pY1 + 1) * (scSzY + 1);

for (int x = 0; x &lt;= maxX; x++)
{
int y = (scSzX == scSzY ? x : (int)Math.Round(x * boxAspect));
map[mkY + y][mkX + x] = code;
map[mkY + maxY - y][mkX + x] = code;
map[mkY][mkX + x] = code;
map[mkY + maxY][mkX + x] = code;
}

for (int y = 0; y &lt;= maxY; y++)
{
map[mkY + y][mkX] = code;
map[mkY + y][mkX + maxX] = code;
}
}

public void PaintHollowBox(char[][] map, int pX, int pY, char code)
{
int mkX = scOffX + (pX * (scSzX + 1));
int mkY = scOffY + (pY * (scSzY + 1));

for (int x = 0; x &lt;= scSzX + 1; x++)
{
map[mkY][mkX + x] = code;
map[mkY + scSzY + 1][mkX + x] = code;
}

for (int y = 0; y &lt;= scSzY + 1; y++)
{
map[mkY + y][mkX] = code;
map[mkY + y][mkX + scSzX + 1] = code;
}
}

public void PaintHollowBox(char[][] map, int pX1, int pY1, int pX2, int pY2, char code)
{
int mkX = scOffX + (pX1 * (scSzX + 1));
int mkY = scOffY + (pY1 * (scSzY + 1));

int maxX = (pX2 - pX1 + 1) * (scSzX + 1);
int maxY = (pY2 - pY1 + 1) * (scSzY + 1);

for (int x = 0; x &lt;= maxX; x++)
{
map[mkY][mkX + x] = code;
map[mkY + maxY][mkX + x] = code;
}

for (int y = 0; y &lt;= maxY; y++)
{
map[mkY + y][mkX] = code;
map[mkY + y][mkX + maxX] = code;
}
}

public void PaintLocationMarker(char[][] map, int pX, int pY, char even, char odd)
{
int mkX = scOffX + (pX * (scSzX + 1));
int mkY = scOffY + (pY * (scSzY + 1));

for (int x = 0; x &lt;= scSzX + 1; x++)
{
for (int y = 0; y &lt;= scSzY + 1; y++)
{
map[mkY + y][mkX + x] = ((x + y) % 2 == 0 ? even : odd);
}
}
}
}

public class CustomConfiguration
{
public IMyTerminalBlock configBlock;
public Dictionary&lt;string, string&gt; config;

public CustomConfiguration(IMyTerminalBlock blk)
{
configBlock = blk;
config = new Dictionary&lt;string, string&gt;(StringComparer.OrdinalIgnoreCase);
}

public void Load()
{
ParseCustomData(configBlock, config);
}

public void Save()
{
WriteCustomData(configBlock, config);
}

public string Get(string key, string defVal = null)
{
return config.GetValueOrDefault(key.Trim(), defVal);
}

public void Get(string key, ref string res)
{
string val;
if (config.TryGetValue(key.Trim(), out val))
{
res = val;
}
}

public void Get(string key, ref int res)
{
int val;
if (int.TryParse(Get(key), out val))
{
res = val;
}
}

public void Get(string key, ref float res)
{
float val;
if (float.TryParse(Get(key), out val))
{
res = val;
}
}

public void Get(string key, ref double res)
{
double val;
if (double.TryParse(Get(key), out val))
{
res = val;
}
}

public void Get(string key, ref bool res)
{
bool val;
if (bool.TryParse(Get(key), out val))
{
res = val;
}
}
public void Get(string key, ref bool? res)
{
bool val;
if (bool.TryParse(Get(key), out val))
{
res = val;
}
}

public void Set(string key, string value)
{
config[key.Trim()] = value;
}

public static void ParseCustomData(IMyTerminalBlock blk, Dictionary&lt;string, string&gt; cfg, bool clr = true)
{
if (clr)
{
cfg.Clear();
}

string[] arr = blk.CustomData.Split(new char[] { '\r', '\n' }, StringSplitOptions.RemoveEmptyEntries);
for (int i = 0; i &lt; arr.Length; i++)
{
string ln = arr[i];
string va;

int p = ln.IndexOf('=');
if (p &gt; -1)
{
va = ln.Substring(p + 1);
ln = ln.Substring(0, p);
}
else
{
va = "";
}
cfg[ln.Trim()] = va.Trim();
}
}

public static void WriteCustomData(IMyTerminalBlock blk, Dictionary&lt;string, string&gt; cfg)
{
StringBuilder sb = new StringBuilder(cfg.Count * 100);
foreach (var va in cfg)
{
sb.Append(va.Key).Append('=').Append(va.Value).Append('\n');
}
blk.CustomData = sb.ToString();
}
}</Program>
                      <Storage />
                      <TextPanels>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <SelectedScript />
                          <TextPadding>2</TextPadding>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                        <MySerializedTextPanelData>
                          <ChangeInterval>0</ChangeInterval>
                          <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                          <FontSize>1</FontSize>
                          <ShowText>NONE</ShowText>
                          <FontColor>
                            <PackedValue>4294967295</PackedValue>
                            <X>255</X>
                            <Y>255</Y>
                            <Z>255</Z>
                            <R>255</R>
                            <G>255</G>
                            <B>255</B>
                            <A>255</A>
                          </FontColor>
                          <BackgroundColor>
                            <PackedValue>4278190080</PackedValue>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                            <R>0</R>
                            <G>0</G>
                            <B>0</B>
                            <A>255</A>
                          </BackgroundColor>
                          <CurrentShownTexture>0</CurrentShownTexture>
                          <SelectedScript />
                          <TextPadding>2</TextPadding>
                          <ScriptBackgroundColor>
                            <PackedValue>4288108544</PackedValue>
                            <X>0</X>
                            <Y>88</Y>
                            <Z>151</Z>
                            <R>0</R>
                            <G>88</G>
                            <B>151</B>
                            <A>255</A>
                          </ScriptBackgroundColor>
                          <ScriptForegroundColor>
                            <PackedValue>4294962611</PackedValue>
                            <X>179</X>
                            <Y>237</Y>
                            <Z>255</Z>
                            <R>179</R>
                            <G>237</G>
                            <B>255</B>
                            <A>255</A>
                          </ScriptForegroundColor>
                          <Sprites>
                            <Length>0</Length>
                          </Sprites>
                        </MySerializedTextPanelData>
                      </TextPanels>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RemoteControl">
                      <SubtypeName>SmallBlockRemoteControl</SubtypeName>
                      <EntityId>113201487367852736</EntityId>
                      <Min x="0" y="7" z="9" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Remote Control</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <UseSingleWeaponMode>false</UseSingleWeaponMode>
                      <Toolbar>
                        <ToolbarType>Character</ToolbarType>
                        <SelectedSlot xsi:nil="true" />
                        <Slots />
                        <SlotsGamepad />
                      </Toolbar>
                      <SelectedGunId xsi:nil="true" />
                      <BuildToolbar>
                        <ToolbarType>Character</ToolbarType>
                        <SelectedSlot xsi:nil="true" />
                        <Slots />
                        <SlotsGamepad />
                      </BuildToolbar>
                      <PreviousControlledEntityId xsi:nil="true" />
                      <AutoPilotEnabled>false</AutoPilotEnabled>
                      <FlightMode>0</FlightMode>
                      <BindedCamera>0</BindedCamera>
                      <CurrentWaypointIndex>-1</CurrentWaypointIndex>
                      <Waypoints />
                      <Direction>0</Direction>
                      <DockingModeEnabled>false</DockingModeEnabled>
                      <CollisionAvoidance>false</CollisionAvoidance>
                      <Coords />
                      <Names />
                      <WaypointThresholdDistance>0</WaypointThresholdDistance>
                      <IsMainRemoteControl>false</IsMainRemoteControl>
                      <WaitForFreeWay>false</WaitForFreeWay>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
                      <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
                      <EntityId>132261859497557857</EntityId>
                      <Min x="-1" y="6" z="11" />
                      <BlockOrientation Forward="Up" Up="Backward" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Battery 02</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                      <CurrentStoredPower>1</CurrentStoredPower>
                      <ProducerEnabled>true</ProducerEnabled>
                      <MaxStoredPower>0</MaxStoredPower>
                      <SemiautoEnabled>false</SemiautoEnabled>
                      <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
                      <ChargeMode>0</ChargeMode>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
                      <SubtypeName>SmallBlockGyro</SubtypeName>
                      <EntityId>88430808603375208</EntityId>
                      <Min x="0" y="8" z="10" />
                      <BlockOrientation Forward="Backward" Up="Up" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                      <Owner>144115188075855895</Owner>
                      <ShareMode>Faction</ShareMode>
                      <CustomName>Cyclone Gyroscope 03</CustomName>
                      <ShowOnHUD>false</ShowOnHUD>
                      <ShowInTerminal>true</ShowInTerminal>
                      <ShowInToolbarConfig>true</ShowInToolbarConfig>
                      <ShowInInventory>true</ShowInInventory>
                      <Enabled>true</Enabled>
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="1" y="8" z="10" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-1" y="8" z="10" />
                      <ColorMaskHSV x="0" y="-0.8" z="0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="5" z="10" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="2" y="7" z="10" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="7" z="10" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
                      <SubtypeName>SmallBlockArmorBlock</SubtypeName>
                      <Min x="-2" y="5" z="10" />
                      <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
                    </MyObjectBuilder_CubeBlock>
                  </CubeBlocks>
                  <ConveyorLines>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="0" y="7" z="3" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="0" y="7" z="4" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>LARGE_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="0" y="6" z="3" />
                      <StartDirection>Down</StartDirection>
                      <EndPosition x="0" y="5" z="3" />
                      <EndDirection>Up</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="0" y="6" z="-2" />
                      <StartDirection>Forward</StartDirection>
                      <EndPosition x="0" y="6" z="-3" />
                      <EndDirection>Backward</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="1" y="5" z="-2" />
                      <StartDirection>Left</StartDirection>
                      <EndPosition x="0" y="5" z="-2" />
                      <EndDirection>Right</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-1" y="5" z="-2" />
                      <StartDirection>Right</StartDirection>
                      <EndPosition x="0" y="5" z="-2" />
                      <EndDirection>Left</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="0" y="5" z="-2" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="0" y="5" z="-1" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="0" y="6" z="5" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="0" y="6" z="6" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="0" y="8" z="5" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="0" y="8" z="6" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="0" y="5" z="3" />
                      <StartDirection>Forward</StartDirection>
                      <EndPosition x="0" y="5" z="2" />
                      <EndDirection>Backward</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="0" y="5" z="-1" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="0" y="5" z="0" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="0" y="5" z="-1" />
                      <StartDirection>Left</StartDirection>
                      <EndPosition x="-1" y="5" z="-1" />
                      <EndDirection>Right</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="0" y="5" z="-1" />
                      <StartDirection>Right</StartDirection>
                      <EndPosition x="1" y="5" z="-1" />
                      <EndDirection>Left</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="0" y="5" z="0" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="0" y="5" z="1" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-1" y="5" z="-1" />
                      <StartDirection>Left</StartDirection>
                      <EndPosition x="-2" y="5" z="-1" />
                      <EndDirection>Right</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="0" y="5" z="1" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="0" y="5" z="2" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="1" y="5" z="-1" />
                      <StartDirection>Right</StartDirection>
                      <EndPosition x="2" y="5" z="-1" />
                      <EndDirection>Left</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="0" y="6" z="-3" />
                      <StartDirection>Forward</StartDirection>
                      <EndPosition x="0" y="6" z="-4" />
                      <EndDirection>Backward</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-2" y="5" z="-1" />
                      <StartDirection>Left</StartDirection>
                      <EndPosition x="-3" y="5" z="-1" />
                      <EndDirection>Right</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="2" y="5" z="-1" />
                      <StartDirection>Right</StartDirection>
                      <EndPosition x="3" y="5" z="-1" />
                      <EndDirection>Left</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="5" y="6" z="9" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="4" y="6" z="10" />
                      <EndDirection>Right</EndDirection>
                      <Sections>
                        <Section Direction="Backward" Length="1" />
                        <Section Direction="Left" Length="1" />
                      </Sections>
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="0" y="6" z="8" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="0" y="6" z="9" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-5" y="8" z="7" />
                      <StartDirection>Up</StartDirection>
                      <EndPosition x="-5" y="9" z="7" />
                      <EndDirection>Down</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-5" y="4" z="7" />
                      <StartDirection>Down</StartDirection>
                      <EndPosition x="-5" y="3" z="7" />
                      <EndDirection>Up</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="5" y="4" z="7" />
                      <StartDirection>Down</StartDirection>
                      <EndPosition x="5" y="3" z="7" />
                      <EndDirection>Up</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="5" y="8" z="7" />
                      <StartDirection>Up</StartDirection>
                      <EndPosition x="5" y="9" z="7" />
                      <EndDirection>Down</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-1" y="6" z="10" />
                      <StartDirection>Right</StartDirection>
                      <EndPosition x="0" y="6" z="10" />
                      <EndDirection>Left</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="2" y="6" z="10" />
                      <StartDirection>Left</StartDirection>
                      <EndPosition x="1" y="6" z="10" />
                      <EndDirection>Right</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="3" y="6" z="10" />
                      <StartDirection>Left</StartDirection>
                      <EndPosition x="2" y="6" z="10" />
                      <EndDirection>Right</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-2" y="6" z="10" />
                      <StartDirection>Right</StartDirection>
                      <EndPosition x="-1" y="6" z="10" />
                      <EndDirection>Left</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-4" y="6" z="10" />
                      <StartDirection>Right</StartDirection>
                      <EndPosition x="-3" y="6" z="10" />
                      <EndDirection>Left</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-3" y="6" z="10" />
                      <StartDirection>Right</StartDirection>
                      <EndPosition x="-2" y="6" z="10" />
                      <EndDirection>Left</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="4" y="6" z="10" />
                      <StartDirection>Left</StartDirection>
                      <EndPosition x="3" y="6" z="10" />
                      <EndDirection>Right</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="0" y="6" z="9" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="0" y="6" z="10" />
                      <EndDirection>Forward</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="-5" y="6" z="9" />
                      <StartDirection>Backward</StartDirection>
                      <EndPosition x="-4" y="6" z="10" />
                      <EndDirection>Left</EndDirection>
                      <Sections>
                        <Section Direction="Backward" Length="1" />
                        <Section Direction="Right" Length="1" />
                      </Sections>
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                    <MyObjectBuilder_ConveyorLine>
                      <StartPosition x="1" y="6" z="10" />
                      <StartDirection>Left</StartDirection>
                      <EndPosition x="0" y="6" z="10" />
                      <EndDirection>Right</EndDirection>
                      <Sections />
                      <ConveyorLineType>SMALL_LINE</ConveyorLineType>
                    </MyObjectBuilder_ConveyorLine>
                  </ConveyorLines>
                  <BlockGroups>
                    <MyObjectBuilder_BlockGroup>
                      <Name>Cyclone Salvo Group</Name>
                      <Blocks>
                        <Vector3I>
                          <X>-3</X>
                          <Y>6</Y>
                          <Z>4</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>6</Y>
                          <Z>4</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-3</X>
                          <Y>5</Y>
                          <Z>3</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>5</Y>
                          <Z>3</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-4</X>
                          <Y>6</Y>
                          <Z>5</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>4</X>
                          <Y>6</Y>
                          <Z>5</Z>
                        </Vector3I>
                      </Blocks>
                    </MyObjectBuilder_BlockGroup>
                    <MyObjectBuilder_BlockGroup>
                      <Name>Cyclone Ammunition Containers</Name>
                      <Blocks>
                        <Vector3I>
                          <X>-1</X>
                          <Y>5</Y>
                          <Z>-1</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-4</X>
                          <Y>6</Y>
                          <Z>10</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-3</X>
                          <Y>6</Y>
                          <Z>10</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-2</X>
                          <Y>6</Y>
                          <Z>10</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>6</Y>
                          <Z>10</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>2</X>
                          <Y>6</Y>
                          <Z>10</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>1</X>
                          <Y>5</Y>
                          <Z>-1</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>0</X>
                          <Y>5</Y>
                          <Z>0</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>0</X>
                          <Y>5</Y>
                          <Z>1</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>0</X>
                          <Y>5</Y>
                          <Z>2</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>0</X>
                          <Y>6</Y>
                          <Z>-3</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>4</X>
                          <Y>6</Y>
                          <Z>10</Z>
                        </Vector3I>
                      </Blocks>
                    </MyObjectBuilder_BlockGroup>
                    <MyObjectBuilder_BlockGroup>
                      <Name>Cyclone Landing Gear</Name>
                      <Blocks>
                        <Vector3I>
                          <X>-3</X>
                          <Y>3</Y>
                          <Z>7</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>3</Y>
                          <Z>7</Z>
                        </Vector3I>
                      </Blocks>
                    </MyObjectBuilder_BlockGroup>
                    <MyObjectBuilder_BlockGroup>
                      <Name>Cyclone Batteries</Name>
                      <Blocks>
                        <Vector3I>
                          <X>-3</X>
                          <Y>5</Y>
                          <Z>7</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>0</X>
                          <Y>7</Y>
                          <Z>11</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>5</Y>
                          <Z>7</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-4</X>
                          <Y>7</Y>
                          <Z>6</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-2</X>
                          <Y>7</Y>
                          <Z>7</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-2</X>
                          <Y>7</Y>
                          <Z>6</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-2</X>
                          <Y>7</Y>
                          <Z>8</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-3</X>
                          <Y>5</Y>
                          <Z>9</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-3</X>
                          <Y>5</Y>
                          <Z>5</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>5</Y>
                          <Z>5</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>5</Y>
                          <Z>9</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-4</X>
                          <Y>7</Y>
                          <Z>8</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-4</X>
                          <Y>7</Y>
                          <Z>7</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>4</X>
                          <Y>7</Y>
                          <Z>6</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>4</X>
                          <Y>7</Y>
                          <Z>8</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>2</X>
                          <Y>7</Y>
                          <Z>7</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>2</X>
                          <Y>7</Y>
                          <Z>8</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>2</X>
                          <Y>7</Y>
                          <Z>6</Z>
                        </Vector3I>
                      </Blocks>
                    </MyObjectBuilder_BlockGroup>
                    <MyObjectBuilder_BlockGroup>
                      <Name>Cyclone Thrusters</Name>
                      <Blocks>
                        <Vector3I>
                          <X>-1</X>
                          <Y>4</Y>
                          <Z>3</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>1</X>
                          <Y>4</Y>
                          <Z>3</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>1</X>
                          <Y>5</Y>
                          <Z>4</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>1</X>
                          <Y>5</Y>
                          <Z>5</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-1</X>
                          <Y>5</Y>
                          <Z>4</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-3</X>
                          <Y>7</Y>
                          <Z>10</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-1</X>
                          <Y>5</Y>
                          <Z>5</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>7</Y>
                          <Z>6</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-3</X>
                          <Y>7</Y>
                          <Z>11</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>7</Y>
                          <Z>8</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>4</X>
                          <Y>5</Y>
                          <Z>5</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-3</X>
                          <Y>5</Y>
                          <Z>10</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-4</X>
                          <Y>5</Y>
                          <Z>9</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-3</X>
                          <Y>5</Y>
                          <Z>11</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-4</X>
                          <Y>5</Y>
                          <Z>5</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-3</X>
                          <Y>7</Y>
                          <Z>12</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-3</X>
                          <Y>5</Y>
                          <Z>12</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-3</X>
                          <Y>7</Y>
                          <Z>6</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-1</X>
                          <Y>5</Y>
                          <Z>9</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>7</Y>
                          <Z>10</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>0</X>
                          <Y>8</Y>
                          <Z>13</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-1</X>
                          <Y>5</Y>
                          <Z>10</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>7</Y>
                          <Z>11</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-3</X>
                          <Y>7</Y>
                          <Z>8</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>1</X>
                          <Y>5</Y>
                          <Z>9</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>7</Y>
                          <Z>12</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>1</X>
                          <Y>5</Y>
                          <Z>10</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-1</X>
                          <Y>5</Y>
                          <Z>11</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>1</X>
                          <Y>5</Y>
                          <Z>11</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-1</X>
                          <Y>5</Y>
                          <Z>13</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>5</Y>
                          <Z>10</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>1</X>
                          <Y>5</Y>
                          <Z>13</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>5</Y>
                          <Z>11</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>7</Y>
                          <Z>5</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>5</Y>
                          <Z>12</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>4</X>
                          <Y>5</Y>
                          <Z>9</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>7</Y>
                          <Z>9</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-3</X>
                          <Y>7</Y>
                          <Z>5</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-3</X>
                          <Y>7</Y>
                          <Z>9</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-4</X>
                          <Y>7</Y>
                          <Z>5</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-3</X>
                          <Y>7</Y>
                          <Z>4</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>7</Y>
                          <Z>4</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>4</X>
                          <Y>7</Y>
                          <Z>5</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>2</X>
                          <Y>6</Y>
                          <Z>14</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-2</X>
                          <Y>6</Y>
                          <Z>14</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>0</X>
                          <Y>6</Y>
                          <Z>14</Z>
                        </Vector3I>
                      </Blocks>
                    </MyObjectBuilder_BlockGroup>
                    <MyObjectBuilder_BlockGroup>
                      <Name>Cyclone Computers</Name>
                      <Blocks>
                        <Vector3I>
                          <X>-1</X>
                          <Y>7</Y>
                          <Z>9</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-1</X>
                          <Y>6</Y>
                          <Z>9</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>1</X>
                          <Y>6</Y>
                          <Z>9</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>1</X>
                          <Y>7</Y>
                          <Z>9</Z>
                        </Vector3I>
                      </Blocks>
                    </MyObjectBuilder_BlockGroup>
                    <MyObjectBuilder_BlockGroup>
                      <Name>Cyclone Lights</Name>
                      <Blocks>
                        <Vector3I>
                          <X>0</X>
                          <Y>3</Y>
                          <Z>0</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>0</X>
                          <Y>10</Y>
                          <Z>13</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-5</X>
                          <Y>4</Y>
                          <Z>14</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>5</X>
                          <Y>4</Y>
                          <Z>14</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-5</X>
                          <Y>8</Y>
                          <Z>14</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>5</X>
                          <Y>8</Y>
                          <Z>14</Z>
                        </Vector3I>
                      </Blocks>
                    </MyObjectBuilder_BlockGroup>
                    <MyObjectBuilder_BlockGroup>
                      <Name>Cyclone Armaments</Name>
                      <Blocks>
                        <Vector3I>
                          <X>4</X>
                          <Y>6</Y>
                          <Z>5</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>6</Y>
                          <Z>4</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>3</X>
                          <Y>5</Y>
                          <Z>3</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-3</X>
                          <Y>5</Y>
                          <Z>3</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-3</X>
                          <Y>6</Y>
                          <Z>4</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-4</X>
                          <Y>6</Y>
                          <Z>5</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>7</X>
                          <Y>6</Y>
                          <Z>7</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-7</X>
                          <Y>6</Y>
                          <Z>7</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>2</X>
                          <Y>5</Y>
                          <Z>-1</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>1</X>
                          <Y>5</Y>
                          <Z>-2</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-1</X>
                          <Y>5</Y>
                          <Z>-2</Z>
                        </Vector3I>
                        <Vector3I>
                          <X>-2</X>
                          <Y>5</Y>
                          <Z>-1</Z>
                        </Vector3I>
                      </Blocks>
                    </MyObjectBuilder_BlockGroup>
                  </BlockGroups>
                  <DisplayName>[WDM] Cyclone Fighter Bomber</DisplayName>
                  <DestructibleBlocks>true</DestructibleBlocks>
                  <CreatePhysics>false</CreatePhysics>
                  <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
                  <IsRespawnGrid>false</IsRespawnGrid>
                  <LocalCoordSys>0</LocalCoordSys>
                  <TargetingTargets />
                </MyObjectBuilder_CubeGrid>
              </ProjectedGrids>
              <ProjectionOffset>
                <X>0</X>
                <Y>-2</Y>
                <Z>5</Z>
              </ProjectionOffset>
              <ProjectionRotation>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
              </ProjectionRotation>
              <KeepProjection>true</KeepProjection>
              <ShowOnlyBuildable>false</ShowOnlyBuildable>
              <InstantBuildingEnabled>false</InstantBuildingEnabled>
              <MaxNumberOfProjections>5</MaxNumberOfProjections>
              <MaxNumberOfBlocks>200</MaxNumberOfBlocks>
              <ProjectionsRemaining>0</ProjectionsRemaining>
              <GetOwnershipFromProjector>false</GetOwnershipFromProjector>
              <Scale>1</Scale>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-5" y="7" z="10" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="-4" y="8" z="7" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
              <Min x="4" y="8" z="9" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="5" y="7" z="4" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="5" y="5" z="4" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="4" y="8" z="8" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="4" y="8" z="6" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="5" y="6" z="4" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="4" y="8" z="7" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="5" y="5" z="10" />
              <IntegrityPercent>0.6</IntegrityPercent>
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="5" y="7" z="10" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>143966940809090406</EntityId>
              <Min x="5" y="6" z="10" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>140853445447987387</EntityId>
              <Min x="3" y="7" z="9" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
              <Min x="2" y="4" z="9" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
              <Min x="2" y="4" z="5" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="4" y="5" z="4" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>98564092169502561</EntityId>
              <Min x="1" y="4" z="9" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-4" y="5" z="2" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="-3" y="4" z="4" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-2" y="4" z="1" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="2" y="4" z="1" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="4" y="5" z="2" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="3" y="4" z="4" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
              <Min x="-1" y="9" z="9" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="8" z="10" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="-2" y="8" z="11" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
              <Min x="1" y="9" z="9" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="8" z="10" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="2" y="8" z="11" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>122138837413818704</EntityId>
              <Min x="-4" y="7" z="10" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="4" z="5" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="4" z="9" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-4" y="4" z="4" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>113005648877315575</EntityId>
              <Min x="-1" y="4" z="10" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-4" y="8" z="10" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Projector">
              <SubtypeName>SmallProjector</SubtypeName>
              <EntityId>104841260940151872</EntityId>
              <Min x="0" y="5" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Crosshair Projector</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <ProjectedGrids>
                <MyObjectBuilder_CubeGrid>
                  <SubtypeName />
                  <EntityId>121937811358480706</EntityId>
                  <PersistentFlags>CastShadows InScene</PersistentFlags>
                  <PositionAndOrientation>
                    <Position x="0" y="0" z="0" />
                    <Forward x="0.5167359" y="0.237337917" z="-0.822590232" />
                    <Up x="0.851136565" y="-0.03863752" z="0.52352035" />
                    <Orientation>
                      <X>0.277720928</X>
                      <Y>-0.107591651</Y>
                      <Z>-0.664973557</Z>
                      <W>0.6849126</W>
                    </Orientation>
                  </PositionAndOrientation>
                  <LocalPositionAndOrientation xsi:nil="true" />
                  <GridSizeEnum>Small</GridSizeEnum>
                  <CubeBlocks>
                    <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_PistonTop">
                      <SubtypeName>SmallPistonTop</SubtypeName>
                      <EntityId>126906889331910134</EntityId>
                      <IntegrityPercent>0.2</IntegrityPercent>
                      <BuildPercent>0.2</BuildPercent>
                      <ParentEntityId>0</ParentEntityId>
                      <YieldLastComponent>false</YieldLastComponent>
                    </MyObjectBuilder_CubeBlock>
                  </CubeBlocks>
                  <DisplayName>Crosshairs</DisplayName>
                  <DestructibleBlocks>true</DestructibleBlocks>
                  <CreatePhysics>false</CreatePhysics>
                  <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
                  <IsRespawnGrid>false</IsRespawnGrid>
                  <LocalCoordSys>0</LocalCoordSys>
                  <TargetingTargets />
                </MyObjectBuilder_CubeGrid>
              </ProjectedGrids>
              <ProjectionOffset>
                <X>0</X>
                <Y>0</Y>
                <Z>50</Z>
              </ProjectionOffset>
              <ProjectionRotation>
                <X>0</X>
                <Y>1</Y>
                <Z>0</Z>
              </ProjectionRotation>
              <KeepProjection>true</KeepProjection>
              <ShowOnlyBuildable>false</ShowOnlyBuildable>
              <InstantBuildingEnabled>false</InstantBuildingEnabled>
              <MaxNumberOfProjections>5</MaxNumberOfProjections>
              <MaxNumberOfBlocks>200</MaxNumberOfBlocks>
              <ProjectionsRemaining>0</ProjectionsRemaining>
              <GetOwnershipFromProjector>false</GetOwnershipFromProjector>
              <Scale>1</Scale>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="4" y="8" z="10" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockSmallContainer</SubtypeName>
              <EntityId>143832027616360575</EntityId>
              <Min x="4" y="6" z="10" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Ammunition Container 12</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>79686032433706669</EntityId>
              <Min x="3" y="7" z="10" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="4" z="9" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="4" z="5" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="4" y="4" z="4" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>129643650758891004</EntityId>
              <Min x="1" y="4" z="10" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="-4" y="5" z="1" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="4" y="5" z="1" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="9" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-1" y="9" z="10" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="8" z="11" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="8" z="12" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="1" y="9" z="10" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="8" z="11" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="8" z="12" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>127181937591694900</EntityId>
              <Min x="-4" y="7" z="11" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockSmallContainer</SubtypeName>
              <EntityId>110024911036437898</EntityId>
              <Min x="-4" y="6" z="10" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Ammunition Container 02</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="-3" y="4" z="10" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>86826712396779003</EntityId>
              <Min x="-1" y="4" z="11" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-4" y="6" z="11" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="4" y="6" z="11" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>114873671213798794</EntityId>
              <Min x="3" y="7" z="11" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="3" y="4" z="10" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>115856634384524267</EntityId>
              <Min x="1" y="4" z="11" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="9" z="10" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-1" y="9" z="11" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="8" z="12" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="8" z="13" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="1" y="9" z="11" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="8" z="12" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="8" z="13" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>127580000758948530</EntityId>
              <Min x="-4" y="7" z="12" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>95269566173322190</EntityId>
              <Min x="-5" y="6" z="10" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>100193108596695682</EntityId>
              <Min x="-4" y="5" z="10" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="-3" y="4" z="11" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-4" y="4" z="10" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-4" y="6" z="12" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-5" y="6" z="11" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="5" y="6" z="11" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="4" y="6" z="12" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>91696552903367868</EntityId>
              <Min x="3" y="7" z="12" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="3" y="4" z="11" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>110201619729258034</EntityId>
              <Min x="3" y="5" z="10" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="4" y="4" z="10" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorCenter</SubtypeName>
              <EntityId>125590003668460943</EntityId>
              <Min x="0" y="9" z="13" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="9" z="12" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="-3" y="8" z="13" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeThrust</SubtypeName>
              <EntityId>125437512855232593</EntityId>
              <Min x="-3" y="5" z="13" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="-1" y="8" z="13" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="8" z="14" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="9" z="12" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="3" y="8" z="13" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="1" y="8" z="13" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeThrust</SubtypeName>
              <EntityId>112684902900842494</EntityId>
              <Min x="2" y="5" z="13" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="8" z="14" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>139968747513727317</EntityId>
              <Min x="-4" y="5" z="11" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-4" y="6" z="13" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>143270717837185179</EntityId>
              <Min x="0" y="6" z="9" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="4" y="6" z="13" />
              <ColorMaskHSV x="0.152777776" y="0.2" z="0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>117209618435635998</EntityId>
              <Min x="3" y="5" z="11" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
              <SubtypeName>SmallBlockLight_1corner</SubtypeName>
              <EntityId>141036068208043480</EntityId>
              <Min x="-5" y="4" z="14" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <CustomName>External Light G-2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Radius>1</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <ColorRed>0.7058824</ColorRed>
              <ColorGreen>0.784313738</ColorGreen>
              <Falloff>1</Falloff>
              <Intensity>10</Intensity>
              <BlinkIntervalSeconds>1</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
              <Offset>0.5</Offset>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-4" y="6" z="14" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>116577889965504020</EntityId>
              <Min x="-4" y="5" z="12" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeThrust</SubtypeName>
              <EntityId>128151641554698414</EntityId>
              <Min x="-1" y="6" z="13" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>108835406901569347</EntityId>
              <Min x="-1" y="5" z="13" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="7" z="14" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="7" z="13" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="5" z="14" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="5" z="13" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="-1" y="8" z="14" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>103695173287585960</EntityId>
              <Min x="0" y="8" z="13" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="1" y="9" z="13" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="1" y="8" z="14" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>113667451922558362</EntityId>
              <Min x="3" y="5" z="12" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="4" y="6" z="14" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>94698910453862876</EntityId>
              <Min x="1" y="5" z="13" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="7" z="13" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="7" z="14" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="5" z="13" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="5" z="14" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="9" z="14" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-4" y="6" z="15" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="8" z="14" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="7" z="15" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="8" z="13" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="4" z="14" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="5" z="15" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="4" z="13" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="-1" y="8" z="15" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="9" z="14" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="1" y="8" z="15" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="4" y="6" z="15" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="8" z="13" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="7" z="15" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="8" z="14" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="4" z="13" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="5" z="15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="4" z="14" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-1" y="9" z="15" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-4" y="6" z="16" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="8" z="15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>113451656840803076</EntityId>
              <Min x="1" y="7" z="10" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Dock Timer</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff_Off</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>113451656840803076</BlockEntityId>
                      <GroupName>Cyclone Lights</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff_Off</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>113451656840803076</BlockEntityId>
                      <GroupName>Cyclone Thrusters</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>2</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff_Off</Action>
                      <BlockEntityId>135393174128687096</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>3</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff_Off</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>113451656840803076</BlockEntityId>
                      <GroupName>Cyclone Computers</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>4</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff_Off</Action>
                      <BlockEntityId>108692332940433959</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>5</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Lock</Action>
                      <BlockEntityId>111186629731583967</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>6</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>Lock</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>113451656840803076</BlockEntityId>
                      <GroupName>Cyclone Landing Gear</GroupName>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad />
              </Toolbar>
              <Delay>1000</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>true</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="4" z="15" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>143867472184282909</EntityId>
              <Min x="-1" y="6" z="9" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>LCDs Computer</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <Program />
              <Storage />
              <TextPanels>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
              </TextPanels>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="-1" y="8" z="16" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="1" y="9" z="15" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfSlopeArmorBlock</SubtypeName>
              <Min x="1" y="8" z="16" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="4" y="6" z="16" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="8" z="15" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="4" z="15" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-1" y="9" z="16" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="8" z="17" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="1" y="9" z="16" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="8" z="17" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="9" z="17" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="8" z="17" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="9" z="17" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="8" z="17" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="9" z="17" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="9" z="17" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorInvCorner</SubtypeName>
              <EntityId>132485032169185652</EntityId>
              <Min x="0" y="9" z="12" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="0" y="9" z="11" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-1" y="9" z="13" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorInvCorner</SubtypeName>
              <EntityId>75938780167910607</EntityId>
              <Min x="0" y="9" z="14" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
              <SubtypeName>SmallBlockLight_1corner</SubtypeName>
              <EntityId>127010571684636372</EntityId>
              <Min x="-5" y="8" z="14" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <CustomName>Port Light</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Radius>1</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <ColorGreen>0</ColorGreen>
              <ColorBlue>0</ColorBlue>
              <Falloff>1</Falloff>
              <Intensity>10</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
              <Offset>1</Offset>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
              <SubtypeName>SmallBlockLight_1corner</SubtypeName>
              <EntityId>132655112158063447</EntityId>
              <Min x="5" y="4" z="14" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <CustomName>External Light G-2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Radius>1</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <ColorRed>0.7058824</ColorRed>
              <ColorGreen>0.784313738</ColorGreen>
              <Falloff>1</Falloff>
              <Intensity>10</Intensity>
              <BlinkIntervalSeconds>1</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
              <Offset>0.5</Offset>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
              <SubtypeName>SmallBlockLight_1corner</SubtypeName>
              <EntityId>109285218712220461</EntityId>
              <Min x="5" y="8" z="14" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <CustomName>Starboard Light</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Radius>1</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <ColorRed>0</ColorRed>
              <ColorBlue>0</ColorBlue>
              <Falloff>1</Falloff>
              <Intensity>10</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
              <Offset>1</Offset>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
              <SubtypeName>SmallBlockSmallLight</SubtypeName>
              <EntityId>118290797202698299</EntityId>
              <Min x="0" y="10" z="13" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <CustomName>Exterior Light G-2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Radius>1</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <ColorGreen>0</ColorGreen>
              <ColorBlue>0</ColorBlue>
              <Falloff>1.3</Falloff>
              <Intensity>10</Intensity>
              <BlinkIntervalSeconds>1</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>10</BlinkOffset>
              <Offset>0.5</Offset>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>142663984348321538</EntityId>
              <Min x="2" y="7" z="7" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Small Battery 13</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.04976611</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>83511048891025245</EntityId>
              <Min x="2" y="7" z="8" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Small Battery 14</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.0497661047</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>80006238336850141</EntityId>
              <Min x="2" y="7" z="6" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Small Battery 15</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.0497661</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>98323571778833890</EntityId>
              <Min x="-2" y="7" z="7" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Small Battery 02</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.0497661</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>97260562125389447</EntityId>
              <Min x="-2" y="7" z="6" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Small Battery 03</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.0497660972</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>95209224597033209</EntityId>
              <Min x="-2" y="7" z="8" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Small Battery 04</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.0497660935</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="4" z="10" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="4" z="12" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="4" z="13" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="4" z="10" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="4" z="11" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="4" z="12" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="4" z="13" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="2" y="4" z="14" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Tip</SubtypeName>
              <Min x="-2" y="4" z="14" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="-1" y="4" z="13" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
              <Min x="-1" y="4" z="12" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Tip</SubtypeName>
              <Min x="1" y="4" z="12" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="1" y="4" z="14" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorCenter</SubtypeName>
              <EntityId>77876616563716295</EntityId>
              <Min x="0" y="4" z="11" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorCorner2Base</SubtypeName>
              <Min x="-1" y="4" z="14" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorInvCorner2Base</SubtypeName>
              <Min x="1" y="4" z="13" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
              <SubtypeName>SmallCameraBlock</SubtypeName>
              <EntityId>79811397474814354</EntityId>
              <Min x="0" y="4" z="14" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Rear Camera</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsActive>false</IsActive>
              <Fov>1.04719758</Fov>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorCenter</SubtypeName>
              <EntityId>104842742993764538</EntityId>
              <Min x="0" y="4" z="12" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RadioAntenna">
              <SubtypeName>SmallBlockRadioAntenna</SubtypeName>
              <EntityId>135393174128687096</EntityId>
              <Min x="0" y="5" z="13" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>NPC Antenna</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <BroadcastRadius>9999.997</BroadcastRadius>
              <ShowShipName>false</ShowShipName>
              <EnableBroadcasting>true</EnableBroadcasting>
              <AttachedPB>0</AttachedPB>
              <IgnoreAllied>false</IgnoreAllied>
              <IgnoreOther>true</IgnoreOther>
              <HudText />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="4" z="7" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorInvCorner</SubtypeName>
              <EntityId>112555413458444778</EntityId>
              <Min x="0" y="4" z="13" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="4" z="8" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-4" y="7" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="4" y="7" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>92061880675110079</EntityId>
              <Min x="-3" y="5" z="9" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Small Battery 05</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.04976609</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>124301691464540539</EntityId>
              <Min x="-3" y="5" z="5" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Small Battery 06</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.049766086</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>101897365573426538</EntityId>
              <Min x="3" y="5" z="5" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Small Battery 07</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.0497660823</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockSmallBatteryBlock</SubtypeName>
              <EntityId>143540712177231068</EntityId>
              <Min x="3" y="5" z="9" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Small Battery 08</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.04976608</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorCenter</SubtypeName>
              <EntityId>142750341170086241</EntityId>
              <Min x="0" y="4" z="9" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorCenter</SubtypeName>
              <EntityId>95596765911894392</EntityId>
              <Min x="0" y="4" z="10" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>87354357090279463</EntityId>
              <Min x="-2" y="6" z="5" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Gyroscope</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>80466587648360226</EntityId>
              <Min x="2" y="6" z="5" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Gyroscope</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="5" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="6" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>84978610031743588</EntityId>
              <Min x="1" y="6" z="9" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key>74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value>[Weapon Salvo Config]
Salvo group nametag=Salvo Group
Arguments=
</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Sequencer Computer</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <Program />
              <Storage />
              <TextPanels>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
              </TextPanels>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>125784307732964194</EntityId>
              <Min x="1" y="6" z="10" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>113659826826957585</EntityId>
              <Min x="0" y="6" z="10" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="8" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="8" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="8" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="6" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockSmallContainer</SubtypeName>
              <EntityId>124575853621233419</EntityId>
              <Min x="-3" y="6" z="10" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Ammunition Container 03</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockSmallContainer</SubtypeName>
              <EntityId>123244455626364076</EntityId>
              <Min x="-2" y="6" z="10" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Ammunition Container 04</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockSmallContainer</SubtypeName>
              <EntityId>113400998349614771</EntityId>
              <Min x="3" y="6" z="10" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Ammunition Container 05</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockSmallContainer</SubtypeName>
              <EntityId>108783060997363392</EntityId>
              <Min x="2" y="6" z="10" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Cyclone Ammunition Container 06</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="5" z="5" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="5" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="5" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="5" z="5" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="4" y="6" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-4" y="6" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="5" z="10" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="5" z="11" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="5" z="12" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="5" z="12" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="5" z="12" />
              <ColorMaskHSV x="0" y="-0.8" z="0" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>85567530997672254</EntityId>
              <Min x="-1" y="6" z="10" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>75448174501038099</EntityId>
              <Min x="0" y="7" z="10" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Combat Mode Timer</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>75448174501038099</BlockEntityId>
                      <GroupName>Cyclone Armaments</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>104841260940151872</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad />
              </Toolbar>
              <Delay>1000</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>true</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>75946269585384233</EntityId>
              <Min x="1" y="7" z="9" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key>74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value>[Artificial Horizon - General]
Text surface name tag=Horizon
;Time before predicted collision that the AH will
;warn you to pull up (-1 disables warning)
Collision warning time threshold (s)=5
Collision warning sound name tag=Horizon
Collision warning sound loop interval (s)=0.166
Optional reference name tag=Reference
Surface to Sealevel transition alt. (m)=1000
Show XYZ axes in space=true
Sun rotation axis=X:0 Y:-1 Z:0

[Artificial Horizon - Colors]
Sky background=10, 30, 50, 255
Ground background=10, 10, 10, 255
Space background=0, 0, 0, 255
Prograde velocity=150, 150, 0, 255
Retrograde velocity=150, 0, 0, 255
Text=150, 150, 150, 255
Text box outline=150, 150, 150, 255
Text box background=10, 10, 10, 150
Horizon line=0, 0, 0, 255
Elevation lines=150, 150, 150, 255
Orientation indicator=150, 150, 150, 255
Space x-axis=100, 50, 0, 150
Space y-axis=0, 100, 0, 150
Space z-axis=0, 50, 100, 150
</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Velocity Computer</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <Program />
              <Storage />
              <TextPanels>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
              </TextPanels>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>99158873653440964</EntityId>
              <Min x="-1" y="7" z="10" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Undock Timer</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Unlock</Action>
                      <BlockEntityId>111186629731583967</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>Unlock</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>99158873653440964</BlockEntityId>
                      <GroupName>Cyclone Landing Gear</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>2</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff_On</Action>
                      <BlockEntityId>108692332940433959</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>3</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff_On</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>99158873653440964</BlockEntityId>
                      <GroupName>Cyclone Thrusters</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>4</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff_On</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>99158873653440964</BlockEntityId>
                      <GroupName>Cyclone Lights</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>5</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff_On</Action>
                      <BlockEntityId>135393174128687096</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>6</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff_On</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>99158873653440964</BlockEntityId>
                      <GroupName>Cyclone Computers</GroupName>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad />
              </Toolbar>
              <Delay>1000</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>true</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>136827397296818396</EntityId>
              <Min x="-1" y="7" z="9" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key>74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value>[DDS]
checkSelfOcclusion=false</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Program - DDS</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Program>//------------------------------------------------------------
// ADN - Diamond Dome Defense Script v5.4
//------------------------------------------------------------

//Minified with MDK (Malware Development Kit for Space Engineers)
//Link: https://github.com/malware-dev/MDK-SE

class α{public int ΰ=600;public int ί=45;public int ή=3600;public double έ=5000;public int ά=30;public int Ϋ=1;public
float β=1;public int Ϊ=15;public bool Ψ=true;public int Χ=45;public bool Φ=true;public int Υ=2;public int Τ=3;public int Σ=60
;public bool Ρ=true;public double Ω=12;public int γ=15;public double μ=3000;public int φ=15;public int τ=3;public int σ=
15;public int ς=90;public int ρ=2;public int π=15;public int ο=60;public double ξ=5;public double υ=2;public double ν=4;
public bool λ=true;public double κ=12;public double ι=36;public double θ=2000;public double η=0.5;public double ζ=0.75;public
double ε=800;public int δ=60;public int Ο=600;public int Έ=300;public int Δ=600;public int ͽ=15;public double ͼ=60;public
double ͻ=0.995;public bool ͺ=true;public bool ͷ=false;public float Ͷ=1f;public float ʹ=60f;public float ͳ=60f;public float Ͳ=
50f;public float ͱ=60f;public int Ͱ=90;public int ˮ=300;public double ˬ=88;public double ˤ=79;public int ˣ=30;public int Ά=
120;public bool ˢ=true;public bool Ή=false;public float Ξ=0f;public int Μ=500;}const double Λ=400;const double Κ=0;const
double Ι=400;const double Θ=800;const double Η=0;const double Ζ=0;const bool Ν=false;const bool Ε=false;const double Γ=100;
const double Β=600;const double Α=200;const double ΐ=800;const double Ώ=4;const double Ύ=1;const bool Ό=true;const bool Π=
true;class Ί{public Ɓ χ=new Ɓ(Λ,Κ,Ι,Θ,Η,Ζ,Ν,Ε);public Ɓ Ђ=new Ɓ(Γ,Β,Α,ΐ,Ώ,Ύ,Ό,Π);}const string Ѐ="5.4";const string Ͽ=
"Diamond Dome";const string Ͼ="DDS";const string Ͻ="AGM";const string ϼ="DDS Designator";const string ϻ="DDS Camera";const string Ϻ=
"DDS Aiming";const string Ё="DDS Door";const string Ϲ="DDS Display";const string Ϸ="DDS Turret";const string ϵ="Azimuth";const
string ϴ="Elevation";const string ϳ="Aiming";const string ϲ="Reload";const string ϱ="Forward";const string ϰ="Status";const
string ϸ="Alert";const string Ѓ="AIM";const string Ќ="DDS Missile";const string Ж="DDS Torpedo";const string Д="[CGE]";const
string Г="FIRE";const string В="LARGEST";const string Б="BIG";const string А="EXTEND";const string Џ="TRACK";const string Ў=
"RELEASE";const string Е="SET";const string Ѝ="CENTER";const string Ћ="OFFSET";const string Њ="RANDOM";const string Љ="RANGE";
const string Ј="INCRANGE";const string Ї="DECRANGE";const string І="CYCLEOFFSET";const string Ѕ="TOGGLE";const string Є=
"ENABLE";const string ϯ="DISABLE";const string Ϯ="AUTOLAUNCH";const string ψ="AUTOLAUNCH_ON";const string Ϙ="AUTOLAUNCH_OFF";
const string ϗ="DEBUGMODE";const double ϖ=0.707;const int ϕ=7;const int ϔ=30;const int ϓ=240;const int ϒ=120;const double ϙ=
0.75;const int ϑ=60;const double Ϗ=0.005;const int ώ=(int)(1/Ϗ);const double ύ=1.0/60.0;const int ό=60;const UpdateType ϋ=
UpdateType.Terminal|UpdateType.Trigger|UpdateType.Script;const string ϊ="IGCMSG_TK_IF";const string ω="IGCMSG_TR_TK";const string
ϐ="IGCMSG_TR_DL";const string Ϛ="IGCMSG_TR_SW";const string ϣ="CGE_MSG_TR_DL";const string ϭ="SIMJ";const float ϫ=0.032f;
Color Ϫ=Color.White;Color ϩ=new Color(40,5,100);Color Ϩ=new Color(245,230,255);Color ϧ=new Color(40,15,5);Color Ϧ=Color.White
;Color ϥ=new Color(0,0,0);Color Ϭ=new Color(50,50,50);Color Ϥ=new Color(255,255,255);Color Ϣ=new Color(100,100,0);Color ϡ
=Color.White;Color Ϡ=Color.Green;Color ϟ=Color.White;Color Ϟ=Color.DarkOrchid;Color ϝ=Color.White;Color Ϝ=new Color(0,0,
90);char[]ϛ=new char[]{':'};char[]ˡ=new char[]{'\u2014','\\','|','/','\u2014','\\','|','/'};IComparer&lt;ĳ&gt;ʉ=new У();Random ī
=new Random();List&lt;IMyTerminalBlock&gt;ʇ=new List&lt;IMyTerminalBlock&gt;(0);StringBuilder ǚ=new StringBuilder();int ʆ=0;α Õ;Ί ʅ;
IMyRemoteControl ʄ;List&lt;ý&gt;ʃ;Р&lt;ý&gt;ʈ;Р&lt;ý&gt;ʂ;List&lt;IMyTextSurface&gt;ʀ;int ɿ=1;int ɾ=0;int ɽ=0;List&lt;İ&gt;ɼ;Р&lt;İ&gt;ɻ;Р&lt;İ&gt;ɺ;int ʁ=-10000;List&lt;
IMyCameraBlock&gt;ʊ;Š ʓ;int ʝ;Ю ʛ;љ ʚ;SortedDictionary&lt;double,ĳ&gt;ʙ;double ʘ=0;int ʗ;bool ʖ=false;int ʕ=0;List&lt;IMyProgrammableBlock&gt;ʜ;List&lt;
IMyProgrammableBlock&gt;ʔ;List&lt;Ř&gt;ʒ;Dictionary&lt;string,Ř&gt;ʑ;byte[]ʐ=new byte[8];long[]ʏ=new long[1];int ʎ=0;Ʋ ʍ;IEnumerator&lt;int&gt;ʌ;
IMyBroadcastListener ʋ;IMyBroadcastListener ɸ;Queue&lt;P&gt;ɧ;Queue&lt;ĳ&gt;ɯ;int ɦ=0;bool ɥ=false;double ɤ=100;double ɣ=0;int ɢ=0;int ɡ=0;long ɠ=0;bool
ɟ=true;ǣ ɞ;bool ɝ;int ɜ=0;int ǲ=0;int ɛ=0;bool ɚ=false;Program(){Runtime.UpdateFrequency=UpdateFrequency.Update1;ɞ=new ǣ(
Runtime,ώ,Ϗ);Õ=new α();ʅ=new Ί();}void Main(string ə,UpdateType ɨ){if(!ɚ){if(!ɰ()){return;}ʗ=-100000;ʕ=0;ɟ=true;ɝ=false;ɞ.ǅ();ǲ
=-1;ɚ=true;return;}ɞ.ǋ();if(ɝ)ɞ.Ǡ("InterGridComms");if(ə.Length&gt;0){if(ə.Equals(ω)){ѫ();}else{if((ɨ&amp;ϋ)!=0){ѳ(ə);}}}if(ɝ)ɞ.
Ǟ("InterGridComms");ɠ+=Runtime.TimeSinceLastRun.Ticks;if((ɨ&amp;UpdateType.Update1)==0||ɠ==0){return;}ɠ=0;ǲ++;if(!ɟ){if(ǲ%ϑ==
0){Ŕ();}return;}if(ɝ)ɞ.Ǡ("AutoMissileLaunch");if(ǲ&gt;=ʎ){Ҹ();}if(ɝ)ɞ.Ǟ("AutoMissileLaunch");if(ɝ)ɞ.Ǡ("MissileReload");if(Õ.
Έ&gt;0&amp;&amp;ǲ%Õ.Έ==0){ѧ();}if(ɝ)ɞ.Ǟ("MissileReload");if(ɝ)ɞ.Ǡ("ManualAimReload");if(Õ.ΰ&gt;0&amp;&amp;ǲ%Õ.ΰ==0){ˇ();}if(ɝ)ɞ.Ǟ(
"ManualAimReload");if(ɝ)ɞ.Ǡ("ManualRaycast");ʶ();if(ɝ)ɞ.Ǟ("ManualRaycast");if(ɝ)ɞ.Ǡ("Designator");ʲ();if(ɝ)ɞ.Ǟ("Designator");if(ɝ)ɞ.Ǡ(
"Allies");Ґ();if(ɝ)ɞ.Ǟ("Allies");if(ʛ.Ņ()&gt;0){ʖ=true;if(ɝ)ɞ.Ǡ("RaycastTracking");if(ǲ&gt;=ʝ){ʮ();}if(ɝ)ɞ.Ǟ("RaycastTracking");if(ɝ)ɞ
.Ǡ("AssignTargets");if(ǲ%Õ.ρ==0){ҏ();}if(ɝ)ɞ.Ǟ("AssignTargets");if(ɝ)ɞ.Ǡ("PDCAimFireReload");Ѩ();if(ɝ)ɞ.Ǟ(
"PDCAimFireReload");}else if(ʖ){ʖ=false;foreach(ý ɱ in ʃ){ɱ.đ=null;ɱ.ȶ();ɱ.ȡ();}ʕ=0;}if(ɝ)ɞ.Ǡ("TransmitIGCMessages");if(ʛ.Ņ()&gt;0||ɧ.Count()
&gt;0){ҿ();}ҟ();if(ɝ)ɞ.Ǟ("TransmitIGCMessages");if(ǲ%Õ.ˣ==0){Ҟ();}if(ǲ%ϑ==0){Ŕ();}ɞ.ǜ();}void ɶ(){try{ĳ ɵ;IMyTerminalBlock ɴ
=(ʓ.Æ.Count&gt;0?ʓ.Æ[0]:(IMyTerminalBlock)Me);MyDetectedEntityInfo ɳ=new MyDetectedEntityInfo(9801,ϭ,MyDetectedEntityType.
LargeGrid,ɴ.WorldMatrix.Translation+(ɴ.WorldMatrix.Forward*0.1),ɴ.WorldMatrix,Vector3D.Zero,MyRelationsBetweenPlayerAndBlock.
Enemies,ɴ.WorldAABB.Inflate(100),1);ʛ.ћ(ref ɳ,1,out ɵ);ѫ();ѳ(ϭ);Ҹ();ҷ(ɵ,false,true);Һ(ʔ,ɵ,с.ф,null,false,true);double ɲ=Õ.έ;Õ.έ
=0.1f;ʒ=new List&lt;Ř&gt;();ʒ.Add(new Ř("AIM0",Me,null,null));ʶ();Õ.έ=ɲ;ʒ=null;ʮ();ҏ();Ѩ();ʮ();ҏ();Ѩ();ʛ.ш();ʛ.ъ();ʖ=false;
foreach(ý ɱ in ʃ){ɱ.đ=null;ɱ.ȶ();ɱ.ȡ();}ʕ=0;ɧ.Clear();ɯ.Clear();ҿ();ҿ();ɧ.Clear();ɯ.Clear();ɥ=false;ɦ=0;}catch(Exception){}}
bool ɰ(){if(ɛ==0){ʷ();List&lt;IMyRemoteControl&gt;ɷ=new List&lt;IMyRemoteControl&gt;(0);GridTerminalSystem.GetBlocksOfType(ɷ,(Ť)=&gt;{if(ʄ
==null){ʄ=Ť;}return false;});if(ʄ!=null){float ɮ=ʄ.SpeedLimit;ʄ.SpeedLimit=float.MaxValue;ɤ=ʄ.SpeedLimit;ʄ.SpeedLimit=ɮ;}
if(Õ.ˢ){List&lt;IMyTerminalBlock&gt;ɭ=new List&lt;IMyTerminalBlock&gt;();GridTerminalSystem.GetBlocksOfType(ɭ,(Ť)=&gt;{return(Ť is
IMyMechanicalConnectionBlock||Ť is IMyShipConnector);});List&lt;ƴ&gt;ɬ=new List&lt;ƴ&gt;();foreach(IMyTerminalBlock ɫ in ɭ){if(ɫ is IMyMechanicalConnectionBlock
){IMyMechanicalConnectionBlock ɪ=ɫ as IMyMechanicalConnectionBlock;if(ɪ.Top!=null){ɬ.Add(new ƴ(ɪ.Top.CubeGrid,ɪ.Top.
Position));}}else{IMyShipConnector ɩ=ɫ as IMyShipConnector;if(ɩ!=null&amp;&amp;ɩ.OtherConnector!=null){ɬ.Add(new ƴ(ɩ.OtherConnector.
CubeGrid,ɩ.OtherConnector.Position));}}}if(Õ.Ή){ư ɹ=new ư();ʌ=ɹ.ǂ(new ƴ(Me.CubeGrid,Me.Position),ɬ,Õ.Ξ,Õ.Μ);ʍ=ɹ;ɛ=1;}else{Ɲ ʞ=
new Ɲ(new ƴ(Me.CubeGrid,Me.Position),ɬ,Õ.Ξ);ʍ=ʞ;ɛ=2;}}else{ʍ=null;}ʓ=new Š(new List&lt;IMyCameraBlock&gt;(0));ʛ=new Ю();ʚ=new љ()
;ʙ=new SortedDictionary&lt;double,ĳ&gt;();ˇ();ѧ();ɧ=new Queue&lt;P&gt;();ɯ=new Queue&lt;ĳ&gt;();Õ.έ=Math.Min(Math.Max(Õ.έ,1000),100000);ʋ=
IGC.RegisterBroadcastListener(ω);ɸ=IGC.RegisterBroadcastListener(ϊ);ɣ=Me.CubeGrid.WorldAABB.HalfExtents.Length();ɶ();}if(ɛ
==1){if(ʌ.MoveNext()){Echo("--- Creating Occlusion Checker ---\nBlocks Processed:"+ʌ.Current);return false;}else{Echo(
"--- Occlusion Checker Created ---");ʌ.Dispose();ʌ=null;ɛ=2;}}return true;}void ʷ(){int ˊ=Me.CustomData.GetHashCode();if(ʆ==0||ʆ!=ˊ){ʆ=ˊ;MyIni ˈ=new MyIni(
);if(ˈ.TryParse(Me.CustomData)){if(ˈ.ContainsSection(Ͼ)){Õ.ΰ=ˈ.Get(Ͼ,"MainBlocksReloadTicks").ToInt32(Õ.ΰ);Õ.ί=ˈ.Get(Ͼ,
"TargetTracksTransmitIntervalTicks").ToInt32(Õ.ί);Õ.ή=ˈ.Get(Ͼ,"ManualAimBroadcastDurationTicks").ToInt32(Õ.ή);Õ.έ=ˈ.Get(Ͼ,"ManualAimRaycastDistance").
ToDouble(Õ.έ);Õ.ά=ˈ.Get(Ͼ,"ManualAimRaycastRefreshInterval").ToInt32(Õ.ά);Õ.Ϋ=ˈ.Get(Ͼ,"MaxDesignatorUpdatesPerTick").ToInt32(Õ.Ϋ
);Õ.β=ˈ.Get(Ͼ,"MaxPDCUpdatesPerTick").ToSingle(Õ.β);Õ.Ϊ=ˈ.Get(Ͼ,"MinPDCRefreshRate").ToInt32(Õ.Ϊ);Õ.Ψ=ˈ.Get(Ͼ,
"UseDesignatorReset").ToBoolean(Õ.Ψ);Õ.Χ=ˈ.Get(Ͼ,"DesignatorResetInterval").ToInt32(Õ.Χ);Õ.Φ=ˈ.Get(Ͼ,"UseRangeSweeper").ToBoolean(Õ.Φ);Õ.Τ=ˈ
.Get(Ͼ,"RangeSweeperPerTick").ToInt32(Õ.Τ);Õ.Υ=ˈ.Get(Ͼ,"RangeSweeperInterval").ToInt32(Õ.Υ);Õ.Σ=ˈ.Get(Ͼ,
"TargetFoundHoldTicks").ToInt32(Õ.Σ);Õ.Ρ=ˈ.Get(Ͼ,"UsePDCSpray").ToBoolean(Õ.Ρ);Õ.Ω=ˈ.Get(Ͼ,"PDCSprayMinTargetSize").ToDouble(Õ.Ω);Õ.μ=ˈ.Get(Ͼ,
"MaxRaycastTrackingDistance").ToDouble(Õ.μ);Õ.φ=ˈ.Get(Ͼ,"RaycastTargetRefreshTicks").ToInt32(Õ.φ);Õ.τ=Math.Max(ˈ.Get(Ͼ,"RaycastGlobalRefreshTicks").
ToInt32(Õ.τ),1);Õ.σ=ˈ.Get(Ͼ,"PriorityMinRefreshTicks").ToInt32(Õ.σ);Õ.ς=ˈ.Get(Ͼ,"PriorityMaxRefreshTicks").ToInt32(Õ.ς);Õ.ρ=
Math.Max(ˈ.Get(Ͼ,"priorityGlobalRefreshTicks").ToInt32(Õ.ρ),1);Õ.π=ˈ.Get(Ͼ,"TargetSlippedTicks").ToInt32(Õ.π);Õ.ο=ˈ.Get(Ͼ,
"TargetLostTicks").ToInt32(Õ.ο);Õ.γ=ˈ.Get(Ͼ,"RandomOffsetProbeInterval").ToInt32(Õ.γ);Õ.ξ=ˈ.Get(Ͼ,"RaycastExtensionDistance").ToDouble(Õ.
ξ);Õ.υ=ˈ.Get(Ͼ,"MinTargetSizeEngage").ToDouble(Õ.υ);Õ.ν=ˈ.Get(Ͼ,"MinTargetSizePriority").ToDouble(Õ.ν);Õ.λ=ˈ.Get(Ͼ,
"AutoMissileLaunch").ToBoolean(Õ.λ);Õ.κ=ˈ.Get(Ͼ,"MissileMinTargetSize").ToDouble(Õ.κ);Õ.ι=ˈ.Get(Ͼ,"MissileCountPerSize").ToDouble(Õ.ι);Õ.θ=
ˈ.Get(Ͼ,"MaxMissileLaunchDistance").ToDouble(Õ.θ);Õ.η=ˈ.Get(Ͼ,"MissileOffsetRadiusFactor").ToDouble(Õ.η);Õ.ζ=ˈ.Get(Ͼ,
"MissileOffsetProbability").ToDouble(Õ.ζ);Õ.δ=ˈ.Get(Ͼ,"MissileStaggerWaitTicks").ToInt32(Õ.δ);Õ.Ο=ˈ.Get(Ͼ,"MissileReassignIntervalTicks").ToInt32(
Õ.Ο);Õ.Έ=ˈ.Get(Ͼ,"MissilePBGridReloadTicks").ToInt32(Õ.Έ);Õ.Δ=ˈ.Get(Ͼ,"MissileTransmitDurationTicks").ToInt32(Õ.Δ);Õ.ͽ=ˈ.
Get(Ͼ,"MissileTransmitIntervalTicks").ToInt32(Õ.ͽ);Õ.ͼ=ˈ.Get(Ͼ,"MissileLaunchSpeedLimit").ToDouble(Õ.ͼ);Õ.ͻ=ˈ.Get(Ͼ,
"PDCFireDotLimit").ToDouble(Õ.ͻ);Õ.ͺ=ˈ.Get(Ͼ,"ConstantFireMode").ToBoolean(Õ.ͺ);Õ.ͷ=ˈ.Get(Ͼ,"RotorUseLimitSnap").ToBoolean(Õ.ͷ);Õ.Ͷ=ˈ.Get
(Ͼ,"RotorCtrlDeltaGain").ToSingle(Õ.Ͷ);Õ.Ͱ=ˈ.Get(Ͼ,"ReloadCheckTicks").ToInt32(Õ.Ͱ);Õ.ˮ=ˈ.Get(Ͼ,"ReloadedCooldownTicks").
ToInt32(Õ.ˮ);Õ.ˬ=ˈ.Get(Ͼ,"ReloadMaxAngle").ToDouble(Õ.ˬ);Õ.ˤ=ˈ.Get(Ͼ,"ReloadLockStateAngle").ToDouble(Õ.ˤ);Õ.ˣ=Math.Max(ˈ.Get(Ͼ
,"DisplaysRefreshInterval").ToInt32(Õ.ˣ),1);Õ.Ά=ˈ.Get(Ͼ,"AllyTrackLostTicks").ToInt32(Õ.Ά);Õ.ˢ=ˈ.Get(Ͼ,
"CheckSelfOcclusion").ToBoolean(Õ.ˢ);Õ.Ή=ˈ.Get(Ͼ,"UseAABBOcclusionChecker").ToBoolean(Õ.Ή);Õ.Ξ=ˈ.Get(Ͼ,"OcclusionExtraClearance").ToSingle(Õ
.Ξ);Õ.Μ=ˈ.Get(Ͼ,"OcclusionCheckerInitBlockLimit").ToInt32(Õ.Μ);}}}}void ˇ(){ˆ();ʿ();ʽ();ʦ();ʬ();}void ˆ(){List&lt;
IMyLargeTurretBase&gt;ˁ;Я(out ˁ,ϼ);List&lt;İ&gt;ˀ=new List&lt;İ&gt;(ˁ.Count);foreach(IMyLargeTurretBase Ƅ in ˁ){ˀ.Add(new İ(Ƅ));}ɼ=ˀ;ɻ=new Р&lt;İ&gt;(ˀ,ё);ɺ=
new Р&lt;İ&gt;(ˀ,з);}void ʿ(){List&lt;IMyCameraBlock&gt;ˉ;Я(out ˉ,ϻ,(Ť)=&gt;{Ť.EnableRaycast=true;Ť.Enabled=true;return true;});if(ˉ==null
){ˉ=new List&lt;IMyCameraBlock&gt;(0);}ʊ=ˉ;ʓ.Æ=ʊ;}void ʽ(){Dictionary&lt;long,ý&gt;ʼ=null;{if(ʃ!=null&amp;&amp;ʃ.Count&gt;0){ʼ=new Dictionary&lt;
long,ý&gt;();foreach(ý ʧ in ʃ){if(!ʼ.ContainsKey(ʧ.ā.EntityId)){ʼ.Add(ʧ.ā.EntityId,ʧ);}}}}HashSet&lt;IMyTerminalBlock&gt;ʻ=new
HashSet&lt;IMyTerminalBlock&gt;();List&lt;IMyMotorStator&gt;ʺ=new List&lt;IMyMotorStator&gt;();Dictionary&lt;long,List&lt;IMyMotorStator&gt;&gt;ʹ=new
Dictionary&lt;long,List&lt;IMyMotorStator&gt;&gt;();Dictionary&lt;long,List&lt;IMyUserControllableGun&gt;&gt;ʸ=new Dictionary&lt;long,List&lt;
IMyUserControllableGun&gt;&gt;();Dictionary&lt;long,IMyTerminalBlock&gt;ʾ=new Dictionary&lt;long,IMyTerminalBlock&gt;();Dictionary&lt;long,IMyShipController&gt;ˋ=new
Dictionary&lt;long,IMyShipController&gt;();Dictionary&lt;long,IMyShipConnector&gt;ˏ=new Dictionary&lt;long,IMyShipConnector&gt;();List&lt;IMyBlockGroup
&gt;ʣ=new List&lt;IMyBlockGroup&gt;();List&lt;ý&gt;ˑ=new List&lt;ý&gt;();GridTerminalSystem.GetBlockGroups(ʣ,(Ť)=&gt;{return Ť.Name.IndexOf(Ϸ,
StringComparison.OrdinalIgnoreCase)&gt;-1;});foreach(IMyBlockGroup v in ʣ){v.GetBlocksOfType(ʇ,(ɫ)=&gt;{if(Me.IsSameConstructAs(ɫ)&amp;&amp;ʻ.Add(ɫ)){
if(ɫ is IMyMotorStator){if(е(ɫ,ϵ)){ʺ.Add(ɫ as IMyMotorStator);}else if(е(ɫ,ϴ)){if(ʹ.ContainsKey(ɫ.CubeGrid.EntityId)){ʹ[ɫ.
CubeGrid.EntityId].Add(ɫ as IMyMotorStator);}else{List&lt;IMyMotorStator&gt;ː=new List&lt;IMyMotorStator&gt;();ː.Add(ɫ as IMyMotorStator);ʹ.
Add(ɫ.CubeGrid.EntityId,ː);}}}else if(ɫ is IMyUserControllableGun){if(ʸ.ContainsKey(ɫ.CubeGrid.EntityId)){ʸ[ɫ.CubeGrid.
EntityId].Add(ɫ as IMyUserControllableGun);}else{List&lt;IMyUserControllableGun&gt;ː=new List&lt;IMyUserControllableGun&gt;();ː.Add(ɫ as
IMyUserControllableGun);ʸ.Add(ɫ.CubeGrid.EntityId,ː);}}else if(ɫ is IMyShipController){if(!ˋ.ContainsKey(ɫ.CubeGrid.EntityId)){ˋ.Add(ɫ.
CubeGrid.EntityId,ɫ as IMyShipController);}}else if(ɫ is IMyShipConnector){if(!ˏ.ContainsKey(ɫ.CubeGrid.EntityId)){if(е(ɫ,ϲ)){ˏ.
Add(ɫ.CubeGrid.EntityId,ɫ as IMyShipConnector);}}}else if(е(ɫ,ϳ)){if(!ʾ.ContainsKey(ɫ.CubeGrid.EntityId)){ʾ.Add(ɫ.CubeGrid.
EntityId,ɫ);}}}return false;});}foreach(IMyMotorStator Ü in ʺ){if(Ü.TopGrid!=null){List&lt;IMyMotorStator&gt;ˠ;if(ʹ.TryGetValue(Ü.
TopGrid.EntityId,out ˠ)){List&lt;IMyMotorStator&gt;Ò=new List&lt;IMyMotorStator&gt;();List&lt;List&lt;IMyUserControllableGun&gt;&gt;Ø=new List&lt;List&lt;
IMyUserControllableGun&gt;&gt;();List&lt;IMyTerminalBlock&gt;á=new List&lt;IMyTerminalBlock&gt;();Ɓ ˎ=null;IMyTerminalBlock ˍ=null;foreach(IMyMotorStator Û in ˠ
){if(Û.TopGrid!=null){List&lt;IMyUserControllableGun&gt;ˌ;if(ʸ.TryGetValue(Û.TopGrid.EntityId,out ˌ)){IMyTerminalBlock Ú;if(ʾ.
ContainsKey(Û.TopGrid.EntityId)){Ú=ʾ[Û.TopGrid.EntityId];}else{Ú=ˌ[0];}Ò.Add(Û);Ø.Add(ˌ);á.Add(Ú);if(ˎ==null&amp;&amp;ˌ.Count&gt;0){ˎ=ҡ(ˌ[0]);
}if(ˍ==null){ˍ=Ú;}}}}if(Ò.Count&gt;0){IMyShipController Ù;if(ˋ.ContainsKey(Ò[0].TopGrid.EntityId)){Ù=ˋ[Ò[0].TopGrid.EntityId
];}else{Ù=ʄ;}if(ˎ==null){ˎ=ʅ.χ;}ý ʧ=new ý(Ü.CustomName,Ü,Ò,á,Ù,Ø,ˎ,Õ);IMyShipConnector ʫ=null;if(ˏ.ContainsKey(Ò[0].
CubeGrid.EntityId)){ʫ=ˏ[Ò[0].CubeGrid.EntityId];}IMyShipConnector ʱ=null;if(ˏ.ContainsKey(ˍ.CubeGrid.EntityId)){ʱ=ˏ[ˍ.CubeGrid.
EntityId];}if(ʫ!=null&amp;&amp;ʱ!=null){ʧ.ď=ʫ;ʧ.Ď=ʱ;}if(ʼ!=null&amp;&amp;ʼ.ContainsKey(ʧ.ā.EntityId)){ʧ.ũ(ʼ[ʧ.ā.EntityId]);}else{ʧ.ȶ(true);ʧ.ȡ()
;}ˑ.Add(ʧ);}}}}if(Õ.β==0){ɿ=Math.Max((int)Math.Ceiling(Õ.Ϊ*ˑ.Count/(double)ό),1);ɾ=0;}else{if(Õ.β&lt;1f&amp;&amp;Õ.β&gt;0){ɿ=1;ɾ=Math.
Min((int)Math.Floor(1f/Õ.β),ό);}else{ɿ=Math.Max(Math.Min(ˑ.Count,(int)Math.Ceiling(Õ.β)),1);ɾ=0;}}double ʩ=(double)ˑ.Count/
ɿ;double ʨ=ʩ/Math.Max(Õ.ς,1);foreach(ý ʧ in ˑ){ʧ.Ē=ʨ;ʧ.ĉ=MathHelperD.ToRadians(Õ.ˬ);ʧ.Ĉ=MathHelperD.ToRadians(Õ.ˤ);ʧ.ē=ʍ;
}ʃ=ˑ;ʈ=new Р&lt;ý&gt;(ˑ,ж);ʂ=new Р&lt;ý&gt;(ˑ,ж);}void ʦ(){List&lt;Ř&gt;ʥ=new List&lt;Ř&gt;();Dictionary&lt;string,Ř&gt;ʤ=new Dictionary&lt;string,Ř&gt;();
List&lt;IMyBlockGroup&gt;ʣ=new List&lt;IMyBlockGroup&gt;();GridTerminalSystem.GetBlockGroups(ʣ,(Ť)=&gt;{return е(Ť,Ϻ);});foreach(
IMyBlockGroup v in ʣ){v.GetBlocksOfType(ʇ,(Ť)=&gt;{int Ŏ=1;int ʢ=Ť.CustomName.IndexOf(Ѓ,StringComparison.OrdinalIgnoreCase);if(ʢ&gt;-1){if(
ʢ+ϱ.Length&lt;Ť.CustomName.Length){if(int.TryParse($"{Ť.CustomName[ʢ+Ѓ.Length]}",out Ŏ)){if(Ŏ&lt;1||Ŏ&gt;9){Ŏ=1;}}else{Ŏ=1;}}}
string ʡ=Ѓ+Ŏ;Ř ʟ;if(ʤ.ContainsKey(ʡ)){ʟ=ʤ[ʡ];}else{if(ʑ!=null&amp;&amp;ʑ.ContainsKey(ʡ)){ʟ=ʑ[ʡ];}else{ʟ=new Ř(ʡ,null,null,null);ʟ.ŏ=Õ.
έ;}ʥ.Add(ʟ);ʤ.Add(ʡ,ʟ);}if(е(Ť,ϱ)){ʟ.Ŗ=Ť;ʟ.ŕ=Ť as IMyLargeTurretBase;}else if(е(Ť,ϸ)){ʟ.œ=Ť;}else if(е(Ť,ϰ)){
IMyTextSurfaceProvider ʠ=Ť as IMyTextSurfaceProvider;if(ʠ!=null){try{ʟ.Ŕ=ʠ.GetSurface(0);}catch(Exception){}}}else{if(ʟ.Ŗ==null){ʟ.Ŗ=Ť;ʟ.ŕ=Ť
as IMyLargeTurretBase;}if(ʟ.Ŕ==null&amp;&amp;Ť is IMyTextSurfaceProvider){try{ʟ.Ŕ=((IMyTextSurfaceProvider)Ť).GetSurface(0);}catch
(Exception){}}}return false;});break;}int ʪ=0;while(ʪ&lt;ʥ.Count){Ř ʟ=ʥ[ʪ];if(ʟ.Ŗ==null){if(ʪ+1==ʥ.Count){ʥ.RemoveAt(ʪ);}
else{ʥ[ʪ]=ʥ[ʥ.Count-1];ʥ.RemoveAt(ʥ.Count-1);}ʤ.Remove(ʟ.ŗ);}ʪ++;}ʒ=ʥ;ʑ=ʤ;}void ʬ(){Я(out ʀ,Ϲ);}void ʶ(){if(ʒ?.Count&gt;0&amp;&amp;Õ.ά&gt;
0&amp;&amp;(ǲ%Õ.ά&lt;ʒ.Count)){Ř ʟ=ʒ[ǲ%Õ.ά];if(ҥ(ʟ.Ŗ)&amp;&amp;ʟ.Œ){Vector3D ƣ=ʟ.Ŋ();Vector3D s=ʟ.Ŗ.WorldMatrix.Translation+(ƣ*ʟ.ŏ);
MyDetectedEntityInfo ū;ʓ.Ë(ref s,out ū,Õ.ξ);if(!ū.IsEmpty()&amp;&amp;Ҥ(ref ū)){ʟ.ř=ū.EntityId;ʟ.Ħ=(ū.HitPosition.HasValue?ū.HitPosition.Value:ū.
Position);ʟ.ġ=ū.Velocity;ʟ.ĥ=ǲ;Vector3D ʴ=ʟ.Ħ-ʟ.Ŗ.WorldMatrix.Translation;ʴ=Vector3D.ProjectOnVector(ref ʴ,ref ƣ)+ʟ.Ŗ.
WorldMatrix.Translation;ʟ.ĵ=Vector3D.TransformNormal(ʴ-ū.Position,MatrixD.Transpose(ū.Orientation));ĳ Ǝ;ʛ.ћ(ref ū,ǲ,out Ǝ);if(Ǝ!=
null){ʟ.Œ=false;if(ҥ(ʟ.œ)){if(ʟ.œ is IMySoundBlock){((IMySoundBlock)ʟ.œ).Play();}else if(ʟ.œ is IMyTimerBlock){((
IMyTimerBlock)ʟ.œ).Trigger();}else{IMyFunctionalBlock ʳ=ʟ.œ as IMyFunctionalBlock;if(ʳ!=null&amp;&amp;!ʳ.Enabled){ʳ.Enabled=true;}}}Ǝ.Ę=ʟ.Ę;Ǝ
.Ī=ʟ.Ī;foreach(P ʵ in ɧ){if(ʵ.Ñ==ʟ){ʵ.Ñ=Ǝ;ʵ.ï=ǲ+Õ.Δ;}}}}}else if(ʟ.ř&gt;0&amp;&amp;!ʛ.Ѥ(ʟ.ř)){ʟ.ř=-1;}}}void ʲ(){ɻ.Ы();int ʰ=(Õ.Ϋ==0
?ɼ.Count:Õ.Ϋ);for(int r=0;r&lt;ʰ;r++){İ ʯ=ɻ.Ч();if(ʯ!=null){MyDetectedEntityInfo ū=ʯ.į.GetTargetedEntity();if(ʛ.ћ(ref ū,ǲ)){
ʗ=ǲ+Õ.σ;}ʁ=ǲ;if(Õ.Ψ){if(ǲ&gt;=ʯ.Ĭ){ʯ.į.ResetTargetingToDefault();ʯ.į.EnableIdleRotation=false;ʯ.Ĭ=ǲ+Õ.Χ;}}}else{break;}}if(Õ
.Φ){if(ǲ&lt;=ʁ+Õ.Σ){ɺ.Ы();ʰ=(Õ.Τ==0?ɼ.Count:Õ.Τ);for(int r=0;r&lt;ʰ;r++){İ ʯ=ɺ.Ч();if(ʯ!=null){if(ǲ&gt;=ʯ.ļ){ʯ.Ƃ();ʯ.ļ=ǲ+Õ.Υ;}}
else{break;}}}}}void ʮ(){ĳ Ǝ=ʛ.я();if(Ǝ!=null){if(ǲ-Ǝ.Ģ&gt;=Õ.φ){if(ʓ.Æ.Count&gt;0){double ʭ=(Ǝ.Ę==0?Õ.μ:Ǝ.Ę);if((Ǝ.Ħ-Me.
WorldMatrix.Translation).LengthSquared()&lt;=ʭ*ʭ){Vector3D s=Ǝ.Ħ+(Ǝ.ġ*(ǲ-Ǝ.ĥ)*ύ);MyDetectedEntityInfo ū;if(ʓ.Ë(ref s,out ū,Õ.ξ)){ѿ(ref
ū);}ʝ=ǲ+Õ.τ;}}ʛ.ѥ(Ǝ.ħ,ǲ);Ѹ(Ǝ);}}if(Õ.Ρ&amp;&amp;Õ.γ&gt;0&amp;&amp;ǲ%Õ.γ==0){ĳ ь=ʛ.ю();if(ь!=null&amp;&amp;ь.ĝ!=null&amp;&amp;ь.Ě&gt;=Õ.Ω*Õ.Ω){double ʭ=(ь.Ę==0?
Õ.μ:ь.Ę);Vector3D Ѿ=ь.Ĥ+(ь.ġ*(ǲ-ь.ĥ)*ύ);if((Ѿ-Me.WorldMatrix.Translation).LengthSquared()&lt;=ʭ*ʭ){double ѽ=Math.Sqrt(ь.Ě)*
0.5*ϙ;Vector3D Ѽ=new Vector3D(((ī.NextDouble()*2)-1)*ѽ,((ī.NextDouble()*2)-1)*ѽ,((ī.NextDouble()*2)-1)*ѽ);Vector3D s=Ѿ+
Vector3D.TransformNormal(Ѽ,ь.ĝ.Value);MyDetectedEntityInfo ū;if(ʓ.Ë(ref s,out ū,Õ.ξ)){ѿ(ref ū);}ʝ=ǲ+Õ.τ;}}}}void ѿ(ref
MyDetectedEntityInfo ū){if(ū.IsEmpty()){return;}if(Ҥ(ref ū)){ĳ Ǝ;ʛ.ћ(ref ū,ǲ,out Ǝ);if(Ǝ==null){return;}Ǝ.Ě=ū.BoundingBox.Extents.
LengthSquared();if(Ǝ.Ĩ==0){Ǝ.Ĩ=Ǝ.Ě;}if(Õ.Ρ&amp;&amp;Ǝ.Ě&gt;=Õ.Ω*Õ.Ω&amp;&amp;ū.HitPosition.HasValue){if(Ǝ.ķ==null){Ǝ.ķ=new List&lt;ĵ&gt;(ϕ);}Vector3D ѻ=
Vector3D.TransformNormal(ū.HitPosition.Value-ū.Position,MatrixD.Transpose(ū.Orientation));if(Ǝ.ķ.Count&gt;=ϕ){int Ѻ=0;double ѹ=
double.MaxValue;for(int r=0;r&lt;Ǝ.ķ.Count;r++){if(ǲ&gt;Ǝ.ķ[r].ĺ+ϓ){Ѻ=r;ѹ=0;break;}double Ð=(Ǝ.ķ[r].Ĵ-ѻ).LengthSquared();if(Ð&lt;ѹ){Ѻ=r
;ѹ=Ð;}}if(ѹ&lt;double.MaxValue){Ǝ.ķ[Ѻ]=new ĵ(ref ѻ,ǲ);}}else{Ǝ.ķ.Add(new ĵ(ref ѻ,ǲ));}}}else{ʛ.щ(ū.EntityId);ʛ.ѐ(ū.EntityId)
;}}void Ѹ(ĳ Ǝ){Vector3D ȇ=Me.GetPosition();Vector3D Ҁ=(ʄ!=null?ʄ.GetShipVelocities().LinearVelocity:Vector3D.Zero);if(Ǝ.Ě
&gt;0&amp;&amp;Ǝ.Ě&lt;Õ.υ*Õ.υ){ʛ.щ(Ǝ.ħ);ʛ.ѐ(Ǝ.ħ);}else if(ǲ-Ǝ.ĥ&lt;=Õ.ο){double Ѭ=ҁ(ɣ,ȇ,Ҁ,Ǝ);Ѭ+=ī.NextDouble()*0.000000000001;Ǝ.ę=Ѭ;ʘ=Math
.Max(Ѭ,ʘ);if(ʄ==null||ʄ.GetShipVelocities().LinearVelocity.LengthSquared()&lt;=Õ.ͼ*Õ.ͼ){if(Ǝ.Ě&gt;=Õ.κ*Õ.κ){if(Ǝ.ĸ==0||ǲ&gt;=Ǝ.ĸ+Õ
.Ο){Ǝ.ĸ=ǲ;double ґ=(Ǝ.Ī==0?Õ.θ:Ǝ.Ī);if((Ǝ.Ħ-Me.WorldMatrix.Translation).LengthSquared()&lt;=ґ*ґ){if(Ǝ.Ě==0){Ǝ.Ĺ=1;}else{Ǝ.Ĺ=
(int)Math.Ceiling(Math.Sqrt(Ǝ.Ě)/Math.Max(Õ.ι,1));}}}}}}else{ʛ.ѐ(Ǝ.ħ);}}void Ґ(){ǫ ѕ=ʚ.ŀ();if(ѕ!=null){if(ǲ-ѕ.Ğ&gt;Õ.Ά){ʚ.Ŀ(
ѕ.ħ);}}}void ҏ(){switch(ʕ){case 0:if(ǲ&gt;=ʗ){if(ʛ.Ņ()&gt;0){ʗ=ǲ+Õ.ς;ʙ.Clear();ʘ=0;List&lt;ĳ&gt;Ҏ=ʛ.ч();foreach(ĳ Ǝ in Ҏ){if(!ʙ.
ContainsKey(Ǝ.ę)){ʙ.Add(Ǝ.ę,Ǝ);ʘ=Math.Max(Ǝ.ę,ʘ);}}ʈ.Ǥ();ʈ.Ы();ʕ=1;}}break;case 1:ý ʧ=ʈ.Ч();if(ʧ!=null){if(ʧ!=null&amp;&amp;!ʧ.Đ){double Ғ=
0;ĳ ҍ=null;double Ҍ=0;ĳ ҋ=null;foreach(KeyValuePair&lt;double,ĳ&gt;Ҋ in ʙ){if(ʧ.ȋ(Ҋ.Value,ǲ)){Ғ=Ҋ.Key;ҍ=Ҋ.Value;if(ʧ.ø&gt;0){if(ҍ.
Ě&gt;=ʧ.ø*ʧ.ø){Ҍ=Ғ;ҋ=ҍ;break;}}else{break;}}}if(ҋ!=null){Ғ=Ҍ;ҍ=ҋ;}if(ҍ!=null){ʧ.đ=ҍ;if(ʙ.ContainsKey(Ғ)){ʙ.Remove(Ғ);ʘ+=1000
;Ғ=ʘ;ʙ.Add(Ғ,ҍ);}}else{if(ʧ.đ!=null&amp;&amp;!ʛ.Ѥ(ʧ.đ.ħ)){ʧ.đ=null;}ʧ.ȶ();ʧ.ȡ();}}}else{ʕ=0;}break;}}double ҁ(double ɣ,Vector3D ȇ
,Vector3D Ҁ,ĳ Ǝ){Vector3D Ѷ=Ǝ.Ħ-ȇ;double Ѭ=Ѷ.Length();PlaneD Ѳ;if(Ҁ.LengthSquared()&lt;0.01){Ѳ=new PlaneD(ȇ,Vector3D.
Normalize(Ѷ));}else{Ѳ=new PlaneD(ȇ,ȇ+Ҁ,ȇ+Ѷ.Cross(Ҁ));}Vector3D Ѫ=Ѳ.Intersection(ref Ǝ.Ħ,ref Ǝ.ġ);Vector3D ѩ=Ѫ-Ǝ.Ħ;if(ѩ.Dot(ref Ǝ.
ġ)&lt;0){Ѭ+=Õ.ε*4;}else{double Ɖ=Math.Sqrt(ѩ.LengthSquared()/Math.Max(Ǝ.ġ.LengthSquared(),0.000000000000001));if((Ѫ-(ȇ+(Ҁ*Ɖ)
)).LengthSquared()&gt;ɣ*ɣ){Ѭ+=Õ.ε*2;}else if(Ǝ.Ě&lt;=0){Ѭ+=Õ.ε;}else if(Ǝ.Ě&lt;Õ.ν*Õ.ν){Ѭ+=Õ.ε*3;}}if(Ǝ.Ĩ&gt;Ǝ.Ě){Ѭ+=Õ.ε*Math.Max(Ǝ.Ļ
,1);}else{Ѭ+=Õ.ε*Math.Min(Ǝ.Ļ,1);}return Ѭ;}void Ѩ(){if(ɾ&gt;0){if(ǲ&gt;=ɽ){ɽ=ǲ+ɾ;}else{return;}}ʂ.Ы();int ʰ=(ɿ==0?ʃ.Count:ɿ);
for(int r=0;r&lt;ʰ;r++){ý ʧ=ʂ.Ч();if(ʧ!=null){if(ǲ&gt;=ʧ.č+Õ.Ͱ){ʧ.č=ǲ;if(ʧ.ȏ()){if(ǲ&gt;=ʧ.ċ+Õ.ˮ){ʧ.ċ=ǲ;ʧ.ȍ(ǲ);}}}if(ʧ.Ċ==ý.Ǖ.ƹ){if(
ʧ.đ!=null){ʧ.ɍ(ʧ.đ,ǲ);}}else{ʧ.ȍ(ǲ);}}else{break;}}}void ѧ(){List&lt;IMyBlockGroup&gt;ʣ=new List&lt;IMyBlockGroup&gt;();ʜ=new List&lt;
IMyProgrammableBlock&gt;();GridTerminalSystem.GetBlockGroups(ʣ,(Ť)=&gt;{return е(Ť,Ќ);});foreach(IMyBlockGroup v in ʣ){v.GetBlocksOfType(ʜ,(Ť)=&gt;{
if(Ť.Enabled&amp;&amp;Me.IsSameConstructAs(Ť)){return л.и(Ť);}else{return false;}});break;}ʣ.Clear();ʔ=new List&lt;
IMyProgrammableBlock&gt;();GridTerminalSystem.GetBlockGroups(ʣ,(Ť)=&gt;{return е(Ť,Ж);});foreach(IMyBlockGroup v in ʣ){v.GetBlocksOfType(ʔ,(Ť)=&gt;{
if(Ť.Enabled&amp;&amp;Me.IsSameConstructAs(Ť)){return л.и(Ť);}else{return false;}});break;}}void ѫ(){while(ʋ.HasPendingMessage){
object Ѧ=ʋ.AcceptMessage().Data;if(Ѧ is MyTuple&lt;long,long,Vector3D,Vector3D,double&gt;){MyTuple&lt;long,long,Vector3D,Vector3D,
double&gt;ѭ=(MyTuple&lt;long,long,Vector3D,Vector3D,double&gt;)Ѧ;if(!ʛ.Ѥ(ѭ.Item2)||ǲ-ʛ.ѡ(ѭ.Item2).Ğ&gt;=Õ.π){ǧ њ=new ǧ();њ.ħ=ѭ.Item2;њ.Ħ=ѭ
.Item3;њ.ġ=ѭ.Item4;ʛ.ћ(њ,ǲ-1,false);if(ѭ.Item5&gt;0){ĳ Ǝ=ʛ.ѡ(њ.ħ);if(Ǝ!=null&amp;&amp;Ǝ.Ě==0){Ǝ.Ě=ѭ.Item5;}}}}}while(ɸ.
HasPendingMessage){object Ѧ=ɸ.AcceptMessage().Data;if(Ѧ is MyTuple&lt;long,long,Vector3D,Vector3D,double&gt;){MyTuple&lt;long,Vector3D,Vector3D,
double,int,long&gt;Ѵ=(MyTuple&lt;long,Vector3D,Vector3D,double,int,long&gt;)Ѧ;if(!ʛ.Ѥ(Ѵ.Item1)||ǲ-ʛ.ѡ(Ѵ.Item1).Ğ&gt;=Õ.π){if((Ѵ.Item5&amp;(int
)н.м)==0){ǧ њ=new ǧ();њ.ħ=Ѵ.Item1;њ.Ħ=Ѵ.Item2;њ.ġ=Ѵ.Item3;ʛ.ћ(њ,ǲ-1,false);if(Ѵ.Item4&gt;0){ĳ Ǝ=ʛ.ѡ(њ.ħ);if(Ǝ!=null){if(Ǝ.Ě
==0){Ǝ.Ě=Ѵ.Item4;}Ǝ.ě=(Ѵ.Item5&amp;(int)н.ě)&gt;0;}}}else{ǫ ѕ=new ǫ(Ѵ.Item1);ѕ.Ħ=Ѵ.Item2;ѕ.ġ=Ѵ.Item3;ѕ.ǥ=Ѵ.Item4;ѕ.ě=(Ѵ.Item5&amp;(
int)н.ě)&gt;0;ʚ.є(ѕ,ǲ);}}}}}void ѳ(string ѵ){string[]в=ѵ.Split(ϛ,StringSplitOptions.RemoveEmptyEntries);if(в.Length==0)return;
string ѱ=в[0].Trim().ToUpper();Ř ʟ=null;if(ѱ.StartsWith(Ѓ,StringComparison.OrdinalIgnoreCase)){int Ŏ;if(ѱ.Length==Ѓ.Length){Ŏ=
1;}else if(!int.TryParse(ѱ.Substring(Ѓ.Length).Trim(),out Ŏ)){Ŏ=0;}if(Ŏ&gt;=1&amp;&amp;ʑ.ContainsKey(Ѓ+Ŏ)){ʟ=ʑ[Ѓ+Ŏ];}if(ʟ!=null&amp;&amp;в.
Length&lt;=1){return;}}if(ʟ!=null){ѱ=в[1].Trim().ToUpper();}else if(ʒ?.Count&gt;0){ʟ=ʒ[0];}switch(ѱ){case Г:bool Ѱ=г(в,Б);List&lt;
IMyProgrammableBlock&gt;ѯ=(Ѱ?ʔ:ʜ);if(г(в,В)){ĳ ь=ʛ.ю();if(ь!=null){Һ(ѯ,ь,ʟ?.Ő??с.ф,ʟ?.ĵ,Ѱ);}}else if(ʟ!=null){bool Ѯ=г(в,А);if(ʟ.ř&gt;0&amp;&amp;ʛ.Ѥ(ʟ.ř))
{ĳ ѷ=ʛ.ѡ(ʟ.ř);if(ѷ!=null){if(Ѯ){ѷ.Ī=Math.Max(ʟ.ŏ,Õ.θ);}Һ(ѯ,ѷ,ʟ.Ő,ʟ.ĵ,Ѱ);}}else{ʟ.Œ=true;ʟ.ř=-1;ʟ.ĵ=Vector3D.Zero;ʟ.Ħ=ʟ.Ŗ.
WorldMatrix.Translation+(ʟ.Ŋ()*ʟ.ŏ);ʟ.Ę=Math.Max(ʟ.ŏ,Õ.μ);ʟ.Ī=(Ѯ?Math.Max(ʟ.ŏ,Õ.θ):0);Һ(ѯ,ʟ,ʟ.Ő,ʟ.ĵ,Ѱ);}}break;case Џ:if(ʟ!=null){
if(ʟ.Œ&amp;&amp;ʟ.ř==-1){ʟ.Œ=false;ʟ.ĵ=Vector3D.Zero;}else{bool Ѯ=г(в,А);ʟ.Œ=true;ʟ.ř=-1;ʟ.ĵ=Vector3D.Zero;ʟ.Ħ=ʟ.Ŗ.WorldMatrix.
Translation+(ʟ.Ŋ()*ʟ.ŏ);ʟ.Ę=Math.Max(ʟ.ŏ,Õ.μ);ʟ.Ī=(Ѯ?Math.Max(ʟ.ŏ,Õ.θ):0);}}break;case Ў:if(ʟ!=null){ʟ.Œ=false;ʟ.ř=-1;ʟ.ĵ=Vector3D.
Zero;}break;case Е:if(ʟ!=null&amp;&amp;в.Length&gt;=3){switch(в[2].ToUpper().Trim()){case Ѝ:ʟ.Ő=с.ф;break;case Ћ:ʟ.Ő=с.р;break;case Њ:ʟ
.Ő=с.о;break;case Љ:if(в.Length&gt;=4){double ǭ;if(double.TryParse(в[3].Trim(),out ǭ)){ʟ.ŏ=Math.Min(Math.Max(ǭ,1000),100000)
;;}}break;}}break;case І:if(ʟ!=null){ʟ.Ő=(с)(((int)ʟ.Ő+1)%3);}break;case Ј:if(ʟ!=null){ʟ.ŏ=Math.Min(Math.Max(ʟ.ŏ+1000,
1000),100000);;}break;case Ї:if(ʟ!=null){ʟ.ŏ=Math.Min(Math.Max(ʟ.ŏ-1000,1000),100000);;}break;case Ѕ:ɟ=!ɟ;if(!ɟ){foreach(ý ʧ
in ʃ){ʧ.đ=null;ʧ.ȶ(true);ʧ.ȡ();}}break;case Є:ɟ=true;break;case ϯ:ɟ=false;foreach(ý ʧ in ʃ){ʧ.đ=null;ʧ.ȶ(true);ʧ.ȡ();}
break;case Ϯ:Õ.λ=!Õ.λ;break;case ψ:Õ.λ=true;break;case Ϙ:Õ.λ=false;break;case ϗ:ɝ=!ɝ;break;}}void Ҹ(){if(Õ.λ){if(ʛ.Ņ()&gt;0){ĳ Ǝ
=ʛ.я();if(Ǝ!=null){if(Ǝ.Ĺ&gt;0&amp;&amp;ʛ.Ѥ(Ǝ.ħ)){Ǝ.Ĺ--;bool Ҷ=(Ǝ.Ĺ&lt;=0?true:(ī.NextDouble()&lt;=Õ.ζ));ҷ(Ǝ,Ҷ);ʎ=ǲ+Õ.δ;}}}}}void ҷ(ĳ Ǝ,
bool Ҷ=false,bool ҹ=false){IMyProgrammableBlock ҵ=null;double Ǩ=double.MaxValue;foreach(IMyProgrammableBlock ɫ in ʜ){if(ɫ.
IsWorking&amp;&amp;GridTerminalSystem.GetBlockWithId(ɫ.EntityId)!=null){double ҳ=(ɫ.WorldMatrix.Translation-Ǝ.Ħ).LengthSquared();if(ҳ&lt;Ǩ){
Ǩ=ҳ;ҵ=ɫ;}}}if(ҵ!=null&amp;&amp;!ҹ){P ʵ=new P();ʵ.m=ҩ();ʵ.Ñ=Ǝ;ʵ.ï=ǲ+Õ.Δ;ʵ.Ā=Ҷ;ɧ.Enqueue(ʵ);P Ҳ=new P();Ҳ.Ñ=Ǝ;Ҳ.ï=int.MaxValue;Ҳ.ÿ=
true;ɧ.Enqueue(Ҳ);MyTuple&lt;long,long,long,int,float&gt;ұ=new MyTuple&lt;long,long,long,int,float&gt;();ұ.Item1=Me.EntityId;ұ.Item2=ʵ.m
;ұ.Item3=Me.EntityId;ұ.Item4|=(int)у.т;ұ.Item5=(Ҷ?(float)(Math.Sqrt(Ǝ.Ě)*0.5*Õ.η):0f);bool Ұ=IGC.SendUnicastMessage(ҵ.
EntityId,"",ұ);if(!Ұ){MyIni Ҵ=new MyIni();if(ҵ.CustomData.Length&gt;0)Ҵ.TryParse(ҵ.CustomData);Ҵ.Set(Ͻ,"UniqueId",ұ.Item2);Ҵ.Set(Ͻ,
"GroupId",ұ.Item3);if(Ҷ){Ҵ.Set(Ͻ,"OffsetTargeting",ұ.Item4);Ҵ.Set(Ͻ,"RandomOffsetAmount",ұ.Item5);}ҵ.CustomData=Ҵ.ToString();ҵ.
TryRun("FIRE:"+Me.EntityId);}ʜ.Remove(ҵ);}}void Һ(List&lt;IMyProgrammableBlock&gt;ѯ,ĳ Ǝ,с ӂ=с.ф,Vector3D?ѻ=null,bool Ӂ=false,bool ҹ=
false){for(int r=0;r&lt;ѯ.Count;r++){IMyProgrammableBlock Ӏ=ѯ[r];if(Ӏ.IsWorking&amp;&amp;GridTerminalSystem.GetBlockWithId(Ӏ.EntityId)!=
null&amp;&amp;!ҹ){P ʵ=new P();ʵ.m=ҩ();ʵ.Ñ=Ǝ;ʵ.ï=ǲ+Õ.ή;if(Ӂ&amp;&amp;е(Ӏ,Д))ʵ.þ=Ӏ;ɧ.Enqueue(ʵ);MyIni Ҵ=null;MyTuple&lt;long,long,long,int,float&gt;
ұ=new MyTuple&lt;long,long,long,int,float&gt;();ұ.Item1=Me.EntityId;ұ.Item2=ʵ.m;ұ.Item3=Me.EntityId;switch(ӂ){case с.р:ұ.Item4
|=(int)у.т;Ҵ=new MyIni();if(Ӏ.CustomData.Length&gt;0)Ҵ.TryParse(Ӏ.CustomData);Ҵ.Set(Ͻ,"ProbeOffsetVector",ҧ(ѻ!=null?ѻ.Value:
Vector3D.Zero));Ӏ.CustomData=Ҵ.ToString();break;case с.о:ұ.Item4|=(int)у.т;ұ.Item5=(float)(Math.Sqrt(Ǝ.Ě)*0.5*Õ.η);break;default
:ұ.Item5=0f;break;}bool Ұ=IGC.SendUnicastMessage(Ӏ.EntityId,"",ұ);if(!Ұ){if(Ҵ==null){Ҵ=new MyIni();if(Ӏ.CustomData.Length
&gt;0)Ҵ.TryParse(Ӏ.CustomData);}Ҵ.Set(Ͻ,"UniqueId",ұ.Item2);Ҵ.Set(Ͻ,"GroupId",ұ.Item3);switch(ӂ){case с.р:Ҵ.Set(Ͻ,
"OffsetTargeting",ұ.Item4);Ҵ.Set(Ͻ,"ProbeOffsetVector",ҧ(ѻ!=null?ѻ.Value:Vector3D.Zero));break;case с.о:Ҵ.Set(Ͻ,"OffsetTargeting",ұ.Item4
);Ҵ.Set(Ͻ,"RandomOffsetAmount",ұ.Item5);break;}Ӏ.CustomData=Ҵ.ToString();Ӏ.TryRun("FIRE:"+Me.EntityId);}if(ѯ.Count==1){ѯ.
Clear();}else{ѯ[r]=ѯ[ѯ.Count-1];ѯ.RemoveAt(ѯ.Count-1);}break;}}}void ҿ(){ɥ=false;if(ɦ==0){Ҿ();if(!ɥ){һ();}ɦ=1;}else{һ();if(!ɥ
){Ҿ();}ɦ=0;}}void Ҿ(){while(ɧ.Count&gt;0){P Ƽ=ɧ.Dequeue();if(ǲ&lt;=Ƽ.ï){if(!(Ƽ.Ñ.ħ==-1||ʛ.Ѥ(Ƽ.Ñ.ħ))){break;}if(ǲ&gt;=Ƽ.Ă){if(Ƽ.þ==
null){MyTuple&lt;bool,long,long,long,Vector3D,Vector3D&gt;ҽ=new MyTuple&lt;bool,long,long,long,Vector3D,Vector3D&gt;();ҽ.Item1=Ƽ.ÿ;ҽ.
Item2=(Ƽ.ÿ?Me.EntityId:Ƽ.m);ҽ.Item3=0;ҽ.Item4=Ƽ.Ñ.ħ;ҽ.Item5=Ƽ.Ñ.Ħ+(Ƽ.Ñ.ġ*(ǲ-Ƽ.Ñ.ĥ+1)*ύ);ҽ.Item6=Ƽ.Ñ.ġ;IGC.
SendBroadcastMessage(Ƽ.ÿ?Ϛ:ϐ,ҽ);}else{Vector3D s=Ƽ.Ñ.Ħ+(Ƽ.Ñ.ġ*(ǲ-Ƽ.Ñ.ĥ+1)*ύ);MyIni Ҽ=new MyIni();Ҽ.Set(ϣ,"EntityId",Ƽ.Ñ.ħ);Ҽ.Set(ϣ,
"PositionX",s.X);Ҽ.Set(ϣ,"PositionY",s.Y);Ҽ.Set(ϣ,"PositionZ",s.Z);Ҽ.Set(ϣ,"VelocityX",Ƽ.Ñ.ġ.X);Ҽ.Set(ϣ,"VelocityY",Ƽ.Ñ.ġ.Y);Ҽ.Set(
ϣ,"VelocityZ",Ƽ.Ñ.ġ.Z);Ƽ.þ.TryRun(ϣ+Ҽ.ToString());}Ƽ.Ă=ǲ+Õ.ͽ;ɥ=true;}if(!Ƽ.ÿ){ɧ.Enqueue(Ƽ);}break;}}}void һ(){if(ǲ&gt;=ɢ&amp;&amp;ɯ.
Count==0){if(ʛ.Ņ()&gt;0){List&lt;ĳ&gt;Ҏ=ʛ.ч();Ҏ.Sort(ʉ);foreach(ĳ Ǝ in Ҏ){ɯ.Enqueue(Ǝ);}}ɢ=ǲ+Õ.ί;}while(ɯ.Count&gt;0){ĳ Ǝ=ɯ.Dequeue();if(
ʛ.ѣ(Ǝ.ħ,ǲ-Õ.ο)){MyTuple&lt;long,Vector3D,Vector3D,double,int,long&gt;Ѵ=new MyTuple&lt;long,Vector3D,Vector3D,double,int,long&gt;();Ѵ.
Item1=Ǝ.ħ;Ѵ.Item2=Ǝ.Ħ+(Ǝ.ġ*(ǲ-Ǝ.ĥ+1)*ύ);Ѵ.Item3=Ǝ.ġ;Ѵ.Item4=Ǝ.Ě;if(Ǝ.ě)Ѵ.Item5|=(int)н.ě;Ѵ.Item6=0;IGC.SendBroadcastMessage(ϊ
,Ѵ);ɥ=true;break;}}}void ҟ(){if(ǲ&gt;=ɡ){MyTuple&lt;long,Vector3D,Vector3D,double,int,long&gt;Ѵ=new MyTuple&lt;long,Vector3D,Vector3D
,double,int,long&gt;();Ѵ.Item1=Me.CubeGrid.EntityId;Ѵ.Item2=Me.CubeGrid.WorldAABB.Center;Ѵ.Item3=(ʄ!=null?ʄ.
GetShipVelocities().LinearVelocity:Vector3D.Zero);Ѵ.Item4=ɣ*ɣ*4;Ѵ.Item5|=(int)н.м;if(Me.CubeGrid.GridSizeEnum==MyCubeSize.Large)Ѵ.Item5|=
(int)н.ě;Ѵ.Item6=0;IGC.SendBroadcastMessage(ϊ,Ѵ);ɡ=ǲ+Õ.ί;}}void Ҟ(){foreach(Ř ʟ in ʒ){if(ʟ.Ŕ!=null){IMyTextSurface ҝ=ʟ.Ŕ;
Vector2 Ҝ;Vector2 Ҡ;if(ҝ.SurfaceSize.X==ҝ.SurfaceSize.Y){Ҝ=(ҝ.TextureSize-ҝ.SurfaceSize)*0.5f;Ҡ=new Vector2(ҝ.SurfaceSize.X)*
0.0009765625f;}else if(ҝ.SurfaceSize.X&gt;ҝ.SurfaceSize.Y){Ҝ=(ҝ.TextureSize-ҝ.SurfaceSize+new Vector2(ҝ.SurfaceSize.X-ҝ.SurfaceSize.Y,0f
))*0.5f;Ҡ=new Vector2(ҝ.SurfaceSize.Y)*0.0009765625f;}else{Ҝ=(ҝ.TextureSize-ҝ.SurfaceSize+new Vector2(0f,ҝ.SurfaceSize.Y-
ҝ.SurfaceSize.X))*0.5f;Ҡ=new Vector2(ҝ.SurfaceSize.Y)*0.0009765625f;}List&lt;MySprite&gt;қ=new List&lt;MySprite&gt;();қ.Add(new
MySprite(SpriteType.TEXTURE,"SquareSimple",ҝ.TextureSize*0.5f,null,Color.Black));Vector2 ҙ=Ҡ*new Vector2(1024f,100f);Vector2 Ҙ=
new Vector2(ҙ.X*0.5f,0f);Vector2 җ=ҙ*0.5f;Vector2 Җ=new Vector2(0f,ҙ.Y);Vector2 ҕ=new Vector2(0f,Ҡ.Y*20f);Vector2 Ҕ=Ҡ*new
Vector2(480f,100f);Vector2 ғ=new Vector2(Ҕ.X*0.5f,0f);Vector2 Қ=Ҕ*0.5f;Vector2 Ң=Ҡ*new Vector2(544f,0f);float Ҩ=ϫ*ҙ.Y;Vector2 ү
=Ҝ+ҕ;string ҭ;Color Ҭ;Color ҫ;қ.Add(new MySprite(SpriteType.TEXTURE,"SquareSimple",ү+җ,ҙ,ϩ));қ.Add(new MySprite(
SpriteType.TEXT,$"{Ͽ} v{Ѐ}",ү+Ҙ,null,Ϫ,"DEBUG",TextAlignment.CENTER,Ҩ));ү+=Җ;қ.Add(new MySprite(SpriteType.TEXTURE,"SquareSimple",
ү+җ,ҙ,ϧ));қ.Add(new MySprite(SpriteType.TEXT,$"Manual Targeter {ʟ.ŗ}",ү+Ҙ,null,Ϩ,"DEBUG",TextAlignment.CENTER,Ҩ));ү+=Җ+ҕ;
қ.Add(new MySprite(SpriteType.TEXT,"Status",ү+Ҙ,null,Ϧ,"DEBUG",TextAlignment.CENTER,Ҩ));ү+=Җ;if(ʟ.ř&gt;0){ҭ="Target Locked";
Ҭ=ϡ;ҫ=Ϡ;}else if(ʟ.Œ){ҭ="Seeking";Ҭ=Ϥ;ҫ=Ϣ;}else{ҭ="No Target";Ҭ=ϥ;ҫ=Ϭ;}қ.Add(new MySprite(SpriteType.TEXTURE,
"SquareSimple",ү+җ,ҙ,ҫ));қ.Add(new MySprite(SpriteType.TEXT,ҭ,ү+Ҙ,null,Ҭ,"DEBUG",TextAlignment.CENTER,Ҩ));ү+=Җ+ҕ;қ.Add(new MySprite(
SpriteType.TEXT,"Current Target",ү+Ҙ,null,Ϧ,"DEBUG",TextAlignment.CENTER,Ҩ));ү+=Җ;if(ʟ.ř&gt;0){ҭ=Ү(ʟ.ř);Ҭ=ϟ;ҫ=Ϟ;}else{ҭ="-";Ҭ=ϥ;ҫ=Ϭ;}
қ.Add(new MySprite(SpriteType.TEXTURE,"SquareSimple",ү+җ,ҙ,ҫ));қ.Add(new MySprite(SpriteType.TEXT,ҭ,ү+Ҙ,null,Ҭ,"DEBUG",
TextAlignment.CENTER,Ҩ));ү+=Җ+ҕ;қ.Add(new MySprite(SpriteType.TEXT,"Range",ү+ғ,null,Ϧ,"DEBUG",TextAlignment.CENTER,Ҩ));қ.Add(new
MySprite(SpriteType.TEXT,"Hit Point",ү+Ң+ғ,null,Ϧ,"DEBUG",TextAlignment.CENTER,Ҩ));ү+=Җ;ҭ=$"{Math.Round(ʟ.ŏ*0.001,1):n1}km";Ҭ=ϝ;
ҫ=Ϝ;қ.Add(new MySprite(SpriteType.TEXTURE,"SquareSimple",ү+Қ,Ҕ,ҫ));қ.Add(new MySprite(SpriteType.TEXT,ҭ,ү+ғ,null,Ҭ,
"DEBUG",TextAlignment.CENTER,Ҩ));ҭ=ʟ.ĩ();Ҭ=ϝ;ҫ=Ϝ;қ.Add(new MySprite(SpriteType.TEXTURE,"SquareSimple",ү+Ң+Қ,Ҕ,ҫ));қ.Add(new
MySprite(SpriteType.TEXT,ҭ,ү+Ң+ғ,null,Ҭ,"DEBUG",TextAlignment.CENTER,Ҩ));ҝ.ContentType=ContentType.SCRIPT;ҝ.Script="";
MySpriteDrawFrame Ҫ=ҝ.DrawFrame();Ҫ.AddRange(қ);Ҫ.Dispose();}}}void Ŕ(){ǚ.Clear();ɜ=(ɜ+1)%8;ǚ.AppendLine(
$"====[ Diamond Dome System ]==={ˡ[ɜ]}");ǚ.AppendLine($"&lt;&lt;Version {Ѐ}&gt;&gt;\n");ǚ.AppendLine($"PDCs : {ʃ.Count(Ť=&gt;{return!Ť.Đ;})}");ǚ.AppendLine(
$"Designators : {ɼ.Count}");ǚ.AppendLine($"Raycast Cameras : {ʊ.Count}");ǚ.AppendLine($"Guided Missiles : {ʜ.Count}");ǚ.AppendLine(
$"Guided Torpedos : {ʔ.Count}");if(ɟ){ǚ.AppendLine($"Tracked Targets : {ʛ.Ņ()}");}else{ǚ.AppendLine("\n---&lt; DD Disabled &gt;---");}ǚ.AppendLine(
"\n---- Runtime Performance ---\n");ɞ.ǡ(ǚ);if(ɝ){ǚ.AppendLine("\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; Debug Mode &lt;&lt;&lt;&lt;&lt;&lt;&lt;");ǚ.AppendLine("\n---- Debug Performance ---\n");ɞ.Ǜ(ǚ);}Echo(
ǚ.ToString());}long ҩ(){ī.NextBytes(ʐ);Buffer.BlockCopy(ʐ,0,ʏ,0,8);return ʏ[0];}string Ү(long Ķ){return
$"T{Ķ%100000:00000}";}string ҧ(Vector3D Ҧ){return Convert.ToBase64String(BitConverter.GetBytes((float)Ҧ.X))+Convert.ToBase64String(
BitConverter.GetBytes((float)Ҧ.Y))+Convert.ToBase64String(BitConverter.GetBytes((float)Ҧ.Z));}bool ҥ(IMyTerminalBlock ɫ){return(ɫ!=
null&amp;&amp;ɫ.IsWorking);}bool Ҥ(ref MyDetectedEntityInfo ū){if(ū.Type==MyDetectedEntityType.LargeGrid||ū.Type==
MyDetectedEntityType.SmallGrid){return ң(ref ū);}return false;}bool ң(ref MyDetectedEntityInfo ū){return!(ū.Relationship==
MyRelationsBetweenPlayerAndBlock.Owner||ū.Relationship==MyRelationsBetweenPlayerAndBlock.FactionShare);}Ɓ ҡ(IMyUserControllableGun ȭ){if(ȭ.
BlockDefinition.SubtypeId.Contains("Gatling")){return ʅ.χ;}else if(ȭ.BlockDefinition.SubtypeId.Contains("Missile")||ȭ.BlockDefinition.
SubtypeId.Contains("Rocket")){return ʅ.Ђ;}return ʅ.χ;}bool ё(İ ʯ){return ʯ.į.HasTarget;}bool з(İ ʯ){return ʯ.į.IsWorking;}bool ж(
ý ʧ){return!ʧ.Đ;}bool е(IMyTerminalBlock ɫ,string д){return(ɫ.CustomName.IndexOf(д,StringComparison.OrdinalIgnoreCase)&gt;-1
);}bool е(IMyBlockGroup v,string д){return(v.Name.IndexOf(д,StringComparison.OrdinalIgnoreCase)&gt;-1);}bool г(string[]в,
string б){foreach(string а in в){if(а.Trim().Equals(б,StringComparison.OrdinalIgnoreCase)){return true;}}return false;}void Я&lt;
З&gt;(out List&lt;З&gt;Ɵ,string п,Func&lt;З,bool&gt;х=null)where З:class{Ɵ=null;List&lt;IMyBlockGroup&gt;ʣ=new List&lt;IMyBlockGroup&gt;();
GridTerminalSystem.GetBlockGroups(ʣ,(Ť)=&gt;{return Ť.Name.IndexOf(п,StringComparison.OrdinalIgnoreCase)&gt;-1;});foreach(IMyBlockGroup v in ʣ){
List&lt;З&gt;ɭ=new List&lt;З&gt;();v.GetBlocksOfType(ɭ,х);if(Ɵ==null){Ɵ=ɭ;}else{Ɵ.AddList(ɭ);}}}public enum у{т=1}public enum с{ф=0,р=1,
о=2}public enum н{м=1,ě=2}static class л{const string к="AGMSAVE";const string й="[NOTREADY]";public static bool и(
IMyProgrammableBlock Э){if(Э!=null&amp;&amp;Э.CustomName.IndexOf(й,StringComparison.OrdinalIgnoreCase)&gt;-1){Vector3I[]И={-Base6Directions.
GetIntVector(Э.Orientation.Left),Base6Directions.GetIntVector(Э.Orientation.Up),-Base6Directions.GetIntVector(Э.Orientation.Forward)
};MyIni ˈ=new MyIni();if(ˈ.TryParse(Э.CustomData)&amp;&amp;ˈ.ContainsSection(к)){char[]О={','};if(!П("DetachBlock",Э,ˈ,О,ref И,
true))return false;if(!П("DampenerBlock",Э,ˈ,О,ref И,true))return false;if(!П("ForwardBlock",Э,ˈ,О,ref И,false))return false
;if(!П("RemoteControl",Э,ˈ,О,ref И,false))return false;if(!П("Gyroscopes",Э,ˈ,О,ref И,false))return false;if(!П(
"Thrusters",Э,ˈ,О,ref И,false))return false;if(!П("PowerBlocks",Э,ˈ,О,ref И,true))return false;if(!П("RaycastCameras",Э,ˈ,О,ref И,
true))return false;}Э.CustomName=Э.CustomName.Replace(й,"").Trim();}return true;}static bool П(string ű,IMyTerminalBlock Й,
MyIni ˈ,char[]О,ref Vector3I[]И,bool Н){string[]М=ˈ.Get(к,ű).ToString().Split(О,StringSplitOptions.RemoveEmptyEntries);return
((М.Length&gt;0||Н)&amp;&amp;Л(М,Й,ref И));}static bool Л(string[]К,IMyTerminalBlock Й,ref Vector3I[]И){foreach(string Ơ in К){if(Ơ
!=null&amp;&amp;Ơ.Length==12){Vector3I Ɵ=new Vector3I();Ɵ.X=BitConverter.ToInt16(Convert.FromBase64String(Ơ.Substring(0,4)),0);Ɵ.Y
=BitConverter.ToInt16(Convert.FromBase64String(Ơ.Substring(4,4)),0);Ɵ.Z=BitConverter.ToInt16(Convert.FromBase64String(Ơ.
Substring(8,4)),0);Ɵ=(Ɵ.X*И[0])+(Ɵ.Y*И[1])+(Ɵ.Z*И[2]);Ɵ+=Й.Position;if(!Й.CubeGrid.CubeExists(Ɵ)){return false;}}else{return
false;}}return true;}}class Р&lt;З&gt;{private List&lt;З&gt;С;private Func&lt;З,bool&gt;Ь;private int Ъ;private int Ƽ;private bool Щ;public Р(
List&lt;З&gt;Ф,Func&lt;З,bool&gt;Ш=null){С=Ф;Ь=Ш;Ъ=Ƽ=0;Щ=false;if(С==null)С=new List&lt;З&gt;();}public void Ǥ(){Ъ=Ƽ=0;}public void Ы(){Ъ=Ƽ;Щ=
(С.Count&gt;0);}public З Ч(){if(Ъ&gt;=С.Count)Ъ=0;if(Ƽ&gt;=С.Count){Ƽ=0;Щ=(С.Count&gt;0);}З Ɵ=default(З);while(Щ){З Ц=С[Ƽ++];if(Ƽ&gt;=С.
Count)Ƽ=0;if(Ƽ==Ъ)Щ=false;if(Ь==null||Ь(Ц)){Ɵ=Ц;break;}}return Ɵ;}public void Х(List&lt;З&gt;Ф){С=Ф;if(С==null)С=new List&lt;З&gt;();if(Ъ
&gt;=С.Count)Ъ=0;if(Ƽ&gt;=С.Count)Ƽ=0;Щ=false;}}class У:IComparer&lt;ĳ&gt;{public int Compare(ĳ ő,ĳ Ś){if(ő==null)return(Ś==null?0:1);
else if(Ś==null)return-1;else return(ő.ĥ&lt;Ś.ĥ?-1:(ő.ĥ&gt;Ś.ĥ?1:(ő.ħ&lt;Ś.ħ?-1:(ő.ħ&gt;Ś.ħ?1:0))));}}class Ю{Dictionary&lt;long,Ľ&gt;Т;
SortedSet&lt;Ľ&gt;ц;HashSet&lt;long&gt;џ;public Ю(){Т=new Dictionary&lt;long,Ľ&gt;();ц=new SortedSet&lt;Ľ&gt;(new і());џ=new HashSet&lt;long&gt;();}public bool
ћ(ref MyDetectedEntityInfo ū,int ǲ){ĳ ў;return ћ(ref ū,ǲ,out ў);}public bool ћ(ref MyDetectedEntityInfo ū,int ǲ,out ĳ Ǝ){
if(џ.Contains(ū.EntityId)){Ǝ=null;return false;}if(Т.ContainsKey(ū.EntityId)){Ľ ł=Т[ū.EntityId];Ǝ=ł.Ñ;int ѝ=Math.Max(ǲ-Ǝ.ĥ
,1);double ќ=1.0/ѝ;Ǝ.ğ=Ǝ.ġ;Ǝ.Ğ=Ǝ.ĥ;if(ū.HitPosition!=null){Ǝ.Ħ=ū.HitPosition.Value;Ǝ.Ĥ=ū.Position;Ǝ.ģ=ǲ;Ǝ.ĝ=ū.Orientation
;Ǝ.Ĝ=ǲ;}else{Ǝ.Ħ=ū.Position;}Ǝ.ě=(ū.Type==MyDetectedEntityType.LargeGrid);Ǝ.ġ=ū.Velocity;Ǝ.ĥ=ǲ;Vector3D Ÿ=(Ǝ.ġ-Ǝ.ğ)*ќ*ό;
if(Ÿ.LengthSquared()&gt;1){Ǝ.Ġ=(Ǝ.Ġ*0.25)+(Ÿ*0.75);}else{Ǝ.Ġ=Vector3D.Zero;}ł.ы=ǲ;return false;}else{Ǝ=new ĳ(ū.EntityId);Ǝ.Ħ=
ū.Position;Ǝ.ġ=Ǝ.ğ=ū.Velocity;Ǝ.ĥ=Ǝ.Ğ=ǲ;Ľ ł=new Ľ();ł.ħ=Ǝ.ħ;ł.Ñ=Ǝ;ł.ы=ǲ;Т.Add(ū.EntityId,ł);ц.Add(ł);return true;}}public
bool ћ(ǧ њ,int ǲ,bool Ѡ=true){if(џ.Contains(њ.ħ)){return false;}if(Т.ContainsKey(њ.ħ)){Ľ ł=Т[њ.ħ];ĳ Ǝ=ł.Ñ;int ѝ=Math.Max(ǲ-Ǝ
.ĥ,1);double ќ=1.0/ѝ;Ǝ.ğ=Ǝ.ġ;Ǝ.Ğ=Ǝ.ĥ;Ǝ.Ħ=њ.Ħ;Ǝ.ġ=њ.ġ;Ǝ.ĥ=ǲ;Vector3D Ÿ=(Ǝ.ġ-Ǝ.ğ)*ќ*ό;if(Ÿ.LengthSquared()&gt;1){Ǝ.Ġ=(Ǝ.Ġ*0.25
)+(Ÿ*0.75);}else{Ǝ.Ġ=Vector3D.Zero;}if(Ѡ){ł.ы=ǲ;}return false;}else{ĳ Ǝ=new ĳ(њ.ħ);Ǝ.Ħ=њ.Ħ;Ǝ.ġ=Ǝ.ğ=њ.ġ;Ǝ.ĥ=Ǝ.Ğ=ǲ;Ľ ł=new
Ľ();ł.ħ=Ǝ.ħ;ł.Ñ=Ǝ;if(Ѡ){ł.ы=ǲ;}Т.Add(њ.ħ,ł);ц.Add(ł);return true;}}public void ѥ(long Ķ,int ǲ){if(Т.ContainsKey(Ķ)){Ľ ł=Т
[Ķ];ł.Ñ.Ģ=ǲ;ц.Remove(ł);ł.Ģ=ǲ;ц.Add(ł);}}public bool Ѥ(long Ķ){return Т.ContainsKey(Ķ);}public bool ѣ(long Ķ,int Ѣ){if(Т.
ContainsKey(Ķ)){Ľ ł=Т[Ķ];return(ł.ы&gt;=Ѣ);}else{return false;}}public int Ņ(){return Т.Count;}public ĳ ѡ(long Ķ){Ľ ł;if(Т.TryGetValue
(Ķ,out ł))return ł.Ñ;else return null;}public List&lt;ĳ&gt;ч(){List&lt;ĳ&gt;Ň=new List&lt;ĳ&gt;(Т.Count);foreach(Ľ ł in ц){Ň.Add(ł.Ñ);}
return Ň;}public ĳ я(){if(ц.Count==0)return null;else return ц.Min.Ñ;}public ĳ ю(){double э=double.MinValue;ĳ ь=null;foreach(Ľ
ł in ц){if(ł.Ñ.Ě&gt;э){э=ł.Ñ.Ě;ь=ł.Ñ;}}return ь;}public void ѐ(long Ķ){if(Т.ContainsKey(Ķ)){ц.Remove(Т[Ķ]);Т.Remove(Ķ);}}
public void ъ(){Т.Clear();ц.Clear();}public void щ(long Ķ){џ.Add(Ķ);}public void ш(){џ.Clear();}class Ľ{public long ħ;public
int Ģ;public int ы;public ĳ Ñ;}class і:IComparer&lt;Ľ&gt;{public int Compare(Ľ ő,Ľ Ś){if(ő==null)return(Ś==null?0:1);else if(Ś==
null)return-1;else return(ő.Ģ&lt;Ś.Ģ?-1:(ő.Ģ&gt;Ś.Ģ?1:(ő.ħ&lt;Ś.ħ?-1:(ő.ħ&gt;Ś.ħ?1:0))));}}}class љ{Dictionary&lt;long,Ľ&gt;ј;SortedSet&lt;Ľ&gt;ї;
public љ(){ј=new Dictionary&lt;long,Ľ&gt;();ї=new SortedSet&lt;Ľ&gt;(new ŉ());}public bool є(ref MyDetectedEntityInfo ū,int ǲ){if(ј.
ContainsKey(ū.EntityId)){Ľ ł=ј[ū.EntityId];ł.Ł.Ħ=ū.Position;ł.Ł.ġ=ū.Velocity;ł.Ł.ě=(ū.Type==MyDetectedEntityType.LargeGrid);ł.Ł.ǥ=ū
.BoundingBox.Extents.LengthSquared();ł.Ł.Ğ=ǲ;ї.Remove(ł);ł.ĺ=ǲ;ї.Add(ł);return false;}else{ǫ ѕ=new ǫ(ū.EntityId);ѕ.Ħ=ū.
Position;ѕ.ġ=ū.Velocity;ѕ.Ğ=ǲ;Ľ ł=new Ľ();ł.ħ=ѕ.ħ;ł.Ł=ѕ;ł.ĺ=ǲ;ј.Add(ū.EntityId,ł);ї.Add(ł);return true;}}public bool є(ǫ ѓ,int ǲ
){if(ј.ContainsKey(ѓ.ħ)){Ľ ł=ј[ѓ.ħ];ł.Ł.Ħ=ѓ.Ħ;ł.Ł.ġ=ѓ.ġ;ł.Ł.Ğ=ǲ;ї.Remove(ł);ł.ĺ=ǲ;ї.Add(ł);return false;}else{ѓ.Ğ=ǲ;Ľ ł=
new Ľ();ł.ħ=ѓ.ħ;ł.Ł=ѓ;ł.ĺ=ǲ;ј.Add(ѓ.ħ,ł);ї.Add(ł);return true;}}public void ђ(long Ķ,int ǲ){if(ј.ContainsKey(Ķ)){Ľ ł=ј[Ķ];ї
.Remove(ł);ł.ĺ=ǲ;ї.Add(ł);}}public bool ņ(long Ķ){return ј.ContainsKey(Ķ);}public int Ņ(){return ј.Count;}public ǫ ń(long
Ķ){Ľ ł;if(ј.TryGetValue(Ķ,out ł))return ł.Ł;else return null;}public List&lt;ǫ&gt;Ń(){List&lt;ǫ&gt;Ň=new List&lt;ǫ&gt;(ј.Count);foreach(Ľ ł
in ї){Ň.Add(ł.Ł);}return Ň;}public ǫ ŀ(){if(ї.Count==0)return null;else return ї.Min.Ł;}public void Ŀ(long Ķ){if(ј.
ContainsKey(Ķ)){ї.Remove(ј[Ķ]);ј.Remove(Ķ);}}public void ľ(){ј.Clear();ї.Clear();}class Ľ{public long ħ;public int ĺ;public ǫ Ł;}
class ŉ:IComparer&lt;Ľ&gt;{public int Compare(Ľ ő,Ľ Ś){if(ő==null)return(Ś==null?0:1);else if(Ś==null)return-1;else return(ő.ĺ&lt;Ś.ĺ?
-1:(ő.ĺ&gt;Ś.ĺ?1:(ő.ħ&lt;Ś.ħ?-1:(ő.ħ&gt;Ś.ħ?1:0))));}}}class Ř:ĳ{public string ŗ;public IMyTerminalBlock Ŗ;public
IMyLargeTurretBase ŕ;public IMyTextSurface Ŕ;public IMyTerminalBlock œ;public bool Œ=false;public long ř=-1;public Vector3D?ĵ;public с Ő=с
.ф;public double ŏ;public Ř(string Ŏ,IMyTerminalBlock ō,IMyTextSurface Ō,IMyTerminalBlock ŋ):base(-1){ŗ=Ŏ;Ŗ=ō;ŕ=ō as
IMyLargeTurretBase;Ŕ=Ō;œ=ŋ;}public Vector3D Ŋ(){if(Ŗ==null){return Vector3D.Zero;}if(ŕ!=null){Vector3D q;Vector3D.
CreateFromAzimuthAndElevation(ŕ.Azimuth,ŕ.Elevation,out q);return Vector3D.TransformNormal(q,ŕ.WorldMatrix);}else{return Ŗ.WorldMatrix.Forward;}}
public string ĩ(){switch(Ő){case с.ф:return"Center";case с.р:return"Offset";case с.о:return"Random";}return"-";}}class ĳ{
public long ħ;public Vector3D Ħ;public int ĥ;public Vector3D Ĥ;public int ģ;public int Ģ;public Vector3D ġ;public Vector3D Ġ;
public Vector3D ğ;public int Ğ;public MatrixD?ĝ;public int Ĝ;public bool ě;public double Ě;public double ę;public double Ĩ;
public double Ę;public double Ī;public double Ļ;public int Ĺ;public int ĸ;public List&lt;ĵ&gt;ķ;public ĳ(long Ķ){ħ=Ķ;}}struct ĵ{
public Vector3D Ĵ;public int ĺ;public ĵ(ref Vector3D Ĳ,int ı){Ĵ=Ĳ;ĺ=ı;}}class İ{public IMyLargeTurretBase į;public float Į;
public ITerminalProperty&lt;float&gt;ĭ;public int Ĭ=0;public int ļ=0;Random ī=new Random();public İ(IMyLargeTurretBase Ƅ){į=Ƅ;Į=Ƅ.
GetMaximum&lt;float&gt;("Range");ĭ=Ƅ.GetProperty("Range").As&lt;float&gt;();}public void Ƃ(){ĭ.SetValue(į,Į-0.01f);ĭ.SetValue(į,Į);}}class Ɓ{
public double ƀ=400;public double Ġ=0;public double ſ=400;public double ž=850;public double Ž=0;public double ƃ=0;public bool
ż=false;public bool ź=false;public Ɓ(double Ź,double Ÿ,double ŷ,double Ŷ,double ŵ,double Ż,bool ƅ,bool Ɗ){ƀ=Ź;Ġ=Ÿ;ſ=ŷ;ž=Ŷ
;Ž=ŵ;ƃ=Ż;ż=ƅ;ź=Ɗ;}public Vector3D Ɣ(ref Vector3D ƒ,ref Vector3D Ƒ,ref Vector3D Ɛ,ref Vector3D Ə,ĳ Ǝ){Vector3D ƍ=(ż?Ƒ:Ƒ-Ə)
;Vector3D ƌ=ƒ-Ɛ;double Ɠ=(Ġ==0?0:(ſ-ƀ)/Ġ);double Ƌ=(0.5*Ġ*Ɠ*Ɠ)+(ƀ*Ɠ)-(ſ*Ɠ);double ť=(ſ*ſ)-ƍ.LengthSquared();double Ť=2*((
Ƌ*ſ)-ƍ.Dot(ƌ));double ţ=(Ƌ*Ƌ)-ƌ.LengthSquared();double Ɖ=Ŧ(ť,Ť,ţ);if(double.IsNaN(Ɖ)||Ɖ&lt;0){return new Vector3D(double.NaN
);}Vector3D ƈ;if(Ǝ.Ġ.LengthSquared()&gt;0.1){ƈ=ƒ+(ƍ*Ɖ)+(0.5*Ǝ.Ġ*Ɖ*Ɖ);}else{ƈ=ƒ+(ƍ*Ɖ);}if(ż&amp;&amp;ſ&gt;0){int Ţ=(int)Math.Ceiling(Ɖ*
60);Vector3D Ƈ;Vector3D Ɔ;Vector3D Ŵ;Vector3D ų;Ƈ=Vector3D.Normalize(ƈ-Ɛ);Ɔ=(Ƈ*Ġ)/60;Ŵ=Ɛ;ų=Ə+(Ƈ*ƀ);for(int r=0;r&lt;Ţ;r++){ų
+=Ɔ;double ŧ=ų.Length();if(ŧ&gt;ſ){ų=ų/ŧ*ſ;}Ŵ+=(ų/60);if((r+1)%60==0){if(Vector3D.Distance(Ɛ,Ŵ)&gt;ž){return ƈ;}}}return ƈ+ƈ-Ŵ;}
else{return ƈ;}}public double Ŧ(double ť,double Ť,double ţ){if(ť==0){return-(ţ/Ť);}double Ţ=(Ť*Ť)-(4*ť*ţ);if(Ţ&lt;0){return
Double.NaN;}Ţ=Math.Sqrt(Ţ);double š=(-Ť+Ţ)/(2*ť);double Ũ=(-Ť-Ţ)/(2*ť);return(š&gt;0?(Ũ&gt;0?(š&lt;Ũ?š:Ũ):š):Ũ);}}class Š{float ş;
double Ş;bool ŝ;List&lt;IMyCameraBlock&gt;Ŝ;public List&lt;IMyCameraBlock&gt;Æ{get{return Ŝ;}set{foreach(IMyCameraBlock n in value){n.
Enabled=true;n.EnableRaycast=true;}Ŝ=value;ů();}}List&lt;Ç&gt;ś;public Š(List&lt;IMyCameraBlock&gt;Ū){if(Ū.Count&gt;0){ş=Ū[0].RaycastConeLimit
;if(ş==0f||ş==180f)Ş=double.NaN;else Ş=Math.Tan(MathHelper.ToRadians(90-ş));ŝ=double.IsNaN(Ş)||double.IsInfinity(Ş);if(ŝ)
Ş=1;}else{ş=45;Ş=1;ŝ=false;}Æ=Ū;MyMath.InitializeFastSin();}private void ů(){if(ş&lt;=0||ş&gt;=180){ś=new List&lt;Ç&gt;();return;}
Dictionary&lt;string,Ç&gt;Ų=new Dictionary&lt;string,Ç&gt;();foreach(IMyCameraBlock n in Ŝ){string ű=n.CubeGrid.EntityId.ToString()+"-"+((int)
n.Orientation.Forward).ToString();Ç Ű;if(Ų.ContainsKey(ű)){Ű=Ų[ű];}else{Ű=new Ç();Ű.Æ=new List&lt;IMyCameraBlock&gt;();Ű.Ä=Ş;Ű.
Ã=ŝ;Ų[ű]=Ű;}Ű.Æ.Add(n);}ś=Ų.Values.ToList();foreach(Ç Ű in ś){Ű.Â=Ű.Æ[0].CubeGrid;int g=int.MaxValue,f=int.MinValue,e=int
.MaxValue,d=int.MinValue,Z=int.MaxValue,Y=int.MinValue;foreach(IMyCameraBlock n in Ű.Æ){g=Math.Min(g,n.Position.X);f=Math
.Max(f,n.Position.X);e=Math.Min(e,n.Position.Y);d=Math.Max(d,n.Position.Y);Z=Math.Min(Z,n.Position.Z);Y=Math.Max(Y,n.
Position.Z);}Base6Directions.Direction Ů=Ű.Â.WorldMatrix.GetClosestDirection(Ű.Æ[0].WorldMatrix.Up);Base6Directions.Direction ŭ=
Ű.Â.WorldMatrix.GetClosestDirection(Ű.Æ[0].WorldMatrix.Left);Base6Directions.Direction Ŭ=Ű.Â.WorldMatrix.
GetClosestDirection(Ű.Æ[0].WorldMatrix.Forward);Ű.K=Ç.A(Ů);Ű.J=Ç.A(ŭ);Ű.I=Ç.A(Ŭ);Ű.l=Ç.j(Ů,g,f,e,d,Z,Y);Ű.M=Ç.j(Base6Directions.
GetOppositeDirection(Ů),g,f,e,d,Z,Y);Ű.X=Ç.j(ŭ,g,f,e,d,Z,Y);Ű.L=Ç.j(Base6Directions.GetOppositeDirection(ŭ),g,f,e,d,Z,Y);}}public bool Ë(ref
Vector3D s,out MyDetectedEntityInfo ū,double ė=0){IMyCameraBlock n=µ(ref s);if(n!=null){if(ė==0){ū=Ë(n,ref s);}else{Vector3D O=s
-n.WorldMatrix.Translation;Vector3D º=s+((ė/Math.Max(O.Length(),0.000000000000001))*O);ū=Ë(n,ref º);}return true;}else{ū=
default(MyDetectedEntityInfo);return false;}}IMyCameraBlock µ(ref Vector3D s){foreach(Ç ª in ś){if(ª.V(ref s)){return w(ª,ref s
);}}return null;}IMyCameraBlock w(Ç v,ref Vector3D s){bool À=true;for(int r=0;r&lt;v.Æ.Count;r++){if(v.Å&gt;=v.Æ.Count){v.Å=0;}
IMyCameraBlock n=v.Æ[v.Å++];if(n.IsWorking){if(o(n,ref s)){return n;}else if(À){À=false;if(!v.V(ref s)){break;}}}}return null;}bool o(
IMyCameraBlock n,ref Vector3D U){Vector3D S=(ŝ?Vector3D.Zero:n.WorldMatrix.Forward);Vector3D R=n.WorldMatrix.Left;Vector3D Q=n.
WorldMatrix.Up;Vector3D q=U-n.WorldMatrix.Translation;if(Ş&gt;=0){return(n.AvailableScanRange*n.AvailableScanRange&gt;=q.LengthSquared())
&amp;&amp;q.Dot(S+R)&gt;=0&amp;&amp;q.Dot(S-R)&gt;=0&amp;&amp;q.Dot(S+Q)&gt;=0&amp;&amp;q.Dot(S-Q)&gt;=0;}else{return(n.AvailableScanRange*n.AvailableScanRange&gt;=q.
LengthSquared())&amp;&amp;(q.Dot(S+R)&gt;=0||q.Dot(S-R)&gt;=0||q.Dot(S+Q)&gt;=0||q.Dot(S-Q)&gt;=0);}}void Á(IMyCameraBlock n,ref Vector3D U,out double Ð,
out double Ï,out double Î){Vector3D Í=U-n.WorldMatrix.Translation;Í=Vector3D.TransformNormal(Í,MatrixD.Transpose(n.
WorldMatrix));Vector3D Ì=Vector3D.Normalize(new Vector3D(Í.X,0,Í.Z));Ð=Í.Normalize();Î=MathHelper.ToDegrees(Math.Acos(MathHelper.
Clamp(Ì.Dot(Vector3D.Forward),-1,1))*Math.Sign(Í.X));Ï=MathHelper.ToDegrees(Math.Acos(MathHelper.Clamp(Ì.Dot(Í),-1,1))*Math.
Sign(Í.Y));}MyDetectedEntityInfo Ë(IMyCameraBlock n,ref Vector3D U){double Ê,É,È;Á(n,ref U,out Ê,out É,out È);return n.
Raycast(Ê,(float)É,(float)È);}public class Ç{public List&lt;IMyCameraBlock&gt;Æ;public int Å;public double Ä;public bool Ã;public
IMyCubeGrid Â;public Vector3I l;public Vector3I M;public Vector3I X;public Vector3I L;public Func&lt;IMyCubeGrid,Vector3D&gt;K;public
Func&lt;IMyCubeGrid,Vector3D&gt;J;public Func&lt;IMyCubeGrid,Vector3D&gt;I;public static Vector3D H(IMyCubeGrid C){return C.WorldMatrix.
Up;}public static Vector3D G(IMyCubeGrid C){return C.WorldMatrix.Down;}public static Vector3D F(IMyCubeGrid C){return C.
WorldMatrix.Left;}public static Vector3D E(IMyCubeGrid C){return C.WorldMatrix.Right;}public static Vector3D D(IMyCubeGrid C){
return C.WorldMatrix.Forward;}public static Vector3D B(IMyCubeGrid C){return C.WorldMatrix.Backward;}public static Func&lt;
IMyCubeGrid,Vector3D&gt;A(Base6Directions.Direction N){switch(N){case Base6Directions.Direction.Up:return H;case Base6Directions.
Direction.Down:return G;case Base6Directions.Direction.Left:return F;case Base6Directions.Direction.Right:return E;case
Base6Directions.Direction.Forward:return D;case Base6Directions.Direction.Backward:return B;default:return D;}}public static Vector3I j
(Base6Directions.Direction N,int g,int f,int e,int d,int Z,int Y){switch(N){case Base6Directions.Direction.Up:return new
Vector3I((g+f)/2,d,(Z+Y)/2);case Base6Directions.Direction.Down:return new Vector3I((g+f)/2,e,(Z+Y)/2);case Base6Directions.
Direction.Left:return new Vector3I(g,(e+d)/2,(Z+Y)/2);case Base6Directions.Direction.Right:return new Vector3I(f,(e+d)/2,(Z+Y)/2)
;case Base6Directions.Direction.Forward:return new Vector3I((g+f)/2,(e+d)/2,Z);case Base6Directions.Direction.Backward:
return new Vector3I((g+f)/2,(e+d)/2,Y);default:return new Vector3I((g+f)/2,(e+d)/2,Z);}}Vector3D h(ref Vector3D U,ref Vector3I
W){return U-Â.GridIntegerToWorld(W);}public bool V(ref Vector3D U){Vector3D S=(Ã?Vector3D.Zero:I(Â));Vector3D R=Ä*J(Â);
Vector3D Q=Ä*K(Â);if(Ä&gt;=0){return(h(ref U,ref L).Dot(S+R)&gt;=0&amp;&amp;h(ref U,ref X).Dot(S-R)&gt;=0&amp;&amp;h(ref U,ref M).Dot(S+Q)&gt;=0&amp;&amp;h(ref U,
ref l).Dot(S-Q)&gt;=0);}else{return(h(ref U,ref L).Dot(S+R)&gt;=0||h(ref U,ref X).Dot(S-R)&gt;=0||h(ref U,ref M).Dot(S+Q)&gt;=0||h(ref
U,ref l).Dot(S-Q)&gt;=0);}}}}class P{public long m;public ĳ Ñ;public int ï;public int Ă;public bool Ā;public bool ÿ;public
IMyProgrammableBlock þ;}class ý{public α ü;public MyIni û;public string ú;public IMyMotorStator ā;public double ù;public double ö;public
double õ;public bool ô;public double ó;public Ǧ ò;public Ƀ[]ñ;public Ɓ ð;public double ø;public float ă;public
IMyShipController Č;public ITerminalProperty&lt;bool&gt;Ė;public ITerminalAction Ĕ;public Ʋ ē;public double Ē;public ĳ đ;public bool Đ;public
IMyShipConnector ď;public IMyShipConnector Ď;public int ĕ;public int č;public int ċ;public Ǖ Ċ;public double ĉ;public double Ĉ;long ć;
Vector3D Ć;double ą=Math.Tan(MathHelperD.ToRadians(ϔ));long Ą;int î;Vector3D à;Vector3D è;double ß;double Þ;double Ý;public ý(
string Ó,IMyMotorStator Ü,IMyMotorStator Û,IMyTerminalBlock Ú,IMyShipController Ù,List&lt;IMyUserControllableGun&gt;Ø,Ɓ Ö,α Õ,Ʋ Ô=
null):this(Ó,Ü,new List&lt;IMyMotorStator&gt;(new IMyMotorStator[]{Û}),new List&lt;IMyTerminalBlock&gt;(new IMyTerminalBlock[]{Ú}),Ù,new
List&lt;List&lt;IMyUserControllableGun&gt;&gt;(){Ø},Ö,Õ,Ô){}public ý(string Ó,IMyMotorStator Ü,List&lt;IMyMotorStator&gt;Ò,List&lt;
IMyTerminalBlock&gt;á,IMyShipController Ù,List&lt;List&lt;IMyUserControllableGun&gt;&gt;Ø,Ɓ Ö,α Õ,Ʋ Ô=null){ü=Õ;ú=Ó;Č=Ù;ð=Ö;ă=MathHelper.
RPMToRadiansPerSecond*(ü.ͷ?ü.ͱ:ü.ͳ);ē=Ô;û=new MyIni();if(û.TryParse(Ü.CustomData)){if(û.ContainsSection(Ͼ)){double ì=û.Get(Ͼ,
"WeaponInitialSpeed").ToDouble(0);double ë=û.Get(Ͼ,"WeaponAcceleration").ToDouble(0);double ê=û.Get(Ͼ,"WeaponMaxSpeed").ToDouble(0);double í
=û.Get(Ͼ,"WeaponMaxRange").ToDouble(0);double é=û.Get(Ͼ,"WeaponSpawnOffset").ToDouble(0);double ç=û.Get(Ͼ,
"WeaponReloadTime").ToDouble(0);bool æ=û.Get(Ͼ,"WeaponIsCappedSpeed").ToBoolean(false);bool å=û.Get(Ͼ,"WeaponUseSalvo").ToBoolean(false);ø
=û.Get(Ͼ,"TurretPrioritySize").ToDouble(0);if(í&gt;0&amp;&amp;(ì&gt;0||ë&gt;0)){ì=MathHelper.Clamp(ì,0,1000000000);ë=MathHelper.Clamp(ë,0,
1000000000);ê=MathHelper.Clamp(ê,0,1000000000);if(ê==0)ê=1000000000;í=MathHelper.Clamp(í,0,1000000000);ð=new Ɓ(ì,ë,ê,í,é,ç,æ,å);}}
}else{ø=0;}if(Ø.Count&gt;0&amp;&amp;Ø[0].Count&gt;0){Ė=Ø[0][0].GetProperty("Shoot").As&lt;bool&gt;();Ĕ=Ø[0][0].GetActionWithName("ShootOnce")
;}ā=Ü;Ʌ(ā,out ö,out õ);ô=(ö&gt;double.MinValue&amp;&amp;õ&lt;double.MaxValue);if(!ü.ͷ){ò=new Ǧ(ü.ʹ,ü.Ͷ,ă);ȴ(ā,ö,õ);}ñ=new Ƀ[Ò.Count];
for(int r=0;r&lt;Ò.Count;r++){Ƀ Û=new Ƀ();ñ[r]=Û;Û.ɂ=Ò[r];Û.ȼ=á[r];double ä,ã;Ʌ(Û.ɂ,out ä,out ã);Û.Ⱦ=(ä&gt;double.MinValue&amp;&amp;ã&lt;
double.MaxValue);Û.Ʉ=ä;Û.ɀ=ã;Ȗ(Û);if(!ü.ͷ){Û.Ⱥ=new Ǧ(ü.ʹ,ü.Ͷ,ă);ȴ(Û.ɂ,ä,ã);}Û.ȹ=Ø[r];if(ð.ź){Û.Ǿ=(int)Math.Ceiling((ð.ƃ*ό)/
Math.Max(Û.ȹ.Count,1));}}if(ñ.Length&gt;0){ƕ(ā,ñ[0],ref ù);}}public void ũ(ý â){đ=â.đ;ć=â.ć;Ć=â.Ć;Ą=â.Ą;î=â.î;à=â.à;è=â.è;ß=â.ß
;Þ=â.Þ;Ý=â.Ý;}public void ƕ(IMyMotorStator Ü,Ƀ Ȍ,ref double Ȝ){IMyMotorStator Û=Ȍ.ɂ;double Ȕ=Math.Cos(Û.Angle);double ȓ=
Math.Sin(Û.Angle);Vector3D ș=(Û.WorldMatrix.Backward*Ȕ)+(Û.WorldMatrix.Left*ȓ);Vector3D ț=(Û.WorldMatrix.Left*Ȕ)+(Û.
WorldMatrix.Forward*ȓ);double ȝ=Ȍ.Ɂ+Ȧ(Ȍ.ȼ.WorldMatrix.Forward,ș,ț);if(ȝ&gt;=MathHelperD.TwoPi)ȝ-=MathHelperD.TwoPi;Ȕ=Math.Cos(ȝ);ȓ=
Math.Sin(ȝ);Vector3D Ț=(Ȍ.ɂ.WorldMatrix.Backward*Ȕ)+(Ȍ.ɂ.WorldMatrix.Left*ȓ);Ȕ=Math.Cos(Ü.Angle);ȓ=Math.Sin(Ü.Angle);
Vector3D Ș=(Ü.WorldMatrix.Backward*Ȕ)+(Ü.WorldMatrix.Left*ȓ);Vector3D ȗ=(Ü.WorldMatrix.Left*Ȕ)+(Ü.WorldMatrix.Forward*ȓ);Ȝ=-Ȧ(Ț,
Ș,ȗ);Ȝ=(Math.Round(Ȝ/MathHelper.PiOver2)%4)*MathHelper.PiOver2;}public void Ȗ(Ƀ Û){IMyMotorStator ȕ=Û.ɂ;double Ȕ=Math.Cos
(ȕ.Angle);double ȓ=Math.Sin(ȕ.Angle);Vector3D ș=(ȕ.WorldMatrix.Backward*Ȕ)+(ȕ.WorldMatrix.Left*ȓ);Vector3D ț=(ȕ.
WorldMatrix.Left*Ȕ)+(ȕ.WorldMatrix.Forward*ȓ);Û.Ɂ=Ȧ(Û.ȼ.WorldMatrix.Forward,ș,ț);double Ȣ=ȕ.LowerLimitRad;double Ȭ=ȕ.UpperLimitRad;
double Ȫ;if(ȕ.LowerLimitDeg==float.MinValue||ȕ.UpperLimitDeg==float.MaxValue){Ȫ=ȕ.Angle+Û.Ɂ;}else{Ȫ=((Ȭ+Ȣ)*0.5)+Û.Ɂ;}Ȱ(ref Ȫ);
Ȕ=Math.Cos(Ȫ);ȓ=Math.Sin(Ȫ);Vector3D ȩ=(ȕ.WorldMatrix.Backward*Ȕ)+(ȕ.WorldMatrix.Left*ȓ);Vector3D Ȩ=ȕ.WorldMatrix.Up.
Cross(ā.WorldMatrix.Up);Û.Ƚ=(Ȩ.Dot(ȩ)&lt;0);double ȧ=Ȧ(ȕ.WorldMatrix.Backward,Û.Ƚ?-Ȩ:Ȩ,ā.WorldMatrix.Up);if(Û.Ƚ)ȧ=MathHelper.
TwoPi-ȧ;Û.Ɂ=-ȧ-Û.Ɂ;Û.Ɂ=(Math.Round(Û.Ɂ/MathHelper.PiOver2)%4)*MathHelper.PiOver2;}public double Ȧ(Vector3D ȥ,Vector3D Ȥ,
Vector3D ȫ){double ȣ=Math.Round(Ȥ.Dot(ȥ));if(ȣ==0){if(ȫ.Dot(ȥ)&gt;0)return MathHelperD.PiOver2;else return MathHelperD.PiOver2+
MathHelperD.Pi;}else{if(ȣ&gt;0)return 0;else return MathHelperD.Pi;}}public void ȡ(){ā.TargetVelocityRad=0f;for(int r=0;r&lt;ñ.Length;r++
){ñ[r].ɂ.TargetVelocityRad=0f;}}public bool Ƞ(){return(ā.IsWorking&amp;&amp;ā.IsAttached);}public bool ȟ(Ƀ Û){return(Û.ɂ.
IsWorking&amp;&amp;Û.ɂ.IsAttached&amp;&amp;Û.ȼ.IsFunctional);}public bool ȟ(){foreach(Ƀ Û in ñ){if(Û.ɂ.IsWorking&amp;&amp;Û.ɂ.IsAttached&amp;&amp;Û.ȼ.
IsFunctional){return true;}}return false;}public Ƀ Ȟ(){foreach(Ƀ Û in ñ){if(Û.ɂ.IsWorking&amp;&amp;Û.ɂ.IsAttached&amp;&amp;Û.ȼ.IsFunctional){return
Û;}}return ñ[0];}private bool ȉ(ĳ Ǝ,int ı,out Vector3D Í,out double Ȉ){Vector3D ȇ=ñ[0].ȼ.WorldMatrix.Translation;Vector3D
Ȇ;if(Ǝ.ķ!=null){Ȇ=ȅ(Ǝ,ı);}else{Ȇ=Ǝ.Ħ;}Vector3D s=(Ǝ.ĥ==ı?Ȇ:Ȇ+((ı-Ǝ.ĥ)*ύ*Ǝ.ġ));Vector3D Ə=(Č==null?Vector3D.Zero:Č.
GetShipVelocities().LinearVelocity);if(ð.Ž!=0){ȇ+=ñ[0].ȼ.WorldMatrix.Forward*ð.Ž;}s=ð.Ɣ(ref s,ref Ǝ.ġ,ref ȇ,ref Ə,Ǝ);if(double.IsNaN(s.
Sum)){Í=Vector3D.Zero;Ȉ=0;return false;}else{Í=s-ȇ;Ȉ=Í.Length();Í=(Ȉ==0?Vector3D.Zero:Í/Ȉ);return true;}}private Vector3D ȅ
(ĳ Ǝ,int ı){if(Ǝ.ķ?.Count==0||ı&gt;Ǝ.Ĝ+ϒ||Ǝ.ĝ==null){return Ǝ.Ħ;}bool Ȅ=false;if(Ą!=Ǝ.ħ){Ą=Ǝ.ħ;î=0;à=Vector3D.
TransformNormal(Ǝ.Ħ-Ǝ.Ĥ,MatrixD.Transpose(Ǝ.ĝ.Value));è=Ǝ.ķ[0].Ĵ;Ȅ=true;}else if(Ý&gt;1){î++;if(î&gt;=Ǝ.ķ.Count){î=0;}à=è;è=Ǝ.ķ[î].Ĵ;Ȅ=true;}
if(Ȅ){ß=ı;double ȃ=(à-è).Length();if(ȃ&lt;1){Þ=ύ;}else{Þ=ύ/ȃ*(ą*(Ǝ.Ĥ-ā.WorldMatrix.Translation).Length());}Ý=0;}Ý+=(ı-ß)*Þ;ß=
ı;return Ǝ.Ĥ+Vector3D.TransformNormal(Vector3D.Lerp(à,è,Ý),Ǝ.ĝ.Value);}private bool Ȃ(double ȁ,double Ȁ,int ı,bool ǿ=
false){ȁ+=ù;if(ȁ&gt;=MathHelperD.TwoPi)ȁ-=MathHelperD.TwoPi;double Î;if(ô){if(!ɓ(out Î,ȁ,ó,ö,õ)){return false;}}else{Î=ȁ-ó;if(Î&gt;
Math.PI)Î-=MathHelperD.TwoPi;else if(Î&lt;-Math.PI)Î+=MathHelperD.TwoPi;}if(!ǿ){if(ò==null){ā.TargetVelocityRad=Math.Min(ă,Math
.Max(-ă,(float)(Î*ü.Ͳ)));ɐ(ā,Î);}else{ā.TargetVelocityRad=(float)ò.ǵ(ó,ȁ,ı);}}for(int r=0;r&lt;ñ.Length;r++){Ƀ Ȓ=ñ[r];if(!ȟ(
Ȓ))continue;double ȑ;ȑ=Ȓ.Ȼ;double Ȑ=Ȁ;if(Ȓ.Ƚ){ȑ=Ȓ.Ɂ-ȑ;if(ȑ&lt;-MathHelperD.TwoPi)ȑ+=MathHelperD.TwoPi;Ȑ=Ȓ.Ɂ-Ȑ;if(Ȑ&lt;-
MathHelperD.TwoPi)Ȑ+=MathHelperD.TwoPi;}else{ȑ+=Ȓ.Ɂ;if(ȑ&gt;=MathHelperD.TwoPi)ȑ-=MathHelperD.TwoPi;Ȑ+=Ȓ.Ɂ;if(Ȑ&gt;=MathHelperD.TwoPi)Ȑ-=
MathHelperD.TwoPi;}double Ï;if(Ȓ.Ⱦ){if(!ɓ(out Ï,Ȑ,ȑ,Ȓ.Ʉ,Ȓ.ɀ)){return false;}}else{Ï=Ȑ-ȑ;if(Ï&gt;Math.PI)Ï-=MathHelperD.TwoPi;else if(Ï
&lt;-Math.PI)Ï+=MathHelperD.TwoPi;}if(!ǿ){if(Ȓ.Ⱥ==null){Ȓ.ɂ.TargetVelocityRad=Math.Min(ă,Math.Max(-ă,(float)(Ï*ü.Ͳ)));ɐ(Ȓ.ɂ,
Ï);}else{Ȓ.ɂ.TargetVelocityRad=(float)Ȓ.Ⱥ.ǵ(ȑ,Ȑ,ı);}}else{break;}}return true;}public bool ȏ(){long Ȏ=DateTime.Now.Ticks;
if(ď==null||Ď==null){return false;}if((ď.GetInventory()?.IsItemAt(0)??false)&amp;&amp;(!Ď.GetInventory()?.IsItemAt(0)??false)){
return true;}return false;}public bool ȍ(int ı){if(ď==null||Ď==null){return true;}if(Đ){Ċ=Ǖ.ƹ;return true;}else if(!Ƞ()||!ȟ())
{Ċ=Ǖ.ƹ;Đ=true;return true;}if(Ċ==Ǖ.ƹ){ȶ(true);Ċ=Ǖ.Ƹ;}Ƀ Ȍ=Ȟ();double Ȁ;switch(Ċ){case Ǖ.Ƹ:ɇ(ñ,Ȍ,ā);Ȁ=ĉ;if(Math.Abs(Ȁ-Ȍ.Ȼ)&gt;
0.0018){Ȃ(ó,Ȁ,ı,false);}else{Ċ=Ǖ.Ʒ;}break;case Ǖ.Ʒ:ɇ(ñ,Ȍ,ā);Ȁ=Ĉ;if(Math.Abs(Ȁ-Ȍ.Ȼ)&gt;0.0018){Ȃ(ó,Ȁ,ı,false);}else{Ċ=Ǖ.ƶ;}break;
case Ǖ.ƶ:if(Ď.Status==MyShipConnectorStatus.Connected){Ċ=Ǖ.Ƶ;}else if(Ď.Status==MyShipConnectorStatus.Connectable){if(ı&gt;=ĕ+
30){Ď.Connect();ĕ=ı;}}break;case Ǖ.Ƶ:if(ď.GetInventory()?.IsItemAt(0)??false){Ď.GetInventory()?.TransferItemFrom(ď.
GetInventory(),0,0,true);}Ď.Disconnect();ď.Disconnect();Ċ=Ǖ.ƹ;return true;}return false;}public bool ȋ(ĳ Ǝ,int ı){if(Đ){return false
;}else if(!Ƞ()||!ȟ()){Đ=true;return false;}if(Ċ!=Ǖ.ƹ){return false;}Vector3D Í;double Ȉ;bool Ȋ=ȉ(Ǝ,ı,out Í,out Ȉ);if(Ȋ){Ƀ
Ȍ=Ȟ();if(ô||Ȍ.Ⱦ){double ȁ,Ȁ;ɇ(ñ,Ȍ,ā);ɗ(Í,ā,out ȁ,out Ȁ);if(!Ȃ(ȁ,Ȁ,ı,true)){return false;}}if(ē!=null&amp;&amp;ē.Ʊ(Ȍ.ȼ.WorldMatrix
.Translation,Í)){return false;}if(Ȉ&lt;=ð.ž){return true;}}return false;}public bool ɍ(ĳ Ǝ,int ı){if(Đ){ȶ(true);ȡ();return
false;}else if(!Ƞ()||!ȟ()){ȶ(true);ȡ();Đ=true;return false;}if(Ċ!=Ǖ.ƹ){return false;}Vector3D Í;double Ȉ;bool Ȋ=ȉ(Ǝ,ı,out Í,
out Ȉ);if(Ȋ){Ƀ Ȍ=Ȟ();double ȁ,Ȁ;ɇ(ñ,Ȍ,ā);ɗ(Í,ā,out ȁ,out Ȁ);if(Ȃ(ȁ,Ȁ,ı,false)){if(ē!=null&amp;&amp;ē.Ʊ(Ȍ.ȼ.WorldMatrix.Translation,
Í)){ȶ();ȡ();return false;}if(Ȉ&lt;=ð.ž){bool Ɍ=false;foreach(Ƀ Û in ñ){double ɋ=Û.ȼ.WorldMatrix.Forward.Dot(Í);bool Ɋ=(ɋ&gt;=ü.
ͻ);if(!Ɋ&amp;&amp;ɋ&gt;=ϖ&amp;&amp;ć==Ǝ.ħ){double ɉ=Û.ȼ.WorldMatrix.Forward.Dot(Ć);double Ɉ=Í.Dot(Ć);Ɋ=(ɉ&gt;=ü.ͻ)||(ɋ&gt;=Ɉ&amp;&amp;ɉ&gt;=Ɉ);}if(Ɋ){ȯ(Û,ı,ð
.ź);Ɍ=true;}else{ȶ(Û);}}if(Ɍ){Ǝ.Ļ+=Ē;}ć=Ǝ.ħ;Ć=Í;return true;}}}ȶ();ȡ();return false;}public void ɇ(Ƀ[]Ò,Ƀ Ȍ,
IMyMotorStator Ɏ){ó=Ɏ.Angle;Ȱ(ref ó);foreach(Ƀ Û in Ò){if(Û==Ȍ||ȟ(Û)){double ɔ=Û.ȼ.WorldMatrix.Forward.Dot(Ɏ.WorldMatrix.Up);Û.Ȼ=
MathHelperD.PiOver2-Math.Acos(MathHelper.Clamp(ɔ,-1,1));}}}public void ɗ(Vector3D ƣ,IMyMotorStator Ɏ,out double ɖ,out double ɕ){
double ɔ=ƣ.Dot(Ɏ.WorldMatrix.Up);ɕ=MathHelperD.PiOver2-Math.Acos(MathHelper.Clamp(ɔ,-1,1));double Ȕ=Math.Cos(ɕ);Vector3D ɘ=(Ȕ
==0?Vector3D.Zero:(ƣ-(Ɏ.WorldMatrix.Up*ɔ))/Ȕ);ɖ=Math.Acos(MathHelper.Clamp(Ɏ.WorldMatrix.Backward.Dot(ɘ),-1,1));if(Ɏ.
WorldMatrix.Right.Dot(ɘ)&gt;0)ɖ=MathHelperD.TwoPi-ɖ;}public bool ɓ(out double ɒ,double Ɇ,double ɑ,double Ȣ,double Ȭ){Ȭ-=Ȣ;Ɇ-=Ȣ;ɑ-=Ȣ;Ȱ(
ref Ȭ);Ȱ(ref Ɇ);Ȱ(ref ɑ);if(Ɇ&gt;=0&amp;&amp;Ɇ&lt;=Ȭ){if(ɑ&gt;Ȭ){ɑ=(ɑ-Ȭ&lt;=MathHelperD.TwoPi-ɑ?Ȭ:0);}ɒ=Ɇ-ɑ;return true;}else{ɒ=0;return false;
}}public void ɐ(IMyMotorStator ȕ,double ɏ){float Ɇ=ȕ.Angle+(float)ɏ;if(Ɇ&lt;-MathHelper.TwoPi||Ɇ&gt;MathHelper.TwoPi){ȕ.
SetValueFloat("LowerLimit",float.MinValue);ȕ.SetValueFloat("UpperLimit",float.MaxValue);}else if(ɏ&lt;0){ȕ.UpperLimitRad=ȕ.Angle;ȕ.
LowerLimitRad=Ɇ;}else if(ɏ&gt;0){ȕ.LowerLimitRad=ȕ.Angle;ȕ.UpperLimitRad=Ɇ;}}public void Ʌ(IMyMotorStator ȕ,out double Ȣ,out double Ȭ){
double ȳ=double.MinValue;double Ȳ=double.MaxValue;if(ü.ͷ){MyIni ȱ=new MyIni();ȱ.TryParse(ȕ.CustomData);ȳ=ȱ.Get(Ͼ,"LowerLimit")
.ToDouble(ȳ);Ȳ=ȱ.Get(Ͼ,"UpperLimit").ToDouble(Ȳ);if(ȳ==double.MinValue||Ȳ==double.MaxValue){ȳ=MathHelper.Clamp(Math.Round
(ȕ.LowerLimitDeg,3),-361,361);Ȳ=MathHelper.Clamp(Math.Round(ȕ.UpperLimitDeg,3),-361,361);ȱ.Set(Ͼ,"LowerLimit",ȳ);ȱ.Set(Ͼ,
"UpperLimit",Ȳ);ȕ.CustomData=ȱ.ToString();}}else{ȳ=MathHelper.Clamp(Math.Round(ȕ.LowerLimitDeg,3),-361,361);Ȳ=MathHelper.Clamp(Math.
Round(ȕ.UpperLimitDeg,3),-361,361);}if(ȳ&lt;-360)ȳ=double.MinValue;if(Ȳ&gt;360)Ȳ=double.MaxValue;if(Ȳ&lt;ȳ||Ȳ-ȳ&gt;=360){ȳ=double.
MinValue;Ȳ=double.MaxValue;}if(ȳ&gt;double.MinValue&amp;&amp;Ȳ&lt;double.MaxValue){Ȣ=MathHelperD.ToRadians(ȳ);Ȭ=MathHelperD.ToRadians(Ȳ);}else
{Ȣ=double.MinValue;Ȭ=double.MaxValue;}}public void Ȱ(ref double ǭ){if(ǭ&lt;0){if(ǭ&lt;=-MathHelperD.TwoPi)ǭ+=MathHelperD.FourPi
;else ǭ+=MathHelperD.TwoPi;}else if(ǭ&gt;=MathHelperD.TwoPi){if(ǭ&gt;=MathHelperD.FourPi)ǭ-=MathHelperD.FourPi;else ǭ-=
MathHelperD.TwoPi;}}public void ȴ(IMyMotorStator ȕ,double Ȣ,double Ȭ){if(Ȣ==double.MinValue)ȕ.SetValueFloat("LowerLimit",float.
MinValue);else ȕ.LowerLimitRad=(float)Ȣ;if(Ȭ==double.MaxValue)ȕ.SetValueFloat("UpperLimit",float.MaxValue);else ȕ.UpperLimitRad=
(float)Ȭ;}public void ȯ(Ƀ Û,int ǲ,bool Ȯ){if(Ȯ){if(Û.ȹ.Count&gt;0&amp;&amp;Û.ȵ&lt;=ǲ){if(Û.ȷ&gt;=Û.ȹ.Count){Û.ȷ=0;}IMyUserControllableGun
ȭ=Û.ȹ[Û.ȷ];Ĕ.Apply(ȭ);Û.ȵ=ǲ+Û.Ǿ;Û.ȷ++;}}else{if(!Û.ȸ){foreach(IMyUserControllableGun ȭ in Û.ȹ){Ė.SetValue(ȭ,true);}Û.ȸ=
true;}}}public void ȶ(bool ȿ=false){foreach(Ƀ Û in ñ){ȶ(Û,ȿ);}}public void ȶ(Ƀ Û,bool ȿ=false){if(Û.ȸ||ȿ){foreach(
IMyUserControllableGun ȭ in Û.ȹ){Ė.SetValue(ȭ,false);}Û.ȸ=false;}}public class Ƀ{public IMyMotorStator ɂ;public double Ɂ;public double Ʉ;
public double ɀ;public bool Ⱦ;public bool Ƚ;public IMyTerminalBlock ȼ;public double Ȼ;public Ǧ Ⱥ;public List&lt;
IMyUserControllableGun&gt;ȹ;public bool ȸ;public int ȷ;public int ȵ;public int Ǿ;}public enum Ǖ{ƹ,Ƹ,Ʒ,ƶ,Ƶ}}class ƴ{public IMyCubeGrid Â;public
Vector3I ƺ;public ƴ(IMyCubeGrid C,Vector3I Ʃ){Â=C;ƺ=Ʃ;}}interface Ʋ{bool Ʊ(Vector3 Ʃ,Vector3 ƣ);}class ư:Ʋ{public Vector3I[]Ƴ={
Vector3I.Left,Vector3I.Right,Vector3I.Up,Vector3I.Down,Vector3I.Forward,Vector3I.Backward};public MyDynamicAABBTree ƻ;public
IMyCubeGrid Â;public ư(){}public IEnumerator&lt;int&gt;ǂ(ƴ Ɩ,List&lt;ƴ&gt;ƥ,float ƭ,int ǁ){if(ǁ&lt;=0)ǁ=1000000000;int ǀ=0;Â=Ɩ.Â;ƻ=new
MyDynamicAABBTree();Vector3 ƪ=new Vector3(0.5f*Â.GridSize);if(ƭ!=0f){ƪ+=new Vector3(ƭ);}Stack&lt;Vector3I&gt;ǃ=new Stack&lt;Vector3I&gt;();HashSet&lt;
Vector3I&gt;ƿ=new HashSet&lt;Vector3I&gt;();BoundingBox ƾ;ǃ.Push(Ɩ.ƺ);ƿ.Add(Ɩ.ƺ);ƾ=new BoundingBox((Ɩ.ƺ*Â.GridSize)-ƪ,(Ɩ.ƺ*Â.GridSize)+ƪ)
;ƻ.AddProxy(ref ƾ,ƾ,0);Vector3I ƽ;while(ǃ.Count&gt;0){Vector3I Ƽ=ǃ.Pop();for(int r=0;r&lt;6;r++){ƽ=Ƽ+Ƴ[r];if(!ƿ.Contains(ƽ)){ƿ.
Add(ƽ);if(Â.CubeExists(ƽ)){ǃ.Push(ƽ);ƾ=new BoundingBox((ƽ*Â.GridSize)-ƪ,(ƽ*Â.GridSize)+ƪ);ƻ.AddProxy(ref ƾ,ƾ,0);}}}ǀ++;if(ǀ
%ǁ==0){yield return ǀ;}}Dictionary&lt;IMyCubeGrid,ƴ&gt;ƫ=new Dictionary&lt;IMyCubeGrid,ƴ&gt;();foreach(ƴ Ƨ in ƥ){if(!ƫ.ContainsKey(Ƨ.
Â)){ƫ.Add(Ƨ.Â,Ƨ);}}MatrixD Ƣ=Â.WorldMatrix;MatrixD.Transpose(ref Ƣ,out Ƣ);foreach(ƴ Ƨ in ƫ.Values){if(Ƨ.Â!=Â){Vector3 Ʈ=
Vector3D.TransformNormal((Ƨ.Â.WorldAABB.Min-Â.WorldMatrix.Translation),ref Ƣ);Vector3 Ƥ=Vector3D.TransformNormal((Ƨ.Â.WorldAABB.
Max-Â.WorldMatrix.Translation),ref Ƣ);ƾ=new BoundingBox(Ʈ-ƪ,Ƥ+ƪ);ƻ.AddProxy(ref ƾ,ƾ,0);}}}public bool Ʊ(Vector3 Ʃ,Vector3 ƣ
){MatrixD Ƣ=Â.WorldMatrix;MatrixD.Transpose(ref Ƣ,out Ƣ);Line Ơ=new Line(Vector3D.TransformNormal(Ʃ-Â.WorldMatrix.
Translation,ref Ƣ),Vector3D.TransformNormal(ƣ,ref Ƣ)*1000);return ơ(ref Ơ);}public bool ơ(ref Line Ơ){List&lt;
MyLineSegmentOverlapResult&lt;BoundingBox&gt;&gt;Ɵ=new List&lt;MyLineSegmentOverlapResult&lt;BoundingBox&gt;&gt;(0);ƻ.OverlapAllLineSegment(ref Ơ,Ɵ);foreach(
MyLineSegmentOverlapResult&lt;BoundingBox&gt;ƞ in Ɵ){if(ƞ.Element.Extents.LengthSquared()&lt;(Ơ.From-ƞ.Element.Center).LengthSquared()){return true;}}
return false;}}class Ɲ:Ʋ{private int Ɯ=40;public IMyCubeGrid Â;public BoundingBox ƛ;double ƚ;public List&lt;IMyCubeGrid&gt;ƙ;public
float Ƙ;public bool Ɨ;public Ɲ(ƴ Ɩ,List&lt;ƴ&gt;ƥ,float ƭ){Â=Ɩ.Â;ƛ=new BoundingBox(Â.Min,Â.Max);ƚ=1.0/Â.GridSize;if(ƭ!=0){Ɨ=true;Ƙ=
Â.GridSize*0.5f+ƭ;}else{Ɨ=false;Ƙ=0f;}Dictionary&lt;IMyCubeGrid,ƴ&gt;ƫ=new Dictionary&lt;IMyCubeGrid,ƴ&gt;();foreach(ƴ Ƨ in ƥ){if(!ƫ.
ContainsKey(Ƨ.Â)){ƫ.Add(Ƨ.Â,Ƨ);}}ƙ=new List&lt;IMyCubeGrid&gt;(ƫ.Count);MatrixD Ƣ=Â.WorldMatrix;MatrixD.Transpose(ref Ƣ,out Ƣ);Vector3 ƪ=
new Vector3(Ƙ);foreach(ƴ Ƨ in ƫ.Values){if(Ƨ.Â!=Â){ƙ.Add(Ƨ.Â);}}}public bool Ʊ(Vector3 Ʃ,Vector3 ƣ){float Ƭ;if(Â.WorldAABB.
Contains(Ʃ)==ContainmentType.Disjoint){double?Ɵ=Â.WorldAABB.Intersects(new Ray(Ʃ,ƣ));if(Ɵ==null){return false;}Ƭ=(float)Ɵ.Value;
}else{double?Ɵ=Â.WorldAABB.Intersects(new Ray(Ʃ+(ƣ*5000),-ƣ));if(Ɵ==null){return false;}Ƭ=5000f-(float)Ɵ.Value;}MatrixD Ƣ
=Â.WorldMatrix;MatrixD.Transpose(ref Ƣ,out Ƣ);Line Ơ=new Line(Vector3D.TransformNormal(Ʃ-Â.WorldMatrix.Translation,ref Ƣ)
*ƚ,Vector3D.TransformNormal(Ʃ+(ƣ*Ƭ)-Â.WorldMatrix.Translation,ref Ƣ)*ƚ);if(ơ(ref Ơ)){return true;}if(ƙ.Count&gt;0){RayD ƨ=
new RayD(Ʃ,ƣ);foreach(IMyCubeGrid Ƨ in ƙ){if(Ƨ.WorldAABB.Intersects(ƨ)!=null){if(Ƨ.WorldAABB.Extents.LengthSquared()&lt;(ƨ.
Position-Ƨ.WorldAABB.Center).LengthSquared()){return true;}}}}return false;}public bool ơ(ref Line Ơ){int Ư=Math.Min((int)Math.
Ceiling(Ơ.Length),Ɯ);float Ʀ=1.0f/Ư*Ơ.Length;Vector3I Ʃ=new Vector3I((int)Math.Round(Ơ.From.X),(int)Math.Round(Ơ.From.Y),(int)
Math.Round(Ơ.From.Z));for(int r=1;r&lt;=Ư;r++){Vector3 Ǫ=Ơ.From+(Ơ.Direction*Ʀ*r);Vector3I ǩ=new Vector3I((int)Math.Round(Ǫ.X),
(int)Math.Round(Ǫ.Y),(int)Math.Round(Ǫ.Z));if(Â.CubeExists(ǩ)){if(ǩ!=Ʃ){if(Ɨ){double Ǩ=Math.Min(Math.Abs(Ǫ.X-ǩ.X),Math.
Min(Math.Abs(Ǫ.Y-ǩ.Y),Math.Abs(Ǫ.Z-ǩ.Z)));if(Ǩ&lt;=Ƙ){return true;}}else{return true;}}}}return false;}}class ǧ{public long ħ;
public Vector3D Ħ;public Vector3D ġ;}class ǫ{public long ħ;public Vector3D Ħ;public Vector3D ġ;public bool ě;public double ǥ;
public int Ğ;public ǫ(long Ķ){ħ=Ķ;}}class Ǧ{const int Ǭ=3;double Ǵ;double ǽ;double ǻ;double Ǻ;double ǹ;int Ǹ;public Ǧ(double Ƿ
,double Ƕ,double Ǽ){Ǵ=Ƿ;ǽ=Ƕ;ǻ=Ǽ;}public double ǵ(double Ƽ,double ǳ,int ǲ){int Ǳ=Math.Max(ǲ-Ǹ,1);double ǰ=ǳ-ǹ;if(Ǳ&lt;Ǭ){ǰ*=(
double)Ǭ/Ǳ;Ǳ=Ǭ;}Ǯ(ref ǰ);if(Ǻ*ǰ&lt;0){Ǻ=(ǽ*ǰ);}else{Ǻ=((1-ǽ)*Ǻ)+(ǽ*ǰ);}double ǯ=ǳ-Ƽ+Ǻ;Ǯ(ref ǯ);ǹ=ǳ;Ǹ=Math.Max(ǲ,Ǹ);return
MathHelper.Clamp(ǯ*Ǵ/Ǳ,-ǻ,ǻ);}public void Ǯ(ref double ǭ){if(ǭ&lt;-Math.PI){ǭ+=MathHelperD.TwoPi;if(ǭ&lt;-Math.PI)ǭ+=MathHelperD.TwoPi;}
else if(ǭ&gt;Math.PI){ǭ-=MathHelperD.TwoPi;if(ǭ&gt;Math.PI)ǭ-=MathHelperD.TwoPi;}}public void Ǥ(){Ǹ=0;Ǻ=ǹ=0;}}class ǣ{public int Ǆ
;public double Ǔ;public double ǒ;public double Ǒ;public double ǐ;public double Ǐ;public IMyGridProgramRuntimeInfo ǎ{get;
private set;}public Queue&lt;double&gt;Ǎ=new Queue&lt;double&gt;();public Queue&lt;double&gt;ǔ=new Queue&lt;double&gt;();public Dictionary&lt;string,ǘ&gt;ǌ=
new Dictionary&lt;string,ǘ&gt;();private double Ǌ;private double ǉ;public ǣ(IMyGridProgramRuntimeInfo ǈ,int Ǉ,double ǆ){ǎ=ǈ;Ǆ=Ǉ;Ǔ
=ǆ;Ǌ=6;ǉ=100.0/(ǎ.MaxInstructionCount==0?50000:ǎ.MaxInstructionCount);}public void ǅ(){ǒ=0;Ǎ.Clear();Ǒ=0;ǐ=0;ǔ.Clear();Ǐ=
0;}public void ǋ(){double ǈ=ǎ.LastRunTimeMs;ǒ+=(ǈ-ǒ)*Ǔ;Ǎ.Enqueue(ǈ);if(Ǎ.Count&gt;Ǆ)Ǎ.Dequeue();Ǒ=Ǎ.Max();}public void ǜ(){
double Ǣ=ǎ.CurrentInstructionCount;ǐ+=(Ǣ-ǐ)*Ǔ;ǔ.Enqueue(Ǣ);if(ǔ.Count&gt;Ǆ)ǔ.Dequeue();Ǐ=ǔ.Max();}public void ǡ(StringBuilder ǚ){
ǚ.AppendLine($"Avg Runtime = {ǒ:0.0000}ms   ({ǒ*Ǌ:0.00}%)");ǚ.AppendLine($"Peak Runtime = {Ǒ:0.0000}ms\n");ǚ.AppendLine(
$"Avg Complexity = {ǐ:0.00}   ({ǐ*ǉ:0.00}%)");ǚ.AppendLine($"Peak Complexity = {Ǐ:0.00}");}public void Ǡ(string ǝ){ǘ ǟ;if(ǌ.ContainsKey(ǝ)){ǟ=ǌ[ǝ];}else{ǟ=new ǘ();ǌ
[ǝ]=ǟ;}ǟ.ǖ=DateTime.Now.Ticks;}public void Ǟ(string ǝ){ǘ ǟ;if(ǌ.TryGetValue(ǝ,out ǟ)){long Ƽ=DateTime.Now.Ticks;double ǈ=
(Ƽ-ǟ.ǖ)*0.0001;ǟ.Ǘ++;ǟ.ň+=ǈ;ǟ.ǖ=Ƽ;}}public void Ǜ(StringBuilder ǚ){foreach(KeyValuePair&lt;string,ǘ&gt;Ǚ in ǌ){double ǈ=(Ǚ.
Value.Ǘ==0?0:Ǚ.Value.ň/Ǚ.Value.Ǘ);ǚ.AppendLine($"{Ǚ.Key} = {ǈ:0.0000}ms");}}public class ǘ{public long Ǘ;public double ň;
public long ǖ;}}</Program>
              <Storage />
              <TextPanels>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
              </TextPanels>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RemoteControl">
              <SubtypeName>SmallBlockRemoteControl</SubtypeName>
              <EntityId>128485378294518787</EntityId>
              <Min x="0" y="7" z="9" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Remote Control</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <UseSingleWeaponMode>false</UseSingleWeaponMode>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
                <SlotsGamepad />
              </Toolbar>
              <SelectedGunId xsi:nil="true" />
              <BuildToolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
                <SlotsGamepad />
              </BuildToolbar>
              <PreviousControlledEntityId xsi:nil="true" />
              <AutoPilotEnabled>false</AutoPilotEnabled>
              <FlightMode>0</FlightMode>
              <BindedCamera>0</BindedCamera>
              <CurrentWaypointIndex>-1</CurrentWaypointIndex>
              <Waypoints />
              <Direction>0</Direction>
              <DockingModeEnabled>false</DockingModeEnabled>
              <CollisionAvoidance>false</CollisionAvoidance>
              <Coords />
              <Names />
              <WaypointThresholdDistance>0</WaypointThresholdDistance>
              <IsMainRemoteControl>false</IsMainRemoteControl>
              <WaitForFreeWay>false</WaitForFreeWay>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
              <EntityId>102776850831376413</EntityId>
              <Min x="-1" y="6" z="11" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Cyclone Battery 02</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.995357752</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>142880716738096564</EntityId>
              <Min x="0" y="8" z="10" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
              <ShareMode>Faction</ShareMode>
              <CustomName>Gyroscope</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="8" z="10" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="8" z="10" />
              <ColorMaskHSV x="0" y="-0.8" z="0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="5" z="10" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="7" z="10" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="7" z="10" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="5" z="10" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.2" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallThrust</SubtypeName>
              <EntityId>74419820760633042</EntityId>
              <Min x="4" y="6" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyTimerComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_TimerComponent">
                      <Repeat>true</Repeat>
                      <TimeToEvent>0</TimeToEvent>
                      <SetTimeMinutes>0</SetTimeMinutes>
                      <TimerEnabled>true</TimerEnabled>
                      <RemoveEntityOnTimer>false</RemoveEntityOnTimer>
                      <TimerType>Frame100</TimerType>
                      <FramesFromLastTrigger>0</FramesFromLastTrigger>
                      <TimerTickInFrames>100</TimerTickInFrames>
                      <IsSessionUpdateEnabled>false</IsSessionUpdateEnabled>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>false</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="6" z="3" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="6" z="3" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-3" y="6" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="3" y="6" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="-0.1" />
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <XMirroxPlane x="0" y="6" z="-4" />
          <ConveyorLines>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="7" z="3" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="0" y="7" z="4" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="6" z="3" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="0" y="5" z="3" />
              <EndDirection>Up</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="6" z="-2" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="0" y="6" z="-3" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="1" y="5" z="-2" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="0" y="5" z="-2" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="5" z="-2" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="0" y="5" z="-2" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="5" z="-2" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="0" y="5" z="-1" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="6" z="5" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="0" y="6" z="6" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="8" z="5" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="0" y="8" z="6" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="5" z="3" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="0" y="5" z="2" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="5" z="-1" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="0" y="5" z="0" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="5" z="-1" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="-1" y="5" z="-1" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="5" z="-1" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="1" y="5" z="-1" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="5" z="0" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="0" y="5" z="1" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="5" z="-1" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="-2" y="5" z="-1" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="5" z="1" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="0" y="5" z="2" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="1" y="5" z="-1" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="2" y="5" z="-1" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="6" z="9" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="4" y="6" z="10" />
              <EndDirection>Right</EndDirection>
              <Sections>
                <Section Direction="Backward" Length="1" />
                <Section Direction="Left" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="6" z="8" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="0" y="6" z="9" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="6" z="10" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="0" y="6" z="10" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="2" y="6" z="10" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="1" y="6" z="10" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="3" y="6" z="10" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="2" y="6" z="10" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-2" y="6" z="10" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="-1" y="6" z="10" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-4" y="6" z="10" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="-3" y="6" z="10" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-3" y="6" z="10" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="-2" y="6" z="10" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="6" z="10" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="3" y="6" z="10" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="6" z="9" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="0" y="6" z="10" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-5" y="6" z="9" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="-4" y="6" z="10" />
              <EndDirection>Left</EndDirection>
              <Sections>
                <Section Direction="Backward" Length="1" />
                <Section Direction="Right" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="1" y="6" z="10" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="0" y="6" z="10" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
          </ConveyorLines>
          <BlockGroups>
            <MyObjectBuilder_BlockGroup>
              <Name>Cyclone Ammunition Containers</Name>
              <Blocks>
                <Vector3I>
                  <X>-1</X>
                  <Y>5</Y>
                  <Z>-1</Z>
                </Vector3I>
                <Vector3I>
                  <X>-4</X>
                  <Y>6</Y>
                  <Z>10</Z>
                </Vector3I>
                <Vector3I>
                  <X>-3</X>
                  <Y>6</Y>
                  <Z>10</Z>
                </Vector3I>
                <Vector3I>
                  <X>-2</X>
                  <Y>6</Y>
                  <Z>10</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>6</Y>
                  <Z>10</Z>
                </Vector3I>
                <Vector3I>
                  <X>2</X>
                  <Y>6</Y>
                  <Z>10</Z>
                </Vector3I>
                <Vector3I>
                  <X>1</X>
                  <Y>5</Y>
                  <Z>-1</Z>
                </Vector3I>
                <Vector3I>
                  <X>0</X>
                  <Y>5</Y>
                  <Z>0</Z>
                </Vector3I>
                <Vector3I>
                  <X>0</X>
                  <Y>5</Y>
                  <Z>1</Z>
                </Vector3I>
                <Vector3I>
                  <X>0</X>
                  <Y>5</Y>
                  <Z>2</Z>
                </Vector3I>
                <Vector3I>
                  <X>0</X>
                  <Y>6</Y>
                  <Z>-3</Z>
                </Vector3I>
                <Vector3I>
                  <X>4</X>
                  <Y>6</Y>
                  <Z>10</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>Cyclone Landing Gear</Name>
              <Blocks>
                <Vector3I>
                  <X>-3</X>
                  <Y>3</Y>
                  <Z>7</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>3</Y>
                  <Z>7</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>Cyclone Batteries</Name>
              <Blocks>
                <Vector3I>
                  <X>-3</X>
                  <Y>5</Y>
                  <Z>7</Z>
                </Vector3I>
                <Vector3I>
                  <X>0</X>
                  <Y>7</Y>
                  <Z>11</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>5</Y>
                  <Z>7</Z>
                </Vector3I>
                <Vector3I>
                  <X>-4</X>
                  <Y>7</Y>
                  <Z>6</Z>
                </Vector3I>
                <Vector3I>
                  <X>-2</X>
                  <Y>7</Y>
                  <Z>7</Z>
                </Vector3I>
                <Vector3I>
                  <X>-2</X>
                  <Y>7</Y>
                  <Z>6</Z>
                </Vector3I>
                <Vector3I>
                  <X>-2</X>
                  <Y>7</Y>
                  <Z>8</Z>
                </Vector3I>
                <Vector3I>
                  <X>-3</X>
                  <Y>5</Y>
                  <Z>9</Z>
                </Vector3I>
                <Vector3I>
                  <X>-3</X>
                  <Y>5</Y>
                  <Z>5</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>5</Y>
                  <Z>5</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>5</Y>
                  <Z>9</Z>
                </Vector3I>
                <Vector3I>
                  <X>-4</X>
                  <Y>7</Y>
                  <Z>8</Z>
                </Vector3I>
                <Vector3I>
                  <X>-4</X>
                  <Y>7</Y>
                  <Z>7</Z>
                </Vector3I>
                <Vector3I>
                  <X>4</X>
                  <Y>7</Y>
                  <Z>6</Z>
                </Vector3I>
                <Vector3I>
                  <X>4</X>
                  <Y>7</Y>
                  <Z>8</Z>
                </Vector3I>
                <Vector3I>
                  <X>2</X>
                  <Y>7</Y>
                  <Z>7</Z>
                </Vector3I>
                <Vector3I>
                  <X>2</X>
                  <Y>7</Y>
                  <Z>8</Z>
                </Vector3I>
                <Vector3I>
                  <X>2</X>
                  <Y>7</Y>
                  <Z>6</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>Cyclone Thrusters</Name>
              <Blocks>
                <Vector3I>
                  <X>-1</X>
                  <Y>4</Y>
                  <Z>3</Z>
                </Vector3I>
                <Vector3I>
                  <X>1</X>
                  <Y>4</Y>
                  <Z>3</Z>
                </Vector3I>
                <Vector3I>
                  <X>1</X>
                  <Y>5</Y>
                  <Z>4</Z>
                </Vector3I>
                <Vector3I>
                  <X>1</X>
                  <Y>5</Y>
                  <Z>5</Z>
                </Vector3I>
                <Vector3I>
                  <X>-1</X>
                  <Y>5</Y>
                  <Z>4</Z>
                </Vector3I>
                <Vector3I>
                  <X>-3</X>
                  <Y>7</Y>
                  <Z>10</Z>
                </Vector3I>
                <Vector3I>
                  <X>-1</X>
                  <Y>5</Y>
                  <Z>5</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>7</Y>
                  <Z>6</Z>
                </Vector3I>
                <Vector3I>
                  <X>-3</X>
                  <Y>7</Y>
                  <Z>11</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>7</Y>
                  <Z>8</Z>
                </Vector3I>
                <Vector3I>
                  <X>4</X>
                  <Y>5</Y>
                  <Z>5</Z>
                </Vector3I>
                <Vector3I>
                  <X>-3</X>
                  <Y>5</Y>
                  <Z>10</Z>
                </Vector3I>
                <Vector3I>
                  <X>-4</X>
                  <Y>5</Y>
                  <Z>9</Z>
                </Vector3I>
                <Vector3I>
                  <X>-3</X>
                  <Y>5</Y>
                  <Z>11</Z>
                </Vector3I>
                <Vector3I>
                  <X>-4</X>
                  <Y>5</Y>
                  <Z>5</Z>
                </Vector3I>
                <Vector3I>
                  <X>-3</X>
                  <Y>7</Y>
                  <Z>12</Z>
                </Vector3I>
                <Vector3I>
                  <X>-3</X>
                  <Y>5</Y>
                  <Z>12</Z>
                </Vector3I>
                <Vector3I>
                  <X>-3</X>
                  <Y>7</Y>
                  <Z>6</Z>
                </Vector3I>
                <Vector3I>
                  <X>-1</X>
                  <Y>5</Y>
                  <Z>9</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>7</Y>
                  <Z>10</Z>
                </Vector3I>
                <Vector3I>
                  <X>0</X>
                  <Y>8</Y>
                  <Z>13</Z>
                </Vector3I>
                <Vector3I>
                  <X>-1</X>
                  <Y>5</Y>
                  <Z>10</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>7</Y>
                  <Z>11</Z>
                </Vector3I>
                <Vector3I>
                  <X>-3</X>
                  <Y>7</Y>
                  <Z>8</Z>
                </Vector3I>
                <Vector3I>
                  <X>1</X>
                  <Y>5</Y>
                  <Z>9</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>7</Y>
                  <Z>12</Z>
                </Vector3I>
                <Vector3I>
                  <X>1</X>
                  <Y>5</Y>
                  <Z>10</Z>
                </Vector3I>
                <Vector3I>
                  <X>-1</X>
                  <Y>5</Y>
                  <Z>11</Z>
                </Vector3I>
                <Vector3I>
                  <X>1</X>
                  <Y>5</Y>
                  <Z>11</Z>
                </Vector3I>
                <Vector3I>
                  <X>-1</X>
                  <Y>5</Y>
                  <Z>13</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>5</Y>
                  <Z>10</Z>
                </Vector3I>
                <Vector3I>
                  <X>1</X>
                  <Y>5</Y>
                  <Z>13</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>5</Y>
                  <Z>11</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>7</Y>
                  <Z>5</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>5</Y>
                  <Z>12</Z>
                </Vector3I>
                <Vector3I>
                  <X>4</X>
                  <Y>5</Y>
                  <Z>9</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>7</Y>
                  <Z>9</Z>
                </Vector3I>
                <Vector3I>
                  <X>-3</X>
                  <Y>7</Y>
                  <Z>5</Z>
                </Vector3I>
                <Vector3I>
                  <X>-3</X>
                  <Y>7</Y>
                  <Z>9</Z>
                </Vector3I>
                <Vector3I>
                  <X>-4</X>
                  <Y>7</Y>
                  <Z>5</Z>
                </Vector3I>
                <Vector3I>
                  <X>-3</X>
                  <Y>7</Y>
                  <Z>4</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>7</Y>
                  <Z>4</Z>
                </Vector3I>
                <Vector3I>
                  <X>4</X>
                  <Y>7</Y>
                  <Z>5</Z>
                </Vector3I>
                <Vector3I>
                  <X>2</X>
                  <Y>6</Y>
                  <Z>14</Z>
                </Vector3I>
                <Vector3I>
                  <X>-2</X>
                  <Y>6</Y>
                  <Z>14</Z>
                </Vector3I>
                <Vector3I>
                  <X>0</X>
                  <Y>6</Y>
                  <Z>14</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>Cyclone Lights</Name>
              <Blocks>
                <Vector3I>
                  <X>0</X>
                  <Y>3</Y>
                  <Z>0</Z>
                </Vector3I>
                <Vector3I>
                  <X>0</X>
                  <Y>10</Y>
                  <Z>13</Z>
                </Vector3I>
                <Vector3I>
                  <X>-5</X>
                  <Y>4</Y>
                  <Z>14</Z>
                </Vector3I>
                <Vector3I>
                  <X>5</X>
                  <Y>4</Y>
                  <Z>14</Z>
                </Vector3I>
                <Vector3I>
                  <X>-5</X>
                  <Y>8</Y>
                  <Z>14</Z>
                </Vector3I>
                <Vector3I>
                  <X>5</X>
                  <Y>8</Y>
                  <Z>14</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>Cyclone Armaments</Name>
              <Blocks>
                <Vector3I>
                  <X>7</X>
                  <Y>6</Y>
                  <Z>7</Z>
                </Vector3I>
                <Vector3I>
                  <X>-7</X>
                  <Y>6</Y>
                  <Z>7</Z>
                </Vector3I>
                <Vector3I>
                  <X>2</X>
                  <Y>5</Y>
                  <Z>-1</Z>
                </Vector3I>
                <Vector3I>
                  <X>1</X>
                  <Y>5</Y>
                  <Z>-2</Z>
                </Vector3I>
                <Vector3I>
                  <X>-1</X>
                  <Y>5</Y>
                  <Z>-2</Z>
                </Vector3I>
                <Vector3I>
                  <X>-2</X>
                  <Y>5</Y>
                  <Z>-1</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>DDS Designators</Name>
              <Blocks>
                <Vector3I>
                  <X>-7</X>
                  <Y>6</Y>
                  <Z>7</Z>
                </Vector3I>
                <Vector3I>
                  <X>7</X>
                  <Y>6</Y>
                  <Z>7</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
          </BlockGroups>
          <DisplayName>GVE-NPC Cyclone Fighter Bomber</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
      </CubeGrids>
      <EnvironmentType>None</EnvironmentType>
    </Prefab>
  </Prefabs>
</Definitions>